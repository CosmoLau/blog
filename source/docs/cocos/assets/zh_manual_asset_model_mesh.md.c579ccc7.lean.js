import{_ as t,v as e,b as l,R as s}from"./chunks/framework.5ffcbaff.js";const a="/docs/cocos/assets/mesh_list.06fd0bbf.png",r="/docs/cocos/assets/mesh_list_1.24debcb8.png",o="/docs/cocos/assets/mesh-asset-preview.540594f3.png",i="/docs/cocos/assets/mesh_use.fbe0cd3e.gif",n="/docs/cocos/assets/mesh_model.0118abb3.png",d="/docs/cocos/assets/mesh-optimizer.8cd70970.png",g="/docs/cocos/assets/mesh-optimizer-warn.689c66e5.png",h="/docs/cocos/assets/mesh_animation.eb5b5f22.png",c="/docs/cocos/assets/mesh_material.927ed282.png",m="/docs/cocos/assets/mesh_fbx.fef82b2a.png",P=JSON.parse('{"title":"模型资源","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/asset/model/mesh.md","filePath":"zh/manual/asset/model/mesh.md"}'),f={name:"zh/manual/asset/model/mesh.md"},p=s('<h1 id="模型资源" tabindex="-1">模型资源 <a class="header-anchor" href="#模型资源" aria-label="Permalink to &quot;模型资源&quot;">​</a></h1><p>目前，Creator 支持 <strong>FBX</strong> 和 <strong>glTF</strong> 两种格式的模型文件。</p><ul><li>FBX（.fbx）：支持 FBX 2020 及更早的文件格式。</li><li>glTF（.gltf 、.glb）：支持 glTF 2.0 及更早的文件格式，详情可参考 <a href="./glTF.html">glTF 模型</a>。</li></ul><p>关于如何从第三方工具导出这两种模型文件，请参考 <a href="./dcc-export-mesh.html">导入从 DCC 工具导出的模型</a>。</p><h2 id="模型导入" tabindex="-1">模型导入 <a class="header-anchor" href="#模型导入" aria-label="Permalink to &quot;模型导入&quot;">​</a></h2><p>从外部导入编辑器中后，在 <strong>资源管理器</strong> 中可得到对应的模型资源文件，其目录结构如下：（以 glTF 文件为例，fbx 文件相同）</p><ul><li><p>无动画的模型文件结构如下：</p><p><img src="'+a+'" alt="mesh list"></p></li><li><p>包含动画的模型文件结构如下：</p><p><img src="'+r+'" alt="mesh list1"></p><ul><li><code>.material</code> — 材质文件</li><li><code>.mesh</code> — 模型文件</li><li><code>.texture</code> — 模型贴图文件</li><li><code>.animation</code> — 模型动画文件</li><li><code>.skeleton</code> — 模型骨骼文件</li><li><code>.prefab</code> — 导入时自动生成的预制件</li></ul></li></ul><h3 id="mesh-文件" tabindex="-1">Mesh 文件 <a class="header-anchor" href="#mesh-文件" aria-label="Permalink to &quot;Mesh 文件&quot;">​</a></h3><p>Mesh 文件中存储了模型的顶点、索引、纹理坐标等数据。在 <strong>层级管理器</strong> 中选中 Mesh 文件后，在 <strong>属性检查器</strong> 便可以看到 Mesh 的一些信息以及它的预览效果。</p><p><img src="'+o+'" alt="Mesh Asset"></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">功能说明</th></tr></thead><tbody><tr><td style="text-align:left;">Vertices</td><td style="text-align:left;">模型的顶点数</td></tr><tr><td style="text-align:left;">Triangles</td><td style="text-align:left;">模型的三角形数</td></tr><tr><td style="text-align:left;">UV</td><td style="text-align:left;">模型的纹理坐标索引</td></tr><tr><td style="text-align:left;">MinPos</td><td style="text-align:left;">模型的最小坐标值</td></tr><tr><td style="text-align:left;">MaxPos</td><td style="text-align:left;">模型的最大坐标值</td></tr></tbody></table><h2 id="模型使用" tabindex="-1">模型使用 <a class="header-anchor" href="#模型使用" aria-label="Permalink to &quot;模型使用&quot;">​</a></h2><p>将模型文件导入后，直接将模型文件的根节点从 <strong>资源管理器</strong> 拖拽到 <strong>层级管理器</strong> 中想要放置的节点下，即可完成节点创建，此时模型就成功在场景中创建了。<br> 或者也可以将模型文件的节点展开，选中模型文件节点下的 <code>.prefab</code> 文件，从 <strong>资源管理器</strong> 拖拽到 <strong>层级管理器</strong> 中同样能够完成创建。</p><p><img src="'+i+'" alt="mesh use"></p><h2 id="模型资源属性" tabindex="-1">模型资源属性 <a class="header-anchor" href="#模型资源属性" aria-label="Permalink to &quot;模型资源属性&quot;">​</a></h2><p>当在 <strong>资源管理器</strong> 中选中模型资源文件时（ <code>.fbx</code> 、 <code>.gltf</code> 或 <code>.glb</code>），在 <strong>属性检查器</strong> 中就可以直接设置模型资源的相关属性。</p><h3 id="model-模块" tabindex="-1">Model 模块 <a class="header-anchor" href="#model-模块" aria-label="Permalink to &quot;Model 模块&quot;">​</a></h3><p><img src="'+n+'" alt="mesh model"></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">法线（Normals）</td><td style="text-align:left;">导入法线信息，包括以下四种选项：<br>1. 可选（Optional）：只导入模型文件中包含的法线，适用于非常清楚自己模型数据的情况。<br>2. 排除（Exclude）：不导入法线。<br>3. 仅在必要时重新计算（Required）：导入模型文件中的法线，若模型文件中不包含法线则重新计算，适用于大部分情况。模型数据本身没问题的话还是推荐使用该项，没有额外的处理。<br>4. 重新计算（Recalculate）：无论模型文件中是否包含法线，都直接重新计算并导入。选择该项会增加计算量，但是可以消除模型原始数据法线没有归一化带来的后续问题。</td></tr><tr><td style="text-align:left;">切线（Tangents）</td><td style="text-align:left;">导入切线信息，包括 Optional、Exclude、Require、Recalculate 四种选项，选项功能可参考 <strong>法线</strong> 的说明，二者相差不大。</td></tr><tr><td style="text-align:left;">形变法线（Morph normals）</td><td style="text-align:left;">导入形变法线信息，包括：<br>可选（Optional）：只导入模型文件中包含的形变法线，适用于非常清楚自己模型数据的情况。<br>排除（Exclude）：不导入形变法线。</td></tr><tr><td style="text-align:left;">跳过验证（Skip Validation）</td><td style="text-align:left;">是否跳过对模型文件的标准检测。</td></tr><tr><td style="text-align:left;">是否禁用 Mesh 拆分（Disable mesh split）</td><td style="text-align:left;">为了解决实时骨骼动画系统下 uniform vector 数量限制问题，目前在资源导入期会根据骨骼数量做拆分，这会对其他系统也产生影响。如果确定不会使用实时计算模式（对应 SkeletalAnimation 组件的 useBakedAnimation 选项未勾选时），可以勾选此项以提升性能。但注意改变此选项会影响生成的 prefab 内容，需要对应更新场景中的引用。<br> 详情请参考下文。</td></tr><tr><td style="text-align:left;">允许数据访问（Allow Data Access）</td><td style="text-align:left;">标识此模型中的所有网格数据是否可被读写，此接口只对静态网格资源生效。若不勾选，网格数据提交至 CPU 后会自动释放</td></tr><tr><td style="text-align:left;">提升单一根节点（Promote Single Root Node ）</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">网格优化（Mesh Optimizer）</td><td style="text-align:left;">网格优化，用于模型的减面、重新排布顶点、减少内存占用以及压缩 Vertex Buffer 等操作。请参考下方 <strong>网格优化</strong> 获取更多内容</td></tr></tbody></table><h3 id="是否禁用-mesh-拆分-disable-mesh-split" tabindex="-1">是否禁用 Mesh 拆分（Disable mesh split） <a class="header-anchor" href="#是否禁用-mesh-拆分-disable-mesh-split" aria-label="Permalink to &quot;是否禁用 Mesh 拆分（Disable mesh split）&quot;">​</a></h3><p>在 v3.6 的更新中我们优化了此选项的策略：</p><ul><li>默认情况下不再拆分模型，不对导入的模型数据做修改（也维持以前的模型设置不变）</li><li>如果骨骼数量未超过实际运行时驱动的限制，直接使用 uniform 传递</li><li>如果骨骼数量超过限制，则使用纹理传递</li></ul><h3 id="网格优化" tabindex="-1">网格优化 <a class="header-anchor" href="#网格优化" aria-label="Permalink to &quot;网格优化&quot;">​</a></h3><p><img src="'+d+'" alt="optimizer"></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Algorithm</strong></td><td style="text-align:left;">优化算法 <br> <strong>simplify</strong>：简化模式 <br> 功能实现为：<a href="https://github.com/sp4cerat/Fast-Quadric-Mesh-Simplification" target="_blank" rel="noreferrer">Github - Fast-Quadric-Mesh-Simplification</a><br><strong>gltfpack(deprecated)</strong>：已废弃，该功能的实现是基于 <a href="https://github.com/zeux/meshoptimizer" target="_blank" rel="noreferrer">Github - zeux/meshoptimizer</a>。<br> 已知的问题为：可能会存在在减面后丢失 UV 排布的情况 <br> 开发者需关注 <strong>属性检查器</strong> 内的警告情况以决定是否使用该选项 <br> 详细信息请参考下图</td></tr><tr><td style="text-align:left;"><strong>Ratio</strong></td><td style="text-align:left;">LOD 压缩比例</td></tr><tr><td style="text-align:left;"><strong>Smart Link</strong></td><td style="text-align:left;">防止破面</td></tr><tr><td style="text-align:left;"><strong>Agressiveness</strong></td><td style="text-align:left;">误差距离</td></tr><tr><td style="text-align:left;"><strong>Max Iteration Count</strong></td><td style="text-align:left;">计算迭代次数</td></tr></tbody></table><p><img src="'+g+'" alt="warn"></p><h3 id="animation-模块" tabindex="-1">Animation 模块 <a class="header-anchor" href="#animation-模块" aria-label="Permalink to &quot;Animation 模块&quot;">​</a></h3><p><img src="'+h+'" alt="mesh animation"></p><p>上方的动画文件表格是当前模型下的所有动画资源信息，下方是当前选中动画的具体帧数信息的编辑区域，可以在此处更改动画名称或进行简单的动画裁剪。</p><ul><li><p>点击图上红框内的 <strong>+</strong> 按钮可以添加动画文件，添加的新文件默认拷贝一份完整的 clip 数据，可以在下方的 <code>Start</code>、<code>End</code> 输入框中输入帧数来裁剪动画。(目前暂时不支持拖拽裁剪动画)</p></li><li><p>点击图上红框内的 <strong>-</strong> 按钮可以删除当前选中的动画文件</p></li></ul><h3 id="material-模块" tabindex="-1">Material 模块 <a class="header-anchor" href="#material-模块" aria-label="Permalink to &quot;Material 模块&quot;">​</a></h3><p><img src="'+c+'" alt="mesh material"></p><p>上半部分的属性说明如下，下半部分则展示了当前模型中包含的材质。</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">提取材质</td><td style="text-align:left;">若想对模型文件自带的材质进行修改时，可开启该项，将文件结构目录下的材质文件提取出模型资源，便可以进行材质的调整修改了。</td></tr><tr><td style="text-align:left;">材质提取目录</td><td style="text-align:left;">用于指定或者查看提取出来的材质所在的目录。</td></tr><tr><td style="text-align:left;">使用顶点色</td><td style="text-align:left;">是否使用顶点色。</td></tr><tr><td style="text-align:left;">混合模式下的深度写入</td><td style="text-align:left;">当 Alpha 模式为 <strong>Blend</strong> 时开启深度写入。</td></tr></tbody></table><h3 id="fbx-模块" tabindex="-1">FBX 模块 <a class="header-anchor" href="#fbx-模块" aria-label="Permalink to &quot;FBX 模块&quot;">​</a></h3><p><img src="'+m+'" alt="mesh material"></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">与 1.x 版本兼容</td><td style="text-align:left;">若勾选该项，则在导入模型时会兼容 Cocos Creator 3D 1.x 版本的导入方式。<strong>注意</strong>：启用该项可能会影响已经导入且被使用/引用的资源。</td></tr><tr><td style="text-align:left;">动画烘焙速率</td><td style="text-align:left;">指定动画烘焙速率，单位为 <strong>帧/秒</strong>，可选项包括 <strong>自动</strong>、<strong>24</strong>、<strong>25</strong>、<strong>30</strong> 和 <strong>60</strong>。</td></tr><tr><td style="text-align:left;">提升单一根节点</td><td style="text-align:left;">当开启该项，若 FBX 资源中包含的场景仅有一个根节点，则在将 FBX 场景转换为 Creator 的预制件时，会以该根节点作为预制件的根节点。否则将以 FBX 场景作为根节点。</td></tr><tr><td style="text-align:left;">优先使用文件时间范围</td><td style="text-align:left;">若勾选该项，则导入的 FBX 动画会优先使用 FBX 文件中记录的动画时间范围。<br>若不勾选该项，则不使用 FBX 的动画时间范围，将会粗略地计算动画时间范围。<br>有些 FBX 工具可能没有导出动画时间范围信息，那么也是粗略地计算动画时间范围。</td></tr></tbody></table>',37),x=[p];function b(y,u,_,q,F,M){return e(),l("div",null,x)}const B=t(f,[["render",b]]);export{P as __pageData,B as default};
