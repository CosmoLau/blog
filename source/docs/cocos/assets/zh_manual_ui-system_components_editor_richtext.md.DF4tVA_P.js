import{_ as t,c as e,o as l,a5 as d}from"./chunks/framework.CqnjdYks.js";const a="/docs/cocos/assets/richtext.yURnhBAL.png",m=JSON.parse('{"title":"RichText 组件参考","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/ui-system/components/editor/richtext.md","filePath":"zh/manual/ui-system/components/editor/richtext.md"}'),i={name:"zh/manual/ui-system/components/editor/richtext.md"},o=d('<h1 id="richtext-组件参考" tabindex="-1">RichText 组件参考 <a class="header-anchor" href="#richtext-组件参考" aria-label="Permalink to &quot;RichText 组件参考&quot;">​</a></h1><p>RichText 组件用来显示一段带有不同样式效果的文字，你可以通过一些简单的 BBCode 标签来设置文字的样式。目前支持的样式有：颜色（color）、字体大小（size）、字体描边（outline）、加粗（b）、斜体（i）、下划线（u）、换行（br）、图片（img）和点击事件（on），并且不同的 BBCode 标签是可以支持相互嵌套的。</p><p>更多关于 BBCode 标签的内容，请参考本文档的 <a href="#bbcode-标签格式">BBCode 标签格式说明</a> 小节。</p><p><img src="'+a+'" alt="richtext"></p><p>点击 <strong>属性检查器</strong> 下面的 <strong>添加组件</strong> 按钮，然后选择 <strong>UI/Render/RichText</strong> 即可添加 RichText 组件到节点上。</p><p>富文本的脚本接口请参考 <a href="./__APIDOC__/zh/class/RichText.html">RichText API</a>。</p><p>关于使用可以参考范例 <strong>RichText</strong>（<a href="https://github.com/cocos/cocos-test-projects/tree/v3.7/assets/cases/ui/07.richtext" target="_blank" rel="noreferrer">GitHub</a> | <a href="https://gitee.com/mirrors_cocos-creator/test-cases-3d/tree/v3.7/assets/cases/ui/07.richtext" target="_blank" rel="noreferrer">Gitee</a>）。</p><h2 id="richtext-属性" tabindex="-1">RichText 属性 <a class="header-anchor" href="#richtext-属性" aria-label="Permalink to &quot;RichText 属性&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">功能说明</th></tr></thead><tbody><tr><td style="text-align:left;">String</td><td style="text-align:left;">富文本的内容字符串，你可以在里面使用 BBCode 来指定特定文本的样式</td></tr><tr><td style="text-align:left;">Horizontal Align</td><td style="text-align:left;">水平对齐方式</td></tr><tr><td style="text-align:left;">Vertical Align</td><td style="text-align:left;">竖直对齐方式</td></tr><tr><td style="text-align:left;">Font Size</td><td style="text-align:left;">字体大小，单位是 point（<strong>注意</strong>：该字段不会影响 BBCode 里面设置的字体大小）</td></tr><tr><td style="text-align:left;">Font</td><td style="text-align:left;">富文本定制字体，所有的 label 片段都会使用这个定制的 TTF 字体</td></tr><tr><td style="text-align:left;">Font Family</td><td style="text-align:left;">富文本定制系统字体。</td></tr><tr><td style="text-align:left;">Use System Font</td><td style="text-align:left;">是否使用系统字体。</td></tr><tr><td style="text-align:left;">Max Width</td><td style="text-align:left;">富文本的最大宽度，传 0 的话意味着必须手动换行.</td></tr><tr><td style="text-align:left;">Line Height</td><td style="text-align:left;">字体行高，单位是 point</td></tr><tr><td style="text-align:left;">Image Atlas</td><td style="text-align:left;">对于 img 标签里面的 src 属性名称，都需要在 imageAtlas 里面找到一个有效的 spriteFrame，否则 img tag 会判定为无效。</td></tr><tr><td style="text-align:left;">Handle Touch Event</td><td style="text-align:left;">选中此选项后，RichText 将阻止节点边界框中的所有输入事件（鼠标和触摸），从而防止输入事件穿透到底层节点。</td></tr></tbody></table><h2 id="bbcode-标签格式" tabindex="-1">BBCode 标签格式 <a class="header-anchor" href="#bbcode-标签格式" aria-label="Permalink to &quot;BBCode 标签格式&quot;">​</a></h2><h3 id="基本格式" tabindex="-1">基本格式 <a class="header-anchor" href="#基本格式" aria-label="Permalink to &quot;基本格式&quot;">​</a></h3><p>目前支持的标签类型有：size、color、b、i、u、img 和 on，分别用来定制字体大小、字体颜色、加粗、斜体、下划线、图片和点击事件。每一个标签都有一个起始标签和一个结束标签，起始标签的名字和属性格式必要符合要求，且全部为小写。结束标签的名字不做任何检查，只需要满足结束标签的定义即可。</p><p>下面分别是应用 size 和 color 标签的一个例子：</p><p><code>&lt;color=green&gt;你好&lt;/color&gt;，&lt;size=50&gt;Creator&lt;/&gt;</code></p><h3 id="支持标签" tabindex="-1">支持标签 <a class="header-anchor" href="#支持标签" aria-label="Permalink to &quot;支持标签&quot;">​</a></h3><p><strong>注意</strong>：所有的 tag 名称必须是小写，且属性值是用 <strong>=</strong> 号赋值。</p><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">描述</th><th style="text-align:left;">示例</th><th style="text-align:left;">注意事项</th></tr></thead><tbody><tr><td style="text-align:left;">color</td><td style="text-align:left;">指定字体渲染颜色，颜色值可以是内置颜色，比如 white，black 等，也可以使用 16 进制颜色值，比如 <code>#ff0000</code> 表示红色</td><td style="text-align:left;"><code>&lt;color=#ff0000&gt;Red Text&lt;/color&gt;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">size</td><td style="text-align:left;">指定字体渲染大小，大小值必须是一个整数</td><td style="text-align:left;"><code>&lt;size=30&gt;enlarge me&lt;/size&gt;</code></td><td style="text-align:left;">Size 值必须使用等号赋值</td></tr><tr><td style="text-align:left;">outline</td><td style="text-align:left;">设置文本的描边颜色和描边宽度</td><td style="text-align:left;"><code>&lt;outline color=red width=4&gt;A label with outline&lt;/outline&gt;</code></td><td style="text-align:left;">如果你没有指定描边的颜色或者宽度的话，那么默认的颜色是白色 (#ffffff)，默认的宽度是 1</td></tr><tr><td style="text-align:left;">b</td><td style="text-align:left;">指定使用粗体来渲染</td><td style="text-align:left;"><code>&lt;b&gt;This text will be rendered as bold&lt;/b&gt;</code></td><td style="text-align:left;">名字必须是小写，且不能写成 bold</td></tr><tr><td style="text-align:left;">i</td><td style="text-align:left;">指定使用斜体来渲染</td><td style="text-align:left;"><code>&lt;i&gt;This text will be rendered as italic&lt;/i&gt;</code></td><td style="text-align:left;">名字必须是小写，且不能写成 italic</td></tr><tr><td style="text-align:left;">u</td><td style="text-align:left;">给文本添加下划线</td><td style="text-align:left;"><code>&lt;u&gt;This text will have a underline&lt;/u&gt;</code></td><td style="text-align:left;">名字必须是小写，且不能写成 underline</td></tr><tr><td style="text-align:left;">on</td><td style="text-align:left;">指定一个点击事件处理函数，当点击该 Tag 所在文本内容时，会调用该事件响应函数</td><td style="text-align:left;"><code>&lt;on click=&quot;handler&quot;&gt; click me! &lt;/on&gt;</code></td><td style="text-align:left;">除了 on 标签可以添加 click 属性，color 和 size 标签也可以添加，比如 <code>&lt;size=10 click=&quot;handler2&quot;&gt;click me&lt;/size&gt;</code></td></tr><tr><td style="text-align:left;">param</td><td style="text-align:left;">当点击事件触发时，可以在回调函数的第二个参数获取该数值</td><td style="text-align:left;"><code>&lt;on click=&quot;handler&quot; param=&quot;test&quot;&gt; click me! &lt;/on&gt;</code></td><td style="text-align:left;">依赖 click 事件</td></tr><tr><td style="text-align:left;">br</td><td style="text-align:left;">插入一个空行</td><td style="text-align:left;"><code>&lt;br/&gt;</code></td><td style="text-align:left;"><strong>注意</strong>：<code>&lt;br&gt;&lt;/br&gt;</code> 和 <code>&lt;br&gt;</code> 都是不支持的。</td></tr><tr><td style="text-align:left;">img</td><td style="text-align:left;">给富文本添加图文混排功能，img 的 src 属性必须是 ImageAtlas 图集里面的一个有效的 spriteframe 名称</td><td style="text-align:left;"><code>&lt;img src=&#39;emoji1&#39; click=&#39;handler&#39; /&gt;</code></td><td style="text-align:left;"><strong>注意</strong>：只有 <code>&lt;img src=&#39;foo&#39; click=&#39;bar&#39; /&gt;</code> 这种写法是有效的。如果你指定一张很大的图片，那么该图片创建出来的精灵会被等比缩放，缩放的值等于富文本的行高除以精灵的高度。</td></tr></tbody></table><h4 id="img-标签的可选属性" tabindex="-1">img 标签的可选属性 <a class="header-anchor" href="#img-标签的可选属性" aria-label="Permalink to &quot;img 标签的可选属性&quot;">​</a></h4><p>为了更好地排版，我们为 img 标签类型提供了可选属性，你可以使用 <code>width</code> 及 <code>height</code> 来指定 SpriteFrame 的大小，这将允许该图片可以大于或是小于行高（但此设定不会改变行高）。</p><p>当你改变了 SpriteFrame 的高度或宽度后，或许会需要使用 <code>align</code> 来调整该图片在行中的对齐方式。</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th><th style="text-align:left;">示例</th><th style="text-align:left;">注意事项</th></tr></thead><tbody><tr><td style="text-align:left;">height</td><td style="text-align:left;">指定 SpriteFrame 的渲染高度，大小值必须为整数</td><td style="text-align:left;"><code>&lt;img src=&#39;foo&#39; height=50 /&gt;</code></td><td style="text-align:left;">如果你只使用了高度属性，该 SpriteFrame 会自动计算宽度以保持图片比例</td></tr><tr><td style="text-align:left;">width</td><td style="text-align:left;">指定 SpriteFrame 的渲染宽度，大小值必须为整数</td><td style="text-align:left;"><code>&lt;img src=&#39;foo&#39; width=50 /&gt;</code></td><td style="text-align:left;">你可以同时使用高度及宽度属性 <code>&lt;img src=&#39;foo&#39; width=20 height=30 /&gt;</code></td></tr><tr><td style="text-align:left;">align</td><td style="text-align:left;">指定 SpriteFrame 在行中的对齐方式，值必需为 <code>bottom</code>、<code>top</code> 或 <code>center</code></td><td style="text-align:left;"><code>&lt;img src=&#39;foo&#39; align=center /&gt;</code></td><td style="text-align:left;">预设对齐方式为 bottom</td></tr></tbody></table><p>为了支持定制图片排版，我们还提供了 <code>offset</code> 属性，用于微调 SpriteFrame 在 RichText 中的位置。设置 <code>offset</code> 时需注意属性值必须为整数，并且如设置不当将导致图片与文字重叠。</p><table><thead><tr><th style="text-align:left;">offset 属性</th><th style="text-align:left;">示例</th><th style="text-align:left;">描述</th><th style="text-align:left;">注意事项</th></tr></thead><tbody><tr><td style="text-align:left;">Y</td><td style="text-align:left;"><code>&lt;img src=&#39;foo&#39; offset=5 /&gt;</code></td><td style="text-align:left;">指定 SpriteFrame 的 y 轴加上 5</td><td style="text-align:left;">当 offset 只设定一个值的时候，它代表 y 轴的偏移</td></tr><tr><td style="text-align:left;">Y</td><td style="text-align:left;"><code>&lt;img src=&#39;foo&#39; offset=-5 /&gt;</code></td><td style="text-align:left;">指定 SpriteFrame 的 y 轴减少 5</td><td style="text-align:left;">你可以设定负整数来减少 y 轴</td></tr><tr><td style="text-align:left;">X, Y</td><td style="text-align:left;"><code>&lt;img src=&#39;foo&#39; offset=6,-5 /&gt;</code></td><td style="text-align:left;">指定 SpriteFrame 的 x 轴加上 6，y 轴减少 5</td><td style="text-align:left;">偏移属性的值只能包含 <code>0-9</code>、<code>-</code> 和 <code>,</code> 字符</td></tr></tbody></table><h3 id="标签嵌套" tabindex="-1">标签嵌套 <a class="header-anchor" href="#标签嵌套" aria-label="Permalink to &quot;标签嵌套&quot;">​</a></h3><p>标签与标签是支持嵌套的，且嵌套规则跟 HTML 是一样的。比如下面的嵌套标签设置一个文本的渲染大小为 30，且颜色为绿色。</p><p><code>&lt;size=30&gt;&lt;color=green&gt;I&#39;m green&lt;/color&gt;&lt;/size&gt;</code></p><p>也可以实现为:</p><p><code>&lt;color=green&gt;&lt;size=30&gt;I&#39;m green&lt;/size&gt;&lt;/color&gt;</code></p><h2 id="文本缓存类型-cache-mode" tabindex="-1">文本缓存类型（Cache Mode） <a class="header-anchor" href="#文本缓存类型-cache-mode" aria-label="Permalink to &quot;文本缓存类型（Cache Mode）&quot;">​</a></h2><p>由于富文本组件是由多个 Label 节点拼装而成，所以对于复杂的富文本，drawcall 数量也会比较高，因此引擎为富文本组件提供了 Label 组件的文本缓存类型设置，来适当减少 drawcall 的增加。对于每种缓存类型的具体说明，参照 <a href="./label.html">Label 组件的文本缓存类型</a></p><table><thead><tr><th style="text-align:left;">类型</th><th style="text-align:left;">功能说明</th></tr></thead><tbody><tr><td style="text-align:left;">NONE</td><td style="text-align:left;">默认值，对富文本所拆分创建的每个 Label 节点，设置其 CacheMode 为 NONE 类型，即将每个 Label 的整段文本生成一张位图并单独进行渲染。</td></tr><tr><td style="text-align:left;">BITMAP</td><td style="text-align:left;">选择后，对富文本所拆分创建的每个 Label 节点，设置其 CacheMode 为 BITMAP 类型，即将每个 Label 的整段文本生成一张位图，并将该位图添加到动态图集中，再依据动态图集进行合并渲染。</td></tr><tr><td style="text-align:left;">CHAR</td><td style="text-align:left;">选择后，对富文本所拆分创建的每个 Label 节点，设置其 CacheMode 为 CHAR 类型，即将每个 Label 的文本以“字”为单位缓存到全局共享的位图中，相同字体样式和字号的每个字符将在全局共享一份缓存。</td></tr></tbody></table><h2 id="详细说明" tabindex="-1">详细说明 <a class="header-anchor" href="#详细说明" aria-label="Permalink to &quot;详细说明&quot;">​</a></h2><p>富文本组件全部由 JS 层实现，采用底层的 Label 节点拼装而成，并且在上层做排版逻辑。这意味着，你新建一个复杂的富文本，底层可能有十几个 label 节点，而这些 label 节点都是采用系统字体渲染的。</p><p>所以，一般情况下，你不应该在游戏的主循环里面频繁地修改富文本的文本内容，这可能会导致性能比较低。另外，如果能不使用富文本组件，就尽量使用普通的文本组件，并且 BMFont 的效率是最高的。</p>',34),r=[o];function s(n,c,g,h,f,x){return l(),e("div",null,r)}const b=t(i,[["render",s]]);export{m as __pageData,b as default};
