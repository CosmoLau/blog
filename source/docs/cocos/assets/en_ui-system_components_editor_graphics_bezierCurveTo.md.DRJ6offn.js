import{_ as t,c as e,o as s,a4 as i}from"./chunks/framework.uQk9_EO2.js";const a="/docs/cocos/assets/bezierCurveTo.DS4F8SqN.png",y=JSON.parse('{"title":"Bezier Curves","description":"","frontmatter":{},"headers":[],"relativePath":"en/ui-system/components/editor/graphics/bezierCurveTo.md","filePath":"en/ui-system/components/editor/graphics/bezierCurveTo.md","lastUpdated":1712336288000}'),n={name:"en/ui-system/components/editor/graphics/bezierCurveTo.md"},r=i(`<h1 id="bezier-curves" tabindex="-1">Bezier Curves <a class="header-anchor" href="#bezier-curves" aria-label="Permalink to &quot;Bezier Curves&quot;">​</a></h1><p>The <code>bezierCurveTo()</code> method adds a bezier curve to the current path by using the specified control point that can generate the cubic bezier curve.</p><blockquote><p><strong>Note</strong>: Cubic Bezier curves require three control points. The first two points are for the control points in the cubic Bezier calculation, and the third point is the end point of the curve. The starting point of the curve is the last point in the current path.</p></blockquote><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>cp1x</strong></td><td style="text-align:left;">The x coordinate of the first bezier control point.</td></tr><tr><td style="text-align:left;"><strong>cp1y</strong></td><td style="text-align:left;">The y coordinate of the first bezier control point.</td></tr><tr><td style="text-align:left;"><strong>cp2x</strong></td><td style="text-align:left;">The x coordinate of the second Bezier control point.</td></tr><tr><td style="text-align:left;"><strong>cp2y</strong></td><td style="text-align:left;">The x coordinate of the second Bezier control point.</td></tr><tr><td style="text-align:left;"><strong>x</strong></td><td style="text-align:left;">The x coordinate of the end point.</td></tr><tr><td style="text-align:left;"><strong>y</strong></td><td style="text-align:left;">The y coordinate of the end point.</td></tr></tbody></table><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Graphics);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">moveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bezierCurveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stroke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p><img src="`+a+'" alt="bezierCurveTo"></p><hr><p>Return to the <a href="./../graphics">Graphics Component Reference</a> documentation.</p>',9),h=[r];function l(o,p,d,k,c,g){return s(),e("div",null,h)}const u=t(n,[["render",l]]);export{y as __pageData,u as default};
