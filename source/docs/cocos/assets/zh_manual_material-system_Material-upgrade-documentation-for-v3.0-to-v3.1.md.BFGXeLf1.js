import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.CqnjdYks.js";const g=JSON.parse('{"title":"Cocos Creator 3.1 材质升级指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/material-system/Material-upgrade-documentation-for-v3.0-to-v3.1.md","filePath":"zh/manual/material-system/Material-upgrade-documentation-for-v3.0-to-v3.1.md"}'),l={name:"zh/manual/material-system/Material-upgrade-documentation-for-v3.0-to-v3.1.md"},e=n(`<h1 id="cocos-creator-3-1-材质升级指南" tabindex="-1">Cocos Creator 3.1 材质升级指南 <a class="header-anchor" href="#cocos-creator-3-1-材质升级指南" aria-label="Permalink to &quot;Cocos Creator 3.1 材质升级指南&quot;">​</a></h1><blockquote><p>本文将详细介绍 Cocos Creator 3.0 的材质升级到 v3.1 的注意事项。</p></blockquote><h2 id="_1-着色器升级与变化" tabindex="-1">1. 着色器升级与变化 <a class="header-anchor" href="#_1-着色器升级与变化" aria-label="Permalink to &quot;1. 着色器升级与变化&quot;">​</a></h2><h3 id="_1-1-内置头文件变化" tabindex="-1">1.1 内置头文件变化 <a class="header-anchor" href="#_1-1-内置头文件变化" aria-label="Permalink to &quot;1.1 内置头文件变化&quot;">​</a></h3><p>原来 v3.0 的标准着色器头文件 <code>shading-standard</code> 在 v3.1 改成了 <code>standard-surface-entry</code>，可以使 effect 同时兼容 forward 渲染管线和 deferred 渲染管线。</p><p>原来 v3.0 的 <code>cc-fog</code> 头文件在 v3.1 改成了 <code>cc-fog-vs/fs</code>，拆分成了顶点着色器与片元着色器两个部分。</p><h3 id="_1-2-顶点着色器" tabindex="-1">1.2 顶点着色器 <a class="header-anchor" href="#_1-2-顶点着色器" aria-label="Permalink to &quot;1.2 顶点着色器&quot;">​</a></h3><ul><li><p><code>gl_Position</code></p><p>v3.0 的 <code>VS</code> 主函数名称 <code>vert</code> 在 v3.1 改成了 <code>main</code>，并且新增了宏 <code>gl_Position</code>，用于给返回值赋值。</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CCProgram standard</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    precision highp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // include your headfile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;cc-fog-vs&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 注意这里头文件名称的变化</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // fill in your data here</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // fill in your data here</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        gl_Position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fill in your data result;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span></span></code></pre></div></li></ul><h3 id="_1-3-片元着色器" tabindex="-1">1.3 片元着色器 <a class="header-anchor" href="#_1-3-片元着色器" aria-label="Permalink to &quot;1.3 片元着色器&quot;">​</a></h3><ul><li><p><code>CC_STANDARD_SURFACE_ENTRY()</code></p><p>加载标准着色器头文件 <code>standard-surface-entry</code>，使用 v3.1 的标准着色器输出函数 <code>CC_STANDARD_SURFACE_ENTRY()</code> 替换原有 v3.0 着色器输出的函数 <code>frag()</code>。</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CCProgram standard</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // include your headfile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;cc-fog-fs&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 注意这里头文件名称的变化</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;standard-surface-entry&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 注意这里标准着色器头文件的名称变化</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // fill in your data here</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> surf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (out StandardSurface s) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // fill in your data here</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CC_STANDARD_SURFACE_ENTRY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 标准着色器输出函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span></span></code></pre></div></li></ul><h2 id="_2-deferred-渲染管线" tabindex="-1">2. Deferred 渲染管线 <a class="header-anchor" href="#_2-deferred-渲染管线" aria-label="Permalink to &quot;2. Deferred 渲染管线&quot;">​</a></h2><h3 id="_2-1-deferred-render-pipeline" tabindex="-1">2.1 Deferred Render Pipeline <a class="header-anchor" href="#_2-1-deferred-render-pipeline" aria-label="Permalink to &quot;2.1  Deferred Render Pipeline&quot;">​</a></h3><p>v3.1 的材质系统与 v3.0 最大的区别在于 v3.1 支持了 <a href="./../render-pipeline/builtin-pipeline.html">deferred 渲染管线</a>，引擎自带标准的 <code>standard-surface-entry</code> 头文件，可以同时支持 forward 渲染管线和 deferred 渲染管线，用法如下：</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CCEffect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    techniques:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // fill in your data here</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">deferred</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vert:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // your Vertex shader</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        frag:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // your Fragment shader</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        phase: deferred</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        propertyIndex: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        blendState:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            targets:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 关闭混合</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blend: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            properties:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // your properties name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // fill in your data here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// fill in your data here</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CCProgram standard</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    precision highp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;cc-global&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;shared-ubos&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;cc-fog-fs&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 注意这里头文件名称的变化。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;standard-surface-entry&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 注意这里标准着色器头文件的名称变化</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // fill in your data here</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> surf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (out StandardSurface s) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // fill in your data here</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    CC_STANDARD_SURFACE_ENTRY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 标准着色器输出函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// fill in your data here</span></span></code></pre></div><h3 id="_2-2-渲染管线判断" tabindex="-1">2.2 渲染管线判断 <a class="header-anchor" href="#_2-2-渲染管线判断" aria-label="Permalink to &quot;2.2  渲染管线判断&quot;">​</a></h3><p>在头文件 <code>standard-surface-entry</code> 会判断选择了哪条渲染管线，光照计算在文件 <code>shading-standard-additive</code></p><p>如果判断是 deferred 渲染管线，会先调用 <code>deferred-lighting</code> effect 文件，随后调用光照计算文件 <code>shading-standard-additive</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_STANDARD_SURFACE_ENTRY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                                 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_FORWARD_ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  #include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;shading-standard-additive&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // fill in your data here</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#elif</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_PIPELINE_TYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_PIPELINE_TYPE_FORWARD</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 判断是否为前向渲染管线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // fill in your data here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#elif</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_PIPELINE_TYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_PIPELINE_TYPE_DEFERRED</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 判断是否为延迟渲染管线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // fill in your data here</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#endif</span></span></code></pre></div><h2 id="_3-参数传输升级" tabindex="-1">3. 参数传输升级 <a class="header-anchor" href="#_3-参数传输升级" aria-label="Permalink to &quot;3. 参数传输升级&quot;">​</a></h2><p>v3.0 顶点着色器往片元着色器传递 shadow 参数的宏为 <code>CCPassShadowParams</code>，v3.1 则修改为 <code>CC_TRANSFER_SHADOW</code>。</p><p>v3.1 顶点着色器往片元着色器传输 <code>FOG</code> 参数时，直接使用 <code>CC_TRANSFER_FOG</code> 宏。</p><p>版本对比：</p><ul><li><p>v3.0</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">v_fog_factor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_TRANSFER_FOG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pos);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCPassShadowParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pos);</span></span></code></pre></div></li><li><p>v3.1</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CC_TRANSFER_FOG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pos);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CC_TRANSFER_SHADOW</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pos);</span></span></code></pre></div></li></ul>`,23),p=[e];function h(t,k,d,r,c,E){return a(),i("div",null,p)}const y=s(l,[["render",h]]);export{g as __pageData,y as default};
