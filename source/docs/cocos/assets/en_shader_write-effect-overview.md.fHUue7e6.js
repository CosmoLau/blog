import{_ as e,c as t,o as a,a4 as r}from"./chunks/framework.uQk9_EO2.js";const m=JSON.parse('{"title":"Custom Effect","description":"","frontmatter":{},"headers":[],"relativePath":"en/shader/write-effect-overview.md","filePath":"en/shader/write-effect-overview.md","lastUpdated":1712305443000}'),s={name:"en/shader/write-effect-overview.md"},i=r('<h1 id="custom-effect" tabindex="-1">Custom Effect <a class="header-anchor" href="#custom-effect" aria-label="Permalink to &quot;Custom Effect&quot;">​</a></h1><p>If the built-in effects cannot meet the requirements, users can custom your own effects.</p><p>There are two ways to customize effects:</p><ol><li><p>Refer to <a href="./effect-inspector">Effect asset</a> to create a new effect.</p></li><li><p>Based on built-in shaders. Copy the corresponding built-in shaders from the <strong>internal -&gt; effects</strong> directory in the <strong>Assets</strong> panel to the <strong>Assets</strong> directory, and then customize them.</p></li></ol><h2 id="preparation" tabindex="-1">Preparation <a class="header-anchor" href="#preparation" aria-label="Permalink to &quot;Preparation&quot;">​</a></h2><p>Since the shader uses YAML as the flow control and GLSL as the shader language, it is necessary to have a certain degree of familiarity and understanding of these knowledge before customizing the shader.</p><p>For unfamiliar developers, we have also prepared some brief introductions:</p><ul><li><a href="./glsl">GLSL Basic</a></li><li><a href="./yaml-101">YAML 101</a></li></ul><p>This section will take custom a 2D effect and a 3D effect as examples to introduce the custom process in detail. For details, please refer to:</p><ul><li><a href="./write-effect-3d-rim-light">3D effect: rimlight</a></li><li><a href="./write-effect-2d-sprite-gradient">2D effect：Gradient</a></li></ul>',10),o=[i];function n(f,c,l,d,h,p){return a(),t("div",null,o)}const _=e(s,[["render",n]]);export{m as __pageData,_ as default};
