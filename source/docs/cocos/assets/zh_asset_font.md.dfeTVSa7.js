import{_ as e,c as o,o as t,a4 as a}from"./chunks/framework.uQk9_EO2.js";const r="/docs/cocos/assets/imported.DDFazU2k.png",s="/docs/cocos/assets/create_label.CnhYvCxm.png",n="/docs/cocos/assets/create_label_main_menu.BJAFg2xU.png",l="/docs/cocos/assets/assign_font_file.D8b5TrSH.png",q=JSON.parse('{"title":"字体资源","description":"","frontmatter":{},"headers":[],"relativePath":"zh/asset/font.md","filePath":"zh/asset/font.md","lastUpdated":1712305443000}'),c={name:"zh/asset/font.md"},i=a('<h1 id="字体资源" tabindex="-1">字体资源 <a class="header-anchor" href="#字体资源" aria-label="Permalink to &quot;字体资源&quot;">​</a></h1><p>使用 Cocos Creator 制作的游戏中可以使用三类字体资源：系统字体，动态字体和位图字体。</p><p>其中系统字体是通过调用游戏运行平台自带的系统字体来渲染文字，不需要用户在项目中添加任何相关资源。要使用系统字体，请使用 <a href="./../ui-system/components/editor/label">Label组件</a> 中的 <strong>Use System Font</strong> 属性。</p><h2 id="导入字体资源" tabindex="-1">导入字体资源 <a class="header-anchor" href="#导入字体资源" aria-label="Permalink to &quot;导入字体资源&quot;">​</a></h2><h3 id="动态字体" tabindex="-1">动态字体 <a class="header-anchor" href="#动态字体" aria-label="Permalink to &quot;动态字体&quot;">​</a></h3><p>目前 Cocos Creator 支持 <strong>TTF</strong> 格式的动态字体。只要将扩展名为 <strong>TTF</strong> 的字体文件拖拽到 <strong>资源管理器</strong> 中，即可完成字体资源的导入。</p><h3 id="位图字体" tabindex="-1">位图字体 <a class="header-anchor" href="#位图字体" aria-label="Permalink to &quot;位图字体&quot;">​</a></h3><p>位图字体由 <strong>fnt</strong> 格式的字体文件和一张 <strong>png</strong> 图片组成，fnt 文件提供了对每一个字符小图的索引。这种格式的字体可以由专门的软件生成，请参考：</p><ul><li><a href="https://71squared.com/glyphdesigner" target="_blank" rel="noreferrer">Glyph Designer</a></li><li><a href="https://github.com/libgdx/libgdx/wiki/Hiero" target="_blank" rel="noreferrer">Hiero</a></li><li><a href="http://www.angelcode.com/products/bmfont/" target="_blank" rel="noreferrer">BMFont (Windows)</a></li></ul><p>在导入位图字体时，请务必将 fnt 文件和 png 文件同时拖拽到 <strong>资源管理器</strong> 中。</p><p><strong>请注意，在导入位图字体之后，需要将 png 文件的类型更改为 sprite-frame，否则位图字体将无法正常使用。</strong></p><p>导入后的字体在 <strong>资源管理器</strong> 中显示如下：</p><p><img src="'+r+'" alt="imported font asset"></p><p><strong>注意</strong> 为了提高资源管理效率，建议将导入的 <code>fnt</code> 和 <code>png</code> 文件存放在单独的目录下，不要和其他资源混在一起。</p><h2 id="使用字体资源" tabindex="-1">使用字体资源 <a class="header-anchor" href="#使用字体资源" aria-label="Permalink to &quot;使用字体资源&quot;">​</a></h2><p>字体资源需要通过 Label 组件来渲染，下面是在场景中创建带有 Label 组件的节点的方法。</p><h3 id="使用菜单创建-label-字体-节点" tabindex="-1">使用菜单创建 Label（字体）节点 <a class="header-anchor" href="#使用菜单创建-label-字体-节点" aria-label="Permalink to &quot;使用菜单创建 Label（字体）节点&quot;">​</a></h3><p>在 <strong>层级管理器</strong> 中点击左上角的 <strong>创建节点</strong> 按钮，并选择 <code>创建渲染节点/Label（文字）</code>，就会在场景中创建出一个带有 <strong>Label</strong> 组件的节点。</p><p><img src="'+s+'" alt="from hierarchy"></p><p>您也可以通过主菜单的 <code>节点/创建渲染节点/Label（文字）</code> 来完成创建，效果和上面的方法一样。</p><p><img src="'+n+'" alt="from main menu"></p><h3 id="关联字体资源" tabindex="-1">关联字体资源 <a class="header-anchor" href="#关联字体资源" aria-label="Permalink to &quot;关联字体资源&quot;">​</a></h3><p>使用上面方法创建的字体组件默认使用系统字体作为关联的资源，如果想要使用导入到项目中的 TTF 或位图字体，可以将您的字体资源拖拽到创建的 <strong>Label</strong> 组件中的 <code>Font</code> 属性栏中。</p><p><img src="'+l+'" alt="assign font file"></p><p>这时场景中的字体会立刻用刚才指定的字体资源进行渲染。您也可以根据项目需要，自由的切换同一个 <strong>Label</strong> 组件的 <code>Font</code> 属性，来使用 TTF 或位图字体。切换字体文件时，Label 组件的其他属性不受影响。</p><p>如果要恢复使用系统字体，可以点击 <code>Use System Font</code> 的属性复选框，来清除 <code>Font</code> 属性中指定的字体文件。</p><h3 id="拖拽创建-label-字体-节点" tabindex="-1">拖拽创建 Label（字体）节点 <a class="header-anchor" href="#拖拽创建-label-字体-节点" aria-label="Permalink to &quot;拖拽创建 Label（字体）节点&quot;">​</a></h3><p>另外一种快捷使用指定资源创建字体节点的方法，是直接从 <strong>资源管理器</strong> 中拖拽字体文件（TTF 或位图字体都可以）到 <strong>层级管理器</strong> 中。和上面用菜单创建的唯一区别，是使用拖拽方式创建的文字节点会自动使用拖拽的字体资源来设置 <strong>Label</strong> 组件的 <code>Font</code> 属性。</p>',28),p=[i];function d(g,h,b,_,m,f){return t(),o("div",null,p)}const T=e(c,[["render",d]]);export{q as __pageData,T as default};
