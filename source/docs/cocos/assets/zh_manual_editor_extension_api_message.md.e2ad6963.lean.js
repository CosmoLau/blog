import{_ as t,v as e,b as s,R as a}from"./chunks/framework.5ffcbaff.js";const h=JSON.parse('{"title":"Message","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/editor/extension/api/message.md","filePath":"zh/manual/editor/extension/api/message.md"}'),l={name:"zh/manual/editor/extension/api/message.md"},o=a('<h1 id="message" tabindex="-1">Message <a class="header-anchor" href="#message" aria-label="Permalink to &quot;Message&quot;">​</a></h1><p>Creaotr 消息系统，消息在 Creator 非常重要，几乎所有的操作和数据传递都是通过消息进行的。</p><p>具体插件支持调用的消息可以在菜单栏 <code>开发者-&gt;消息列表</code> 查看。</p><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h2><h3 id="send" tabindex="-1">send <a class="header-anchor" href="#send" aria-label="Permalink to &quot;send&quot;">​</a></h3><p>▸ <strong>send</strong>(name: <code>string</code>, message: <code>string</code>, ...args: <code>any[]</code>): <code>void</code></p><p>发送一个消息，没有返回</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">目标插件的名字</td></tr><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">触发消息的名字</td></tr><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any[]</code></td><td style="text-align:left;">消息需要的参数</td></tr></tbody></table><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Message</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">builder</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">open-devtools</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="request" tabindex="-1">request <a class="header-anchor" href="#request" aria-label="Permalink to &quot;request&quot;">​</a></h3><p>▸ <strong>request</strong>(name: <code>string</code>, message: <code>string</code>, ...args: <code>any[]</code>): Promise&lt;<code>any</code>&gt;</p><p>发送一个消息，并等待返回</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">目标插件的名字</td></tr><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">触发消息的名字</td></tr><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any[]</code></td><td style="text-align:left;">消息需要的参数</td></tr></tbody></table><p><strong>返回结果</strong></p><p>Promise&lt;<code>any</code>&gt;</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sceneDirty </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Message</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">request</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">scene</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">query-dirty</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// false</span></span></code></pre></div><h3 id="broadcast" tabindex="-1">broadcast <a class="header-anchor" href="#broadcast" aria-label="Permalink to &quot;broadcast&quot;">​</a></h3><p>▸ <strong>broadcast</strong>(message: <code>string</code>, ...args: <code>any[]</code>): <code>void</code></p><p>广播一个消息</p><p>我们约定每个插件自己发出的广播消息，将以 <code>[插件名]:xxx</code> 的形式命名，希望后续其他各个插件也可以遵守这样的规范</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">消息的名字</td></tr><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any[]</code></td><td style="text-align:left;">消息附加的参数</td></tr></tbody></table><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Message</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">broadcast</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">console:update-log-level</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [])</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="addbroadcastlistener-废弃" tabindex="-1">addBroadcastListener（废弃） <a class="header-anchor" href="#addbroadcastlistener-废弃" aria-label="Permalink to &quot;addBroadcastListener（废弃）&quot;">​</a></h3><p>▸ <strong>addBroadcastListener</strong>(message: <code>string</code>, func: <code>Function</code>): <code>any</code></p><p><strong>废弃警告，请通过扩展监听广播消息</strong> 新增一个广播消息监听器，不监听的时候，需要主动取消监听</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">消息名</td></tr><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">处理函数</td></tr></tbody></table><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Message</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addBroadcastListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">console:logsUpdate</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="removebroadcastlistener-废弃" tabindex="-1">removeBroadcastListener（废弃） <a class="header-anchor" href="#removebroadcastlistener-废弃" aria-label="Permalink to &quot;removeBroadcastListener（废弃）&quot;">​</a></h3><p>▸ <strong>removeBroadcastListener</strong>(message: <code>string</code>, func: <code>Function</code>): <code>any</code></p><p><strong>废弃警告，请通过扩展监听广播消息</strong> 新增一个广播消息监听器</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">消息名</td></tr><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;"><code>Function</code></td><td style="text-align:left;">处理函数</td></tr></tbody></table><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Message</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeBroadcastListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">console:logsUpdate</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>',37),n=[o];function r(p,c,d,i,y,g){return e(),s("div",null,n)}const F=t(l,[["render",r]]);export{h as __pageData,F as default};
