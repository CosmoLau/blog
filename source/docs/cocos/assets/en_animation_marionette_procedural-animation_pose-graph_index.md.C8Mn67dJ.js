import{_ as e,a as t}from"./chunks/output.BFjrOI7e.js";import{_ as o,c as a,o as n,a4 as s}from"./chunks/framework.uQk9_EO2.js";const m=JSON.parse('{"title":"Pose Graph (Experimental)","description":"","frontmatter":{},"headers":[],"relativePath":"en/animation/marionette/procedural-animation/pose-graph/index.md","filePath":"en/animation/marionette/procedural-animation/pose-graph/index.md","lastUpdated":1712305443000}'),p={name:"en/animation/marionette/procedural-animation/pose-graph/index.md"},r=s('<h1 id="pose-graph-experimental" tabindex="-1">Pose Graph (Experimental) <a class="header-anchor" href="#pose-graph-experimental" aria-label="Permalink to &quot;Pose Graph (Experimental)&quot;">​</a></h1><p><strong>Pose graph</strong> are node graph that express the creation and transformation of a pose, and are the central building blocks for realizing procedural animation.</p><p>The pose graph is dependent on the other building blocks of the animation graph:</p><ul><li><p>In the state machine, each <a href="./../../state-machine/procedural-pose-state">procedural pose</a> (state) contains a pose graph.</p></li><li><p>Each <a href="./../pose-stash/">pose stash</a> contains a pose graph.</p></li></ul><p>This section describes the structure of a pose-stash.</p><p>Before getting started with procedural animation, we recommend that you read the documentation related to the <a href="./.../../../">Marionette Animation System</a> and animation graph.</p><h2 id="values-and-types" tabindex="-1">Values and Types <a class="header-anchor" href="#values-and-types" aria-label="Permalink to &quot;Values and Types&quot;">​</a></h2><p>Broadly speaking, a pose graph describes the flow of values. Every value has a type, and the types of values supported by the pose graph are listed below:</p><table><thead><tr><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Pose</td><td style="text-align:left;">Role Pose.</td></tr><tr><td style="text-align:left;">Floating Point</td><td style="text-align:left;">Floating point value.</td></tr><tr><td style="text-align:left;">Integer</td><td style="text-align:left;">Integer values.</td></tr><tr><td style="text-align:left;">Integer</td><td style="text-align:left;">Three-dimensional vectors.</td></tr><tr><td style="text-align:left;">Quaternions</td><td style="text-align:left;">Quaternions.</td></tr></tbody></table><p>Where pose objects cannot be generated and specified out of thin air and are only generated by pose nodes (see below).</p><h2 id="node" tabindex="-1">Node <a class="header-anchor" href="#node" aria-label="Permalink to &quot;Node&quot;">​</a></h2><p><img src="'+e+'" alt="nodes-type.png"></p><p>A Pose Graph <strong>Node</strong> describes an operation. There may be zero or more <strong>inputs</strong> or zero or more <strong>outputs</strong> on the node. Some nodes have a variable number of inputs and can be deleted. Currently, all nodes have a fixed number of outputs and cannot be deleted.</p><blockquote><p>A Pose Node is a node in the pose graph that is used to handle procedural animation, not a node of the engine.</p></blockquote><p>Inputs and outputs are associated with types. When a node has an input of a certain type, it means that the node can accept a value of that type from that input; when a node has an output of a certain type, it means that the node will output a value of that type to that output. When seeking a value, the node operates on the value of its inputs and produces the resulting value to the output.</p><p>A node output can be connected to the <strong>same type</strong> input of another node, indicating that when seeking a value, it passes the value of its output to the other node&#39;s as input. Sometimes this behavior is called <strong>binding</strong>.</p><blockquote><p>Note that such a connection is unidirectional - it is not possible to connect inputs to outputs, which makes no sense.</p></blockquote><p>The output of a node can be connected to the inputs of multiple nodes. An exception exists: graph outputs can be connected to only one node.</p><blockquote><p>If you need to reference a pose in more than one place, consider using <a href="./../pose-stash/">pose-stash</a>.</p></blockquote><p>The following types of nodes exist in the pose graph:</p><table><thead><tr><th style="text-align:left;">Node Type</th><th style="text-align:left;">Description</th><th style="text-align:left;">Input</th><th style="text-align:left;">Output</th></tr></thead><tbody><tr><td style="text-align:left;">Pose Output Node</td><td style="text-align:left;">Acts as the output pose for the entire pose graph.</td><td style="text-align:left;">A pose input</td><td style="text-align:left;">None</td></tr><tr><td style="text-align:left;">Pose Node</td><td style="text-align:left;">An output pose object.</td><td style="text-align:left;">zero or more</td><td style="text-align:left;">A pose output</td></tr><tr><td style="text-align:left;">Variable Get Node</td><td style="text-align:left;">Get the specified variable and output it</td><td style="text-align:left;">None</td><td style="text-align:left;">One output, of type variable</td></tr></tbody></table><p>You can refer to the <a href="./pose-nodes/node-operation">Pose Graph View</a> to see how to visualize the operation of a pose graph node.</p><h3 id="pose-graph-output-node" tabindex="-1">Pose Graph Output Node <a class="header-anchor" href="#pose-graph-output-node" aria-label="Permalink to &quot;Pose Graph Output Node&quot;">​</a></h3><p><img src="'+t+'" alt="output.png"></p><p>The <strong>Pose Graph Output Node</strong> is a special kind of node that represents the output pose of the whole pose-graph. It is built into the pose graph and cannot be deleted or created.</p><p>A pose graph output node has one and only one pose input. When a node is connected to that pose input, the input pose becomes the output pose of the pose graph.</p><blockquote><p>If the pose graph output node is not connected, the pose graph output pose is the default pose.</p></blockquote><p>The pose graph output node has no output.</p><h3 id="pose-node" tabindex="-1">Pose Node <a class="header-anchor" href="#pose-node" aria-label="Permalink to &quot;Pose Node&quot;">​</a></h3><p><strong>Pose nodes</strong> are all nodes that output pose objects. Currently, all pose nodes produce only one pose output. However, a pose node may have zero or more inputs of any type depending on the node itself.</p><p><a href="./pose-nodes/">Pose Nodes</a> lists all types of pose nodes.</p><h3 id="variable-get-nodes" tabindex="-1">Variable Get Nodes <a class="header-anchor" href="#variable-get-nodes" aria-label="Permalink to &quot;Variable Get Nodes&quot;">​</a></h3><p>The <strong>Variable Get Node</strong> gets the specified animation graph variable and outputs its value. This type of node has no inputs and only one output, which is the type of the variable.</p><p>A variable get node cannot get trigger variables.</p>',34),i=[r];function l(d,h,u,c,g,f){return n(),a("div",null,i)}const x=o(p,[["render",l]]);export{m as __pageData,x as default};
