import{_ as t,c as e,o as s,a5 as a}from"./chunks/framework.CqnjdYks.js";const o="/docs/cocos/assets/build.8QDTsDZM.png",l="/docs/cocos/assets/huawei-build.BWDs0lnJ.png",r="/docs/cocos/assets/package.D96gIYzX.png",n="/docs/cocos/assets/play.covxpDL4.png",x=JSON.parse('{"title":"发布到华为快游戏","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/editor/publish/publish-huawei-quick-game.md","filePath":"zh/manual/editor/publish/publish-huawei-quick-game.md"}'),i={name:"zh/manual/editor/publish/publish-huawei-quick-game.md"},d=a('<h1 id="发布到华为快游戏" tabindex="-1">发布到华为快游戏 <a class="header-anchor" href="#发布到华为快游戏" aria-label="Permalink to &quot;发布到华为快游戏&quot;">​</a></h1><h2 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to &quot;环境配置&quot;">​</a></h2><ul><li><p>下载 <a href="https://developer.huawei.com/consumer/cn/doc/development/quickApp-Guides/quickapp-installtool#h1-1575365259108" target="_blank" rel="noreferrer">华为快应用加载器</a>，并安装到华为手机上（建议 Android Phone 6.0 或以上版本）</p></li><li><p>PC 端全局安装 <a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noreferrer">nodejs-8.1.4</a> 或以上版本</p></li></ul><h2 id="发布流程" tabindex="-1">发布流程 <a class="header-anchor" href="#发布流程" aria-label="Permalink to &quot;发布流程&quot;">​</a></h2><p>使用 Cocos Creator 打开需要发布的项目工程，从 <strong>菜单栏 -&gt; 项目</strong> 中打开 <strong>构建发布</strong> 面板。在 <strong>构建发布</strong> 面板的 <strong>发布平台</strong> 中选择 <strong>华为快游戏</strong>。</p><p><img src="'+o+'" alt="build"></p><p>通用构建选项的设置请参考 <a href="./build-options.html">通用构建选项</a>，华为快游戏特有的构建选项如下：</p><p><img src="'+l+`" alt="huawei-options"></p><table><thead><tr><th style="text-align:left;">构建选项</th><th style="text-align:left;">可选</th><th style="text-align:left;">说明</th><th style="text-align:left;">字段名（用于命令行发布）</th></tr></thead><tbody><tr><td style="text-align:left;">初始场景分包</td><td style="text-align:left;">可选项</td><td style="text-align:left;">勾选后，首场景及其相关的依赖资源会被构建到发布包目录 <code>assets</code> 下的内置 Asset Bundle — <a href="./../../asset/bundle.html#内置-asset-bundle">start-scene</a> 中，提高初始场景的资源加载速度。</td><td style="text-align:left;"><code>startSceneAssetBundle</code></td></tr><tr><td style="text-align:left;">资源服务器地址</td><td style="text-align:left;">可选项</td><td style="text-align:left;">若 <strong>不填写</strong> 该项，则发布包目录下的 <code>remote</code> 文件夹将会被打包到构建后生成的 rpk 包中。<br>若 <strong>填写</strong>，则不会打包进 rpk。开发者需要在构建后手动将发布包目录下的 <code>remote</code> 文件夹上传到所填写的资源服务器地址上，详情请参考 <a href="./../../asset/cache-manager.html">上传资源到远程服务器</a>。</td><td style="text-align:left;"><code>remoteServerAddress</code></td></tr><tr><td style="text-align:left;">游戏包名</td><td style="text-align:left;">必填项</td><td style="text-align:left;">确保与原生应用的包名不一致，由 <strong>数字</strong>、<strong>字母</strong>、<strong>.</strong> 组成。必须以字母开头，以数字或字母结尾，同时必须包含 <strong>.</strong>，长度不能超过 255 字节。例如 <code>com.example.demo</code></td><td style="text-align:left;"><code>package</code></td></tr><tr><td style="text-align:left;">桌面图标</td><td style="text-align:left;">必填项</td><td style="text-align:left;">点击输入框后面的放大镜图标按钮选择所需的图标。构建时，图标将会被构建到华为快游戏的 rpk 中。桌面图标建议使用 png 图片。</td><td style="text-align:left;">icon</td></tr><tr><td style="text-align:left;">游戏版本名称</td><td style="text-align:left;">必填项</td><td style="text-align:left;">游戏版本名称是真实的版本，如：1.0.0</td><td style="text-align:left;"><code>versionName</code></td></tr><tr><td style="text-align:left;">游戏版本号</td><td style="text-align:left;">必填项</td><td style="text-align:left;"><strong>游戏版本号</strong> 与 <strong>游戏版本名称</strong> 不同，<strong>游戏版本号</strong> 主要用于区别版本更新。每次提交审核时游戏版本号都要比上次提交审核的值至少 +1，一定不能等于或者小于上次提交审核的值，建议每次提交审核时游戏版本号递归 +1<br><strong>注意</strong>：<strong>游戏版本号</strong> 必须为正整数。</td><td style="text-align:left;"><code>versionCode</code></td></tr><tr><td style="text-align:left;">支持的最小平台版本号</td><td style="text-align:left;">必填项</td><td style="text-align:left;">用于兼容性检查，避免上线后在低版本平台运行导致不兼容。根据华为快游戏的要求目前这个值必须大于或等于 1035。</td><td style="text-align:left;"><code>minPlatformVersion</code></td></tr><tr><td style="text-align:left;">自定义 manifest 文件路径</td><td style="text-align:left;">可选项</td><td style="text-align:left;">华为快游戏扩展功能。使用时需要选择 json 文件，文件中的数据类型要求为 json 格式。<br><strong>注意</strong>：当 json 数据的 key 值为 <code>package</code>、<code>appType</code>、<code>name</code>、<code>versionName</code>、<code>versionCode</code>、<code>icon</code>、<code>minPlatformVersion</code>、<code>config</code>、<code>display</code> 时不可用。否则在构建时会被 <strong>应用包名</strong>、<strong>应用名称</strong>、<strong>应用图标</strong>、<strong>应用版本号</strong>、<strong>应用版本名称</strong> 等数据覆盖。</td><td style="text-align:left;"><code>manifestPath</code></td></tr><tr><td style="text-align:left;">屏幕方向</td><td style="text-align:left;">可选项</td><td style="text-align:left;">可选值包括 <code>landscape</code> 和 <code>portrait</code>。构建后会写入到发布包目录下的 <code>manifest.json</code> 中。</td><td style="text-align:left;"><code>deviceOrientation</code></td></tr><tr><td style="text-align:left;">是否全屏</td><td style="text-align:left;">可选项</td><td style="text-align:left;">若勾选，则应用运行后处于全屏模式，全屏模式下状态栏也会被覆盖。</td><td style="text-align:left;"><code>fullScreen</code></td></tr><tr><td style="text-align:left;">logLevel</td><td style="text-align:left;">可选项</td><td style="text-align:left;">日志等级</td><td style="text-align:left;"><code>logLevel</code></td></tr><tr><td style="text-align:left;">密钥库</td><td style="text-align:left;">可选项</td><td style="text-align:left;">若勾选该项，表示构建 rpk 包时默认使用的是 Creator 自带的证书，仅用于 <strong>调试</strong> 时使用。若 rpk 包要用于提交审核，则构建时不要勾选该项。<br> 若不勾选该项，则需要手动配置签名证书。</td><td style="text-align:left;"><code>useDebugKey</code></td></tr><tr><td style="text-align:left;">certificate.pem 路径<br>private.pem 路径</td><td style="text-align:left;">可选项</td><td style="text-align:left;">如果不勾选 <strong>密钥库</strong>，则需要配置签名文件 <strong>certificate.pem 路径</strong> 和 <strong>private.pem 路径</strong>，此时构建后生成的是可以 <strong>直接发布</strong> 的 rpk 包。可通过输入框右边的放大镜图标按钮来选择对应的签名文件，或者也可以参考下方的 <strong>生成签名文件</strong>。<br><strong>注意</strong>：这两个签名文件建议不要放在发布包 <code>build/huawei-quick-game</code> 目录下，否则每次构建时都会清空该目录，导致文件丢失。</td><td style="text-align:left;"><code>privatePemPath</code>、<code>certificatePemPath</code></td></tr></tbody></table><ul><li><p><strong>生成签名文件</strong></p><p>有以下两种方式可以生成签名文件：</p><ul><li><p>通过 <strong>构建发布</strong> 面板 <strong>certificate.pem 路径</strong> 后的 <strong>新建</strong> 按钮生成</p></li><li><p>通过命令行生成 release 签名</p><p>用户需要通过 openssl 命令等工具生成签名文件 private.pem、certificate.pem。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过 openssl 命令工具生成签名文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -newkey</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa:2048</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nodes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -keyout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> private.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3650</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certificate.pem</span></span></code></pre></div><blockquote><p><strong>注意</strong>：openssl 工具在 linux 或 Mac 环境下可在终端直接打开。而在 Windows 环境下则需要安装 openssl 工具并且配置系统环境变量，配置完成后需重启 Creator。</p></blockquote></li></ul></li></ul><h3 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h3><p><strong>构建发布</strong> 面板的构建选项设置完成后，点击 <strong>构建并生成</strong> 按钮。<br> 完成后点击 <strong>构建任务</strong> 左下角的文件夹图标按钮打开项目发布包，可以看到在默认发布路径 <code>build</code> 目录下生成了 <code>huawei-quick-game</code>（以具体的构建任务名为准）文件夹，该文件夹就是导出的华为快游戏工程目录和 rpk，rpk 包在 <code>build/huawei-quick-game/dist</code> 目录下。</p><p><img src="`+r+'" alt="package"></p><p>若需要修改生成的 rpk 包，在修改完成后点击 <strong>构建任务</strong> 右下角的 <strong>生成</strong> 按钮，即可在不重新构建的情况下重新生成 rpk 包。</p><h2 id="将打包出来的-rpk-运行到手机上" tabindex="-1">将打包出来的 rpk 运行到手机上 <a class="header-anchor" href="#将打包出来的-rpk-运行到手机上" aria-label="Permalink to &quot;将打包出来的 rpk 运行到手机上&quot;">​</a></h2><p>将打包出来的 rpk 运行到手机上有以下两种方式：</p><ol><li><p>点击 <strong>构建任务</strong> 右下角的 <strong>调试</strong> 按钮，会弹出一个 <strong>快游戏调试工具</strong> 面板。在 <strong>手机列表</strong> 栏目选择手机（如果连接了多台手机），然后在 <strong>快游戏调试工具</strong> 栏点击 <strong>运行</strong> 按钮。</p><p>这时 rpk 会被推送到之前在手机上已安装完成的 <strong>华为快应用加载器</strong> 上（如有读写等权限弹出请允许），即可在手机上打开 rpk。</p><p><img src="'+n+'" alt="play"></p></li><li><p>将构建生成的 rpk 包拷贝到手机内部存储目录下。然后在手机上打开 <strong>华为快应用加载器</strong> 后，点击手机的返回键会弹出一个列表，选择第一个选项 <strong>本地安装</strong>，选择路径为放置 rpk 的路径，即可将 rpk 运行到手机上。</p></li></ol><h2 id="分包-rpk" tabindex="-1">分包 rpk <a class="header-anchor" href="#分包-rpk" aria-label="Permalink to &quot;分包 rpk&quot;">​</a></h2><p>分包加载，即把游戏内容按一定规则拆分在几个包里，在首次启动的时候动的消耗时间。</p><p>若要使用该功能需要在 Creator 编辑器中配置 <a href="./subpackage.html">小游戏分包</a>，设置完成后在构建时就会自动分包。构建完成后，会在 <code>build/huawei-quick-game/dist</code> 目录下生成 <strong>.rpk</strong> 文件。</p><blockquote><p><strong>注意</strong>：目前华为快游戏不支持同时下载多个分包，需只下载必要的包，这个必要的包称为 <strong>主包</strong>，开发者可以在主包内触发下载其他子包，这样可以有效降低首次启要下载多个分包时请按顺序下载。</p></blockquote><h2 id="华为快游戏环境的资源管理" tabindex="-1">华为快游戏环境的资源管理 <a class="header-anchor" href="#华为快游戏环境的资源管理" aria-label="Permalink to &quot;华为快游戏环境的资源管理&quot;">​</a></h2><p>华为快游戏与微信小游戏类似，都存在着包体限制, 华为快游戏允许上传的代码包总大小为 <strong>10MB</strong>，超过的部分必须通过网络请求下载。<br>当包体过大时，可在 <strong>构建发布</strong> 面板配置 <strong>资源服务器地址</strong> 选项，将资源上传到远程服务器，详情请参考 <a href="./../../asset/cache-manager.html">上传资源到远程服务器</a>。</p><p>我们建议用户只保存脚本文件在小游戏包内，其他资源都从远程服务器下载。Cocos Creator 已经帮用户做好了远程资源的下载、缓存和版本管理，详情请参考 <a href="./../../asset/cache-manager.html">缓存管理器</a>。</p><h2 id="相关参考链接" tabindex="-1">相关参考链接 <a class="header-anchor" href="#相关参考链接" aria-label="Permalink to &quot;相关参考链接&quot;">​</a></h2><p><a href="https://developer.huawei.com/consumer/cn/doc/development/quickApp-Guides/quickgame-develop-runtime-game" target="_blank" rel="noreferrer">华为快游戏开发文档</a></p>',26),g=[d];function c(p,h,k,f,u,m){return s(),e("div",null,g)}const b=t(i,[["render",c]]);export{x as __pageData,b as default};
