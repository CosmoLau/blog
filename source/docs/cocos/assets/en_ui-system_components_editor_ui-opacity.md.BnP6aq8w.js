import{_ as e,c as t,o as s,a4 as a}from"./chunks/framework.uQk9_EO2.js";const i="/docs/cocos/assets/ui-opacity.Bpt-rKTu.png",m=JSON.parse('{"title":"UIOpacity Component References","description":"","frontmatter":{},"headers":[],"relativePath":"en/ui-system/components/editor/ui-opacity.md","filePath":"en/ui-system/components/editor/ui-opacity.md","lastUpdated":1712305443000}'),o={name:"en/ui-system/components/editor/ui-opacity.md"},n=a('<h1 id="uiopacity-component-references" tabindex="-1">UIOpacity Component References <a class="header-anchor" href="#uiopacity-component-references" aria-label="Permalink to &quot;UIOpacity Component References&quot;">​</a></h1><p>The UIOpacity Component records a transparency modification flag for the node, which is used to influence all the render nodes inside its sub tree. Normally it&#39;s used on a non render nodes, otherwise its opacity will be multiplied with the render component&#39;s opacity. The render nodes can set transparency individually by setting the alpha channel of <code>color</code>.</p><blockquote><p><strong>Note</strong>: this component is only functional when its root node have Canvas component or RenderRoot2D component.</p></blockquote><p>The method of use is as follows:</p><p><img src="'+i+`" alt="ui-opacity"></p><p>You can also set transparency by code. Example:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> opacityComp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UIOpacity);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">opacityComp.opacity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 157</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>To use <code>UIOpacity</code>, please refer to the <a href="./__APIDOC__/en/class/UIOpacity">UIOpacity API</a> documentation and the <a href="https://github.com/cocos/cocos-test-projects/tree/v3.8/assets/cases/ui/other/opacity" target="_blank" rel="noreferrer">Opacity</a> scene of the test-cases-3d project.</p><h2 id="uiopacity-properties" tabindex="-1">UIOpacity Properties <a class="header-anchor" href="#uiopacity-properties" aria-label="Permalink to &quot;UIOpacity Properties&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Function Description</th></tr></thead><tbody><tr><td>Opacity</td><td>transparency</td></tr></tbody></table>`,10),p=[n];function c(r,h,l,d,y,u){return s(),t("div",null,p)}const _=e(o,[["render",c]]);export{m as __pageData,_ as default};
