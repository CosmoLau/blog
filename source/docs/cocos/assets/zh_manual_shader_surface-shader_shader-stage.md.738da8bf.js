import{_ as a,v as s,b as e,R as t}from"./chunks/framework.5ffcbaff.js";const D=JSON.parse('{"title":"Shader 类型","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/shader/surface-shader/shader-stage.md","filePath":"zh/manual/shader/surface-shader/shader-stage.md"}'),n={name:"zh/manual/shader/surface-shader/shader-stage.md"},r=t(`<h1 id="shader-类型" tabindex="-1">Shader 类型 <a class="header-anchor" href="#shader-类型" aria-label="Permalink to &quot;Shader 类型&quot;">​</a></h1><p>渲染是由不同的着色器来完成的，有处理顶点的、有处理像素的、有用于通用计算的。</p><p>在 Surface Shader 架构中，为了良好的可读性和可维护性，不同的 Shader 类型会有一个约定的代码标识， 如下表所示：</p><table><thead><tr><th>着色器阶段</th><th>对应的 Surface Shader 代码标识</th></tr></thead><tbody><tr><td>Vertex Shader</td><td>vs</td></tr><tr><td>Fragment Shader</td><td>fs</td></tr><tr><td>Computer Shader</td><td>cs</td></tr></tbody></table><p>你可以在内置的 effect 和 chunk 文件中发现许多文件以 xxxx-vs 或者 xxxx-fs 命名。</p><p>而在 effect 和 chunk 文件中， 也有许多类似 <code>CCProgram xxx-vs %{}%</code> 和 <code>CCProgram xxx-fs %{}%</code> 的代码片段定义。</p><p>比如：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">CCProgram standard</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">vs </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#89DDFF;">}%</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">CCProgram standard</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">fs </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//...</span></span>
<span class="line"><span style="color:#89DDFF;">}%</span></span></code></pre></div><p>用户在编写自己的 Shader 时，最好也遵守这个约定，以维持源码的可读性与维护性。</p>`,9),p=[r];function l(o,d,c,h,i,f){return s(),e("div",null,p)}const m=a(n,[["render",l]]);export{D as __pageData,m as default};
