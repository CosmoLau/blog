import{_ as t}from"./chunks/animation-controller.BGlynBO0.js";import{_ as a,c as i,o as s,a4 as e}from"./chunks/framework.uQk9_EO2.js";const n="/docs/cocos/assets/add-animation-controller.Cv76eEO4.png",u=JSON.parse('{"title":"Animation Controller","description":"","frontmatter":{},"headers":[],"relativePath":"en/animation/marionette/animation-controller.md","filePath":"en/animation/marionette/animation-controller.md","lastUpdated":1712305443000}'),l={name:"en/animation/marionette/animation-controller.md"},o=e('<h1 id="animation-controller" tabindex="-1">Animation Controller <a class="header-anchor" href="#animation-controller" aria-label="Permalink to &quot;Animation Controller&quot;">​</a></h1><p>The animation controller component is used to apply the <a href="./animation-graph">Animation Graph Assets</a> to the object.</p><p>Select the node in <strong>Hierarchy</strong> panel where you need to apply the animation graph, and then click <strong>Add Component -&gt; Animation -&gt; Animation Controller</strong> below in <strong>Inspector</strong> panel to add an animation controller component to the node.</p><p><img src="'+n+'" alt="add-animation-controller"></p><blockquote><p><strong>Note</strong>: Because the Marionette animation system and the old animation system cannot be used together, <strong>animation controller components also cannot be mounted on the same node as animation components or skeletal animation components</strong>.</p></blockquote><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><img src="'+t+`" alt="animation-controller"></p><table><thead><tr><th style="text-align:left;">Properties</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Graph</td><td style="text-align:left;">Added <a href="./animation-graph">animation-graph resource</a>, default is empty</td></tr></tbody></table><h2 id="programmatically-controlling-animation-graphs" tabindex="-1">Programmatically Controlling Animation Graphs <a class="header-anchor" href="#programmatically-controlling-animation-graphs" aria-label="Permalink to &quot;Programmatically Controlling Animation Graphs&quot;">​</a></h2><p>The animation controller component provides a number of methods for controlling the <a href="./animation-graph-basics">Animation State Machine</a> of the animation graph at runtime.</p><table><thead><tr><th style="text-align:left;">Method</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>getVariables</code></td><td style="text-align:left;">Get all variables and their names/types/values, etc.</td></tr><tr><td style="text-align:left;"><code>setValue</code></td><td style="text-align:left;">Set the value of the variable.</td></tr><tr><td style="text-align:left;"><code>getValue</code></td><td style="text-align:left;">Get the value of the variable.</td></tr><tr><td style="text-align:left;"><code>getCurrentStateStatus</code></td><td style="text-align:left;">Get the current state information.</td></tr><tr><td style="text-align:left;"><code>getCurrentClipStatuses</code></td><td style="text-align:left;">Get the current state of the clip.</td></tr><tr><td style="text-align:left;"><code>getCurrentTransition</code></td><td style="text-align:left;">Get the current state transition.</td></tr><tr><td style="text-align:left;"><code>getNextStateStatus</code></td><td style="text-align:left;">Get information about the next state.</td></tr><tr><td style="text-align:left;"><code>getNextClipStatuses</code></td><td style="text-align:left;">Get the status of the next animation clip.</td></tr><tr><td style="text-align:left;"><code>setLayerWeight</code></td><td style="text-align:left;">Set the weight of a certain <a href="./animation-graph-layer">animation-graph layer</a>.</td></tr></tbody></table><ul><li><p><strong>Variable</strong> Control</p><p>For example, we have a variable in the <a href="./animation-graph-panel#Variables">Animation Graph Panel</a> added several variables, the code can get and modify the value of the variables, the code example is as follows.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get the animation controller component    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> animationController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AnimationController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(animation.AnimationController)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get all variables</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> variables</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> animationController.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getVariables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get the value of the variable named &#39;vertical&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vertical</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> animationController.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vertical&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Change the value of the variable named &#39;vertical&#39; to 1.0, which will calculate the conditional transition on the next update frame</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">animationController.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vertical&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><blockquote><p><strong>Note</strong>: Variables for the animation state machine can currently only be added and removed in the <a href="./animation-graph-panel#Variables">Animation Graph Panel</a>.</p></blockquote></li><li><p>Get the current <strong>state</strong></p><p>Get the normalized progress of the current <strong>state</strong> of the state machine at layer 0, with the following code example.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> states</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MotionStateStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> animationController.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentStateStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(states.progress);</span></span></code></pre></div></li><li><p>Get the current <strong>transition</strong></p><p>Gets information about the upcoming <strong>transition</strong> of the state machine at layer 0.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> transition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransitionStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> animationController.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentTransition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(transition.duration, transition.time)</span></span></code></pre></div></li></ul>`,12),r=[o];function h(p,d,k,g,c,m){return s(),i("div",null,r)}const f=a(l,[["render",h]]);export{u as __pageData,f as default};
