import{_ as t,c as e,o as a,a4 as o}from"./chunks/framework.uQk9_EO2.js";const n="/docs/cocos/assets/lightmap-panel.C5EoElSu.png",s="/docs/cocos/assets/light-bakeable.hebh7oQ3.png",i="/docs/cocos/assets/meshrenderer-bakeable.wW39-fvG.png",l="/docs/cocos/assets/materials.BtaJEf9s.png",r="/docs/cocos/assets/overlap_back.CVJOaG57.png",p="/docs/cocos/assets/overlap_front.MONkRUc6.png",g="/docs/cocos/assets/overlap_lightmap.DR7q_nl7.png",h="/docs/cocos/assets/uvspace_lightmap.CBnFDhNh.png",c="/docs/cocos/assets/lightmap-generate.BKjcPZqr.png",d="/docs/cocos/assets/lightmap-result.QXbLaFSd.png",L=JSON.parse('{"title":"Lightmapping","description":"","frontmatter":{},"headers":[],"relativePath":"en/concepts/scene/light/lightmap.md","filePath":"en/concepts/scene/light/lightmap.md","lastUpdated":1712305443000}'),m={name:"en/concepts/scene/light/lightmap.md"},u=o('<h1 id="lightmapping" tabindex="-1">Lightmapping <a class="header-anchor" href="#lightmapping" aria-label="Permalink to &quot;Lightmapping&quot;">​</a></h1><p>The <strong>Baking System</strong> pre-calculates the lighting, shadows, etc. that a static object with a stable light will receive. The result of this calculation is stored in a texture map, which is called a <strong>lightmap</strong>.</p><p>Cocos Creator automatically processes and uses the generated lightmap at runtime. In scenes with fixed lights, using lightmaps instead of real-time lighting calculations can reduce resource consumption and thus increase the efficiency of the scene.</p><h2 id="lightmapping-panel" tabindex="-1">Lightmapping Panel <a class="header-anchor" href="#lightmapping-panel" aria-label="Permalink to &quot;Lightmapping Panel&quot;">​</a></h2><p>Click <strong>Project -&gt; Lightmapping</strong> in the editor menu bar to open the Lightmapping panel. The panel consists of two pages, <strong>Scene</strong> and <strong>Baked</strong>.</p><p><img src="'+n+'" alt="bake result"></p><ul><li><strong>Scene</strong>: mainly used to configure the parameters related to generating the lightmap.</li><li><strong>Baked</strong>: mainly used to display the generated lightmap and its related information.</li></ul><p>For details, please see the <strong>Generating Lightmaps</strong> section below.</p><h3 id="property-description" tabindex="-1">Property Description <a class="header-anchor" href="#property-description" aria-label="Permalink to &quot;Property Description&quot;">​</a></h3><p>The description of each property on the <strong>Scene</strong> page is as follows:</p><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">MSAA</td><td style="text-align:left;">Multiple Sampling, optional values include: 1, 2, 4, 8</td></tr><tr><td style="text-align:left;">Resolution</td><td style="text-align:left;">The resolution of the generated lightmap, optional values are 128, 256, 512, 1024, 2048</td></tr><tr><td style="text-align:left;">Gamma</td><td style="text-align:left;">Gamma correction value</td></tr><tr><td style="text-align:left;">GIScale</td><td style="text-align:left;">Global lighting scaling factor</td></tr><tr><td style="text-align:left;">GISamples</td><td style="text-align:left;">Global illumination sampling factor</td></tr><tr><td style="text-align:left;">AOLevel</td><td style="text-align:left;">AO (Ambient Occlusion) level</td></tr><tr><td style="text-align:left;">AOStrength</td><td style="text-align:left;">AO intensity</td></tr><tr><td style="text-align:left;">AORadius</td><td style="text-align:left;">AO radius</td></tr><tr><td style="text-align:left;">AOColor</td><td style="text-align:left;">AO color</td></tr></tbody></table><h2 id="generating-lightmaps" tabindex="-1">Generating lightmaps <a class="header-anchor" href="#generating-lightmaps" aria-label="Permalink to &quot;Generating lightmaps&quot;">​</a></h2><ol><li><p>Select the node with the light component in the <strong>Hierarchy</strong> panel, then set the <strong>StaticSettings</strong> of the light component in the <strong>Inspector</strong> panel, and check the <code>Bakeable</code> property (currently multiple <a href="./lightType/dir-light">Directional Lights</a> are not supported).</p><p><img src="'+s+'" alt="enable lightbake"></p><ul><li><p><strong>EditorOnly</strong>: whether to take effect only in the editor</p></li><li><p><strong>Bakeable</strong>: whether to bake static lighting</p></li><li><p><strong>CastShadow</strong>: whether to cast static shadows</p></li></ul></li><li><p>Select the node with the <a href="./../../../engine/renderable/model-component">MeshRenderer component</a> in the <strong>Hierarchy</strong> panel to generate the lightmap, then set <strong>LightmapSettings</strong> in the <strong>Inspector</strong> panel and check the <code>Bakeable</code> property.</p><p><img src="'+i+'" alt="model lightmap settings"></p><ul><li><p><strong>Bakeable</strong>: whether to bake static lighting</p></li><li><p><strong>CastShadow</strong>: whether to cast static shadows</p></li><li><p><strong>ReceiveShadow</strong>: whether to receive static shadows</p></li><li><p><strong>LightmapSize</strong>: the size of the model lightmap</p></li></ul><blockquote><p><strong>Notes</strong>: to generate lightmaps for a model, there are two requirements:</p><ol><li><p>When the artist creates a model resource, in addition to the UVs of the model itself, another set of UVs for lightmapping needs to be included.</p></li><li><p>The model&#39;s Materials need to have the <strong>USE LIGHTMAP</strong> rendering option turned on, for example:</p></li></ol><p><img src="'+l+'" alt="materials use lightmap"></p></blockquote></li><li><p>lightmap UVs Unlike texture UVs, lightmap UVs cannot overlap</p><blockquote><p><strong>Notes</strong>：Incorrect UVs produce errors：</p><ol><li><p>UV of different planes are interlaced</p><p><img src="'+r+'" alt="lightmap uv overlap"><img src="'+p+'" alt="lightmap uv overlap"><img src="'+g+'" alt="lightmap uv overlap"></p></li><li><p>There is no reserved interval between UV blocks</p><p><img src="'+h+'" alt="lightmap uv space"></p></li></ol></blockquote></li><li><p>Open the <strong>Lightmapping</strong> panel and set the corresponding properties. Then click the <strong>Lightmap Generate</strong> button, a file storage dialog will pop up, you need to specify a folder (must be in the <code>assets</code> directory) to store the generated lightmap data information. Notice the baking progress log at the bottom of the <strong>Lightmapping</strong> panel.</p><p><img src="'+c+'" alt="bake param"></p></li><li><p>After baking, the generated lightmap, as well as the file name, size and other related information can be viewed on the <strong>Baked</strong> page of the <strong>Lightmapping</strong> panel. The generated lightmaps are automatically processed by the engine and do not need to be manipulated by the developer.</p><p><img src="'+d+'" alt="bake result"></p><ol><li><strong>Bake result</strong>: shows the generated lightmap after baking, in format <strong>RGBE8</strong>, with <strong>R</strong>/<strong>G</strong>/<strong>B</strong> options to view the corresponding channels of the lightmap as required.</li><li><strong>Lightmap clear</strong>: used to delete the generated lightmap and related information.</li><li><strong>Information output panel</strong>: shows the generated lightmap file name, size and other related information.</li></ol></li></ol>',13),f=[u];function b(_,y,k,w,x,v){return a(),e("div",null,f)}const T=t(m,[["render",b]]);export{L as __pageData,T as default};
