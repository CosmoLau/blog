import{_ as e,c as t,o,a4 as r}from"./chunks/framework.uQk9_EO2.js";const g=JSON.parse('{"title":"Cocos Creator Image Location Resolution Algorithm","description":"","frontmatter":{},"headers":[],"relativePath":"en/asset/model/image-location-resolution.md","filePath":"en/asset/model/image-location-resolution.md","lastUpdated":1712305443000}'),i={name:"en/asset/model/image-location-resolution.md"},c=r('<h1 id="cocos-creator-image-location-resolution-algorithm" tabindex="-1">Cocos Creator Image Location Resolution Algorithm <a class="header-anchor" href="#cocos-creator-image-location-resolution-algorithm" aria-label="Permalink to &quot;Cocos Creator Image Location Resolution Algorithm&quot;">â€‹</a></h1><p>The parameters given in the Cocos Creator image location resolution algorithm and their descriptions are as follows:</p><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;">The desired URL</td></tr><tr><td style="text-align:left;"><code>startDir</code></td><td style="text-align:left;">The starting search directory</td></tr><tr><td style="text-align:left;"><code>DEPTH</code></td><td style="text-align:left;">Search depth, fixed to <strong>2</strong></td></tr><tr><td style="text-align:left;"><code>SEARCH_DIR_NAMES</code></td><td style="text-align:left;">Array of texture folder names, default is: <code>textures</code>, <code>materials</code></td></tr><tr><td style="text-align:left;"><code>SEARCH_EXT_NAMES</code></td><td style="text-align:left;">Array of extensions to search for, fixed to <code>.jpg</code>, <code>.jpeg</code>, <code>.png</code>, <code>.tga</code>, <code>.webp</code></td></tr></tbody></table><p>The Cocos Creator image location resolution algorithm is given by the following procedure:</p><ul><li><p>If the file corresponding to <code>url</code> exists, return <code>url</code>.</p></li><li><p>Let <code>expectedExtName</code> be the extension of <code>url</code>.</p></li><li><p>let <code>expectedBaseName</code> be the extensionless filename of <code>url</code>.</p></li><li><p>Let <code>searchExtNames</code> be the array of <code>[expectedExtName, ...SEARCH_EXT_NAMES]</code> after de-duplication.</p></li><li><p>Let <code>currentDir</code> be <code>startDir</code> and loop for <code>DEPTH</code> times:</p><ul><li><p>If <code>currentDir</code> is outside the project&#39;s <code>assets</code> directory, then exit the loop.</p></li><li><p>If none of the subdirectories in the <code>currentDir</code> directory have names matching <code>SEARCH_DIR_NAMES</code>, then the next loop is executed.</p></li><li><p>Make <code>dir</code> a subdirectory of the <code>currentDir</code> directory with a name matching <code>SEARCH_DIR_NAMES</code>.</p></li><li><p>Search <code>dir</code> for files with base names matching <code>expectedBaseName</code> and extensions matching <code>searchExtNames</code>, and if so, return their paths.</p></li><li><p>Set <code>currentDir</code> to its parent directory.</p></li></ul></li><li><p>Return search failure.</p></li></ul>',5),a=[c];function d(l,s,n,h,p,m){return o(),t("div",null,a)}const u=e(i,[["render",d]]);export{g as __pageData,u as default};
