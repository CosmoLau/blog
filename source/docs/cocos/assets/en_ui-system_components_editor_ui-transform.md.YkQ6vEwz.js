import{_ as s,c as e,o as i,a4 as t}from"./chunks/framework.uQk9_EO2.js";const E=JSON.parse('{"title":"UITransform Component Reference","description":"","frontmatter":{},"headers":[],"relativePath":"en/ui-system/components/editor/ui-transform.md","filePath":"en/ui-system/components/editor/ui-transform.md","lastUpdated":1712305443000}'),n={name:"en/ui-system/components/editor/ui-transform.md"},a=t(`<h1 id="uitransform-component-reference" tabindex="-1">UITransform Component Reference <a class="header-anchor" href="#uitransform-component-reference" aria-label="Permalink to &quot;UITransform Component Reference&quot;">​</a></h1><p>The UITransform component defines the rectangle information on the UI, including the content size and anchor position of the rectangle. This component allows developers to modify the size and position of the rectangle freely, generally for rendering, calculation of click events, UI layout, screen adaptation, etc.</p><p>Click the <strong>Add Component</strong> button at the bottom of the <strong>Inspector</strong> panel and select <strong>UITransform</strong> from <strong>UI</strong> to add the UITransform component to the node.</p><p>Please refer to the <a href="./__APIDOC__/en/class/UITransform">UITransform API</a>.</p><h2 id="uitransform-properties" tabindex="-1">UITransform Properties <a class="header-anchor" href="#uitransform-properties" aria-label="Permalink to &quot;UITransform Properties&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Function Explanation</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>ContentSize</strong></td><td style="text-align:left;">The content size of UI rectangle.</td></tr><tr><td style="text-align:left;"><strong>AnchorPoint</strong></td><td style="text-align:left;">The anchor position of UI rectangle.</td></tr></tbody></table><h3 id="change-the-size-and-anchor-point-in-script-example" tabindex="-1">change the size and anchor point in script. Example: <a class="header-anchor" href="#change-the-size-and-anchor-point-in-script-example" aria-label="Permalink to &quot;change the size and anchor point in script. Example:&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { _decorator, Component, Node, UITransform } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ccclass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">property</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _decorator;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ccclass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Example&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Example</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> uiTransform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UITransform);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // method one</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setContentSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAnchorPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // method two</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.anchorX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.anchorY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="deprecation-of-the-priority-property" tabindex="-1">Deprecation of the priority property <a class="header-anchor" href="#deprecation-of-the-priority-property" aria-label="Permalink to &quot;Deprecation of the priority property&quot;">​</a></h3><p>The <code>priority</code> property of the <strong>UITransform</strong> component was deprecated in v3.1, and users can adjust the rendering order by setting the order of the node tree using <code>setSiblingIndex()</code>.</p><p><strong>Description of the deprecated <code>priority</code> property and the recommended <code>setSiblingIndex()</code> method</strong>:</p><p>The <code>priority</code> property on the <strong>UITransform</strong> component was deprecated in v3.1 due to a lack of clarity and naming conflicts with other properties in the engine. The <code>priority</code> property was originally designed to provide a shortcut for the user to sort the node tree, but has no other use in itself and is not related to the meaning of &quot;priority&quot;, and actually still adjusts the rendering order by changing the order of the node tree.</p><p>After deprecating the <code>priority</code> property, users can replace it with the <code>setSiblingIndex()</code> method, which adjusts the order of the node tree by affecting the <code>siblingIndex</code> property of the node. The difference is that the <code>priority</code> property has a default value and the <code>siblingIndex</code> property of a node is actually the position of the node in its parent node, so the value of the node&#39;s <code>siblingIndex</code> property will change when the node tree changes. This requires that when using the <code>setSiblingIndex()</code> method, the relative position of the node in the parent node is known and controlled in order to obtain the desired result.</p><blockquote><p><strong>Note</strong>: the <code>siblingIndex</code> property should not be used in the same way as the <code>priority</code> (deprecated) property, as they have different meanings. To change the <code>siblingIndex</code> property, need to understand and know that it represents the position under the parent node and will change when the node tree changes, and can only be modified by the <code>setSiblingIndex()</code> method.</p></blockquote><p>Considering the need for quick sorting of nodes, a more convenient and quick interface for users to sort nodes will be provided in future versions.</p>`,15),r=[a];function o(h,p,l,d,k,c){return i(),e("div",null,r)}const y=s(n,[["render",o]]);export{E as __pageData,y as default};
