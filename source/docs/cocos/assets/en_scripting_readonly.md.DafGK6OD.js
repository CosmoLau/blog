import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.uQk9_EO2.js";const g=JSON.parse('{"title":"Development Notes","description":"","frontmatter":{},"headers":[],"relativePath":"en/scripting/readonly.md","filePath":"en/scripting/readonly.md","lastUpdated":1712305443000}'),t={name:"en/scripting/readonly.md"},n=e(`<h1 id="development-notes" tabindex="-1">Development Notes <a class="header-anchor" href="#development-notes" aria-label="Permalink to &quot;Development Notes&quot;">​</a></h1><h2 id="readonly" tabindex="-1">ReadOnly <a class="header-anchor" href="#readonly" aria-label="Permalink to &quot;ReadOnly&quot;">​</a></h2><p>Since <code>Readonly</code> is a read-only property, it is not recommended to write to it. Therefore, calling the interface directly through the <code>Readonly</code> property to modify the value is not guaranteed to work across platforms.</p><p>For example, the position of a node in the world coordinate system is <code>Readonly</code> for.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@en</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Position in world coordinate system</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@zh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 世界坐标系下的坐标</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">get </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">worldPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): Readonly</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">math.Vec3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">worldPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val: Readonly</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">math.Vec3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>In the native platform, the result of <code>add</code> here is not saved to <code>worldPosition</code>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.worldPosition.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xxx); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The results will not be saved!</span></span></code></pre></div><p>To avoid this, it can be passed through an intermediate variable with the following code example:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.worldPosition.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(diff.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">multiplyScalar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.speedFactor));</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setWorldPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ret);</span></span></code></pre></div><p>Common properties include, but are not limited to, those listed below: <code>position</code>, <code>rotation</code>, <code>scale</code>, <code>worldPosition</code>, <code>worldRotation</code>, <code>worldScale</code>, <code>eulerAngles</code>, and <code>worldMatrix</code>, all of which are recommended to be used in the above way.</p>`,10),l=[n];function h(o,p,d,r,k,c){return a(),i("div",null,l)}const E=s(t,[["render",h]]);export{g as __pageData,E as default};
