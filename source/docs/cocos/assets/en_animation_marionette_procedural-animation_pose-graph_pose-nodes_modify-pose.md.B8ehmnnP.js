import{_ as t,c as e,o,a4 as n}from"./chunks/framework.uQk9_EO2.js";const a="/docs/cocos/assets/apply-transform.DEDkqBkD.png",i="/docs/cocos/assets/apply-transform-inspector.-ODO4Y1N.png",s="/docs/cocos/assets/copy-transform.BWzb9_g8.png",r="/docs/cocos/assets/copy-transform-inspector.CyBWtXor.png",d="/docs/cocos/assets/curve.DP1XEc5i.png",l="/docs/cocos/assets/inspector-property.VYFizwYZ.png",p="/docs/cocos/assets/two-bone-ik-solver.DD09RjFT.png",c="/docs/cocos/assets/two-bone-ik-demonstration.CO6NyApV.gif",h="/docs/cocos/assets/pole-target-demonstration.CdvoEa1s.gif",f="/docs/cocos/assets/two-bone-ik-inspector.CynCeD6p.png",D=JSON.parse('{"title":"Modify Poses","description":"","frontmatter":{},"headers":[],"relativePath":"en/animation/marionette/procedural-animation/pose-graph/pose-nodes/modify-pose.md","filePath":"en/animation/marionette/procedural-animation/pose-graph/pose-nodes/modify-pose.md","lastUpdated":1712305443000}'),g={name:"en/animation/marionette/procedural-animation/pose-graph/pose-nodes/modify-pose.md"},y=n('<h1 id="modify-poses" tabindex="-1">Modify Poses <a class="header-anchor" href="#modify-poses" aria-label="Permalink to &quot;Modify Poses&quot;">​</a></h1><p>The pose graph provides several nodes for modifying poses. Each of these nodes accepts an input pose and outputs the modified pose.</p><table><thead><tr><th style="text-align:left;">Input</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Pose</code></td><td style="text-align:left;">Pose</td><td style="text-align:left;">The pose to be modified.</td></tr></tbody></table><p>For the operation of a pose node, see <a href="./node-operation">pose graph node view</a>.</p><h2 id="apply-transform" tabindex="-1">Apply Transform <a class="header-anchor" href="#apply-transform" aria-label="Permalink to &quot;Apply Transform&quot;">​</a></h2><p><img src="'+a+'" alt="apply-transform.png"></p><p><strong>Apply transform node</strong> Applies a transform (translate and rotation) to the specified node of the input pose.</p><table><thead><tr><th style="text-align:left;">Input</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Position</code></td><td style="text-align:left;">3d-vector</td><td style="text-align:left;">The amount of modification to the position.</td></tr><tr><td style="text-align:left;"><code>Rotation</code></td><td style="text-align:left;">Quaternion</td><td style="text-align:left;">The amount of modification to the rotation.</td></tr><tr><td style="text-align:left;"><code>Intensity</code></td><td style="text-align:left;">Float</td><td style="text-align:left;">The intensity of application of the modification, in the range [0, 1]. 0 means that the modification is not applied at all, 1 means that the modification is applied completely.</td></tr></tbody></table><p><img src="'+i+'" alt="apply-transform-inspector.png"></p><table><thead><tr><th style="text-align:left;">Properties</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Node</code></td><td style="text-align:left;">The name of the node to be modified.</td></tr><tr><td style="text-align:left;"><code>Position Operation</code></td><td style="text-align:left;">Specifies how to modify the position. See <a href="./modify-pose#Transform%Operation">Transform Operations</a></td></tr><tr><td style="text-align:left;"><code>Rotation Operation</code></td><td style="text-align:left;">Specifies how to modify the rotation. See <a href="./modify-pose#Transform%Operation">Transform Operation</a></td></tr><tr><td style="text-align:left;"><code>Transform Space</code></td><td style="text-align:left;">Specifies the space in which the modification occurs; that is, the space in which the specified <code>position</code> input and <code>rotation</code> input reside.</td></tr></tbody></table><h3 id="transform-operation" tabindex="-1">Transform Operation <a class="header-anchor" href="#transform-operation" aria-label="Permalink to &quot;Transform Operation&quot;">​</a></h3><p>The transform operation options specify how the applied transform node modifies the position or rotation. The options are listed below:</p><table><thead><tr><th style="text-align:left;">Properties</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>LEAVE_UNCHANGED</strong></td><td style="text-align:left;">No modification.</td></tr><tr><td style="text-align:left;"><strong>REPLACE</strong></td><td style="text-align:left;">When used as an application option for position, the <code>position</code> input is used directly as the new position of the node; when used as an application option for rotation, the <code>rotation</code> input is used directly as the new rotation of the node.</td></tr><tr><td style="text-align:left;"><strong>ADD</strong></td><td style="text-align:left;">Adds the <code>position</code> input to the node&#39;s current position when used as an application option for position, or the <code>rotation</code> input to the node&#39;s current rotation when used as an application option for rotation.</td></tr></tbody></table><h2 id="copy-transform" tabindex="-1">Copy Transform <a class="header-anchor" href="#copy-transform" aria-label="Permalink to &quot;Copy Transform&quot;">​</a></h2><p><img src="'+s+'" alt="copy-transform.png"></p><p>The <strong>Copy Transform</strong> node copies the transform of a node in the input pose to another node.</p><p><img src="'+r+'" alt="copy-transform-inspector.png"></p><table><thead><tr><th style="text-align:left;">Properties</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Source node</code></td><td style="text-align:left;">The name of the node to be copied.</td></tr><tr><td style="text-align:left;"><code>Target Node</code></td><td style="text-align:left;">The name of the node to copy to.</td></tr><tr><td style="text-align:left;"><code>Space</code></td><td style="text-align:left;">Specifies the space where the copy occurs. When <code>COMPONENT</code> indicates that the copy occurs in component space; when <code>LOCAL</code> indicates that the copy occurs in local space.</td></tr></tbody></table><h2 id="set-auxiliary-curves" tabindex="-1">Set Auxiliary Curves <a class="header-anchor" href="#set-auxiliary-curves" aria-label="Permalink to &quot;Set Auxiliary Curves&quot;">​</a></h2><p><img src="'+d+'" alt="curve.png"></p><p>The <strong>Set Auxiliary Curve</strong> node modifies the current value of the specified auxiliary curve in the input pose.</p><table><thead><tr><th style="text-align:left;">Input</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Value</code></td><td style="text-align:left;">Float</td><td style="text-align:left;">The amount of modification to the auxiliary curve.</td></tr></tbody></table><p><img src="'+l+'" alt="inspector-property.png"></p><table><thead><tr><th style="text-align:left;">Properties</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Curve Name</code></td><td style="text-align:left;">The name of the auxiliary curve to be modified.</td></tr><tr><td style="text-align:left;"><code>Flag</code></td><td style="text-align:left;">Specifies how to modify the auxiliary curve. <br> When <code>LEAVE_UNCHANGED</code> it is not modified; when <code>REPLACE</code> it means that the <code>Curve Value</code> input is used as the current value of the auxiliary curve; <br> when <code>ADD</code> it means that the <code>Curve Value</code> input is added to the current value of the auxiliary curve.</td></tr></tbody></table><h2 id="double-skeleton-ik" tabindex="-1">Double Skeleton IK <a class="header-anchor" href="#double-skeleton-ik" aria-label="Permalink to &quot;Double Skeleton IK&quot;">​</a></h2><p><img src="'+p+'" alt="two-bone-ik-solver.png"></p><p>IK solving is often used to move or rotate a bone to a target position and drive the parent bone so that it remains the same distance from the parent (or within an acceptable range). For example, when moving a foot, the knee bone and thigh bone should bend accordingly.</p><p><strong>Two-bone IK solver node</strong> solves IK problems consisting of two sections of (three bones) bones for the input pose. These three bones form a direct parent-child relationship, i.e. &quot;child level - parent level - parent of parent level&quot;. The &quot;child&quot; is called the <strong>end-effector</strong> or <strong>end-bone</strong>, the &quot;parent of parent&quot; is called the <strong>root-bone</strong> (in this IK problem), and the &quot;parent of parent &quot; is called the <strong>intermediate bone</strong>.</p><blockquote><p>Therefore, the &quot;two&quot; in &quot;two-bone IK&quot; should be interpreted as &quot;two segments of bones&quot; rather than &quot;two bones&quot;.</p></blockquote><p>When evaluating, the solver will transform the end and middle bones, and rotate the root bone so that the end bone reaches the specified position; and keep the distance between the parent and child levels unchanged, and the position of the root bone unchanged in the process.</p><p><img src="'+c+'" alt="Two Bone IK Demonstration"></p><p>For fixed end-bone and root-bone positions, an infinite number of solutions exist for the intermediate bones when solving. As shown in Fig:</p><p><img src="'+h+'" alt="Pole Target Demonstration"></p><p>The solver will try to find the &quot;best&quot; solution, but there may still be more than one such solution, and it may not be the desired one.</p><p>Therefore, in order to explicitly specify the orientation of the intermediate bones, the solver also allows to specify a <strong>pole-target</strong> to determine the bending direction of the skeletal chain.</p><p><img src="'+f+'" alt="two-bone-ik-inspector.png"></p><table><thead><tr><th style="text-align:left;">Input</th><th style="text-align:left;">Type</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>End-effector-target</code></td><td style="text-align:left;">3d-vector</td><td>Target position of the end-effector.</td></tr><tr><td style="text-align:left;"><code>Polar target</code></td><td style="text-align:left;">3d-vector</td><td>The position of the polar target.</td></tr></tbody></table><table><thead><tr><th style="text-align:left;">Attributes</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>End-effector node</code></td><td style="text-align:left;">The name of the end-effector node.</td></tr><tr><td style="text-align:left;"><code>End-Executor-Target</code></td><td style="text-align:left;">The target setting of the end-effector.</td></tr><tr><td style="text-align:left;"><code>Polar target</code></td><td style="text-align:left;">The polar target setting.</td></tr></tbody></table><h3 id="target-settings" tabindex="-1">Target settings <a class="header-anchor" href="#target-settings" aria-label="Permalink to &quot;Target settings&quot;">​</a></h3><p>The target setting is used to describe the end-effector target or the poleward target. The options are as follows:</p><table><thead><tr><th style="text-align:left;">Attributes</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Type</code></td><td style="text-align:left;">Target type. When <code>VALUE</code>, it means that the target position is represented as the specified (3D vector) value; when <code>BONE</code>, it means that the position of another bone is used as the target position; and when <code>NONE</code>, it means that the current position is used as the target position, i.e., the target is not solved for.</td></tr><tr><td style="text-align:left;"><code>Target Bone</code></td><td style="text-align:left;">The name of the target bone when the target type is <code>BONE</code>.</td></tr><tr><td style="text-align:left;"><code>Target Position Space</code></td><td style="text-align:left;">The space of the target position when the target type is <code>VALUE</code>.</td></tr></tbody></table>',41),m=[y];function u(b,x,T,_,v,w){return o(),e("div",null,m)}const P=t(g,[["render",u]]);export{D as __pageData,P as default};
