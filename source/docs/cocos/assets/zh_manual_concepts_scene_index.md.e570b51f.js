import{_ as a,v as e,b as t,R as r}from"./chunks/framework.5ffcbaff.js";const o="/docs/cocos/assets/world01.7b1317c3.jpg",u=JSON.parse('{"title":"场景制作工作流程","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/concepts/scene/index.md","filePath":"zh/manual/concepts/scene/index.md"}'),s={name:"zh/manual/concepts/scene/index.md"},i=r('<h1 id="场景制作工作流程" tabindex="-1">场景制作工作流程 <a class="header-anchor" href="#场景制作工作流程" aria-label="Permalink to &quot;场景制作工作流程&quot;">​</a></h1><p>场景是游戏中的环境因素的抽象集合，是创建游戏环境的局部单位，我们可以理解为游戏开发设计人员通过在编辑器中制作一个场景，来表现游戏中的一部分世界内容。</p><p><img src="'+o+'" alt="scene world"></p><h2 id="场景结构" tabindex="-1">场景结构 <a class="header-anchor" href="#场景结构" aria-label="Permalink to &quot;场景结构&quot;">​</a></h2><p>Cocos Creator 通过节点树和节点组件系统实现了自由的场景结构。其中 Node 负责管理节点树的父子关系以及空间矩阵变换 Transform，这样可以轻松地在场景中管理和摆放所有的实体节点。<br> 组件系统赋予了节点各种各样的高级功能，比如模型渲染（MeshRenderer 组件）、动画（Animation 组件）、光源（Light 组件）、地形（Terrain 组件）等。其中 3D 场景中的必要元素是 Camera 组件，Camera 组件代表的是游戏中的玩家视角，没有 Camera 就什么也看不见。因而在创建场景时，Creator 会默认创建一个挂载了 Camera 组件的节点。</p><h2 id="场景制作相关工作流程" tabindex="-1">场景制作相关工作流程 <a class="header-anchor" href="#场景制作相关工作流程" aria-label="Permalink to &quot;场景制作相关工作流程&quot;">​</a></h2><ul><li><a href="./../../asset/scene.html">场景资源</a></li><li><a href="./node-component.html">节点和组件</a></li><li><a href="./coord.html">坐标系和节点属性变换</a></li><li><a href="./node-tree.html">节点层级和显示顺序</a></li><li><a href="./scene-editing.html">使用场景编辑器搭建场景</a></li><li><a href="./skybox.html">天空盒</a></li><li><a href="./fog.html">全局雾</a></li><li><a href="./light/shadow.html">阴影</a></li></ul>',7),n=[i];function l(h,c,d,m,p,f){return e(),t("div",null,n)}const b=a(s,[["render",l]]);export{u as __pageData,b as default};
