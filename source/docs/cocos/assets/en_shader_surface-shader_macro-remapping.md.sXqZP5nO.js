import{_ as t,c as a,o as e,a4 as s}from"./chunks/framework.uQk9_EO2.js";const i="/docs/cocos/assets/macro-remapping.DhX0mJgL.png",m=JSON.parse('{"title":"Macro Remapping","description":"","frontmatter":{},"headers":[],"relativePath":"en/shader/surface-shader/macro-remapping.md","filePath":"en/shader/surface-shader/macro-remapping.md","lastUpdated":1712305443000}'),n={name:"en/shader/surface-shader/macro-remapping.md"},l=s('<h1 id="macro-remapping" tabindex="-1">Macro Remapping <a class="header-anchor" href="#macro-remapping" aria-label="Permalink to &quot;Macro Remapping&quot;">​</a></h1><p>During internal calculations, Surface Shader will use some macro switches, which start with <code>CC_SURFACES_</code>.</p><blockquote><p><strong>Note</strong>: Macros start with the <code>CC_SURFACES_</code> won&#39;t appear on the material inspector panel.</p></blockquote><p>The complete macro list is as follows.</p><table><thead><tr><th style="text-align:left;">Macro Nam</th><th>Type</th><th>Meaning</th></tr></thead><tbody><tr><td style="text-align:left;">CC_SURFACES_USE_VERTEX_COLOR</td><td>BOOL</td><td>Use vertex color</td></tr><tr><td style="text-align:left;">CC_SURFACES_USE_SECOND_UV</td><td>BOOL</td><td>Use second uv</td></tr><tr><td style="text-align:left;">CC_SURFACES_USE_TWO_SIDED</td><td>BOOL</td><td>Use two-side normal for two-side lighting</td></tr><tr><td style="text-align:left;">CC_SURFACES_USE_TANGENT_SPACE</td><td>BOOL</td><td>Use tangent space - must be enabled when using normal map or anisotropy ）</td></tr><tr><td style="text-align:left;">CC_SURFACES_TRANSFER_LOCAL_POS</td><td>BOOL</td><td>Access model space position in FS</td></tr><tr><td style="text-align:left;">CC_SURFACES_LIGHTING_ANISOTROPIC</td><td>BOOL</td><td>Enable anisotropic material</td></tr><tr><td style="text-align:left;">CC_SURFACES_LIGHTING_ANISOTROPIC_ENVCONVOLUTION_COUNT</td><td>UINT</td><td>Sample count of anisotropic convolution, 0 means convolution is disabled, only valid when anisotropy is enabled</td></tr><tr><td style="text-align:left;">CC_SURFACES_LIGHTING_USE_FRESNEL</td><td>BOOL</td><td>Calculate Fresnel coefficient through relative refractive index ior</td></tr><tr><td style="text-align:left;">CC_SURFACES_LIGHTING_TRANSMIT_DIFFUSE</td><td>BOOL</td><td>Enable backside penetration diffuse (used for hair, leaves, ears, etc)</td></tr><tr><td style="text-align:left;">CC_SURFACES_LIGHTING_TRANSMIT_SPECULAR</td><td>BOOL</td><td>Enable light specular (used for water surface, glass, etc.)</td></tr><tr><td style="text-align:left;">CC_SURFACES_LIGHTING_TRT</td><td>BOOL</td><td>Enable light reflected from the interior after transmission(used for hair)</td></tr><tr><td style="text-align:left;">CC_SURFACES_LIGHTING_TT</td><td>BOOL</td><td>Enable light diffused from the interior after transmission(used for hair)</td></tr><tr><td style="text-align:left;">CC_SURFACES_USE_REFLECTION_DENOISE</td><td>BOOL</td><td>Enable environmental reflection denoising, only valid under legacy compatibility mode</td></tr><tr><td style="text-align:left;">CC_SURFACES_USE_LEGACY_COMPATIBLE_LIGHTING</td><td>BOOL</td><td>Enable legacy compatible lighting mode, the rendering effect can be completely consistent with legacy/standard.effect, convenient for upgrade</td></tr></tbody></table><blockquote><p><strong>Note</strong>： If these macros are not defined, the system will automatically define them as the default value 0.</p></blockquote><p>Search for the <code>CCProgram macro-remapping</code> section, and you can see that the content consists of three parts.</p><p><img src="'+i+`" alt="macro-remapping"></p><h2 id="display-macros-on-panel" tabindex="-1">Display Macros on Panel <a class="header-anchor" href="#display-macros-on-panel" aria-label="Permalink to &quot;Display Macros on Panel&quot;">​</a></h2><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ui displayed macros not used in this effect file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#pragma</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> define-meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HAS_SECOND_UV</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#pragma</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> define-meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> USE_TWOSIDE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#pragma</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> define-meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> USE_REFLECTION_DENOISE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#pragma</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> define-meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> USE_COMPATIBLE_LIGHTING</span></span></code></pre></div><p>By default, macros starting with <code>CC_</code> will not be displayed on the material panel. When we want a macro to be displayed on the material panel, we can do the following.</p><ol><li>Use <code>#pragma define-meta</code> to define a panel macro, we take <code>HAS_SECOND_UV</code> as an example.</li></ol><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#pragma</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> define-meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HAS_SECOND_UV</span></span></code></pre></div><ol start="2"><li>Remap the macro starting with <code>CC_SURFACES_</code> to this macro, for example.</li></ol><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_SURFACES_USE_SECOND_UV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HAS_SECOND_UV</span></span></code></pre></div><p>In this way, on the material panel corresponding to this shader, you can control the value of the <code>CC_SURFACES_USE_SECOND_UV</code> macro by controlling <code>HAS_SECOND_UV</code>.</p><h2 id="macros-used-in-surface-functions" tabindex="-1">Macros Used in Surface Functions <a class="header-anchor" href="#macros-used-in-surface-functions" aria-label="Permalink to &quot;Macros Used in Surface Functions&quot;">​</a></h2><p>If a macro is used in the shader code and does not start with <code>CC_</code>, it will automatically be displayed on the material panel. For example.</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ui displayed macros used in this effect file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_SURFACES_USE_VERTEX_COLOR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USE_VERTEX_COLOR</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IS_ANISOTROPY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> USE_NORMAL_MAP</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  #define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_SURFACES_USE_TANGENT_SPACE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#endif</span></span></code></pre></div><p>In this case, <code>IS_ANISOTROPY</code> and <code>USE_NORMAL_MAP</code> will be displayed on the material panel, and can be switched on and off through the material panel.</p><h2 id="internal-functionality-macros" tabindex="-1">Internal Functionality Macros <a class="header-anchor" href="#internal-functionality-macros" aria-label="Permalink to &quot;Internal Functionality Macros&quot;">​</a></h2><p>For some macros, we don&#39;t want to control it on the panel, just define its value directly, for example.</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// functionality for each effect</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_SURFACES_LIGHTING_ANISOTROPIC_ENVCONVOLUTION_COUNT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 31</span></span></code></pre></div><h2 id="hidden-macros" tabindex="-1">Hidden Macros <a class="header-anchor" href="#hidden-macros" aria-label="Permalink to &quot;Hidden Macros&quot;">​</a></h2><p>If you have written some macros in your shader but don&#39;t want them to appear on the material panel, you can start them with <code>CC_</code>.</p><p>To differentiate from the internal system macros, user-defined internal macros are recommended to start with <code>CC_USER_</code>.</p><p>For more details about macros, please see <a href="./../macros">Macros</a>。</p>`,27),d=[l];function o(r,p,h,c,g,_){return e(),a("div",null,d)}const k=t(n,[["render",o]]);export{m as __pageData,k as default};
