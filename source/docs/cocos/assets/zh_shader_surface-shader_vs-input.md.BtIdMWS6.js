import{_ as s,c as t,o as a,a4 as i}from"./chunks/framework.uQk9_EO2.js";const g=JSON.parse('{"title":"Vertex Shader 的输入值","description":"","frontmatter":{},"headers":[],"relativePath":"zh/shader/surface-shader/vs-input.md","filePath":"zh/shader/surface-shader/vs-input.md","lastUpdated":1712305443000}'),e={name:"zh/shader/surface-shader/vs-input.md"},d=i(`<h1 id="vertex-shader-的输入值" tabindex="-1">Vertex Shader 的输入值 <a class="header-anchor" href="#vertex-shader-的输入值" aria-label="Permalink to &quot;Vertex Shader 的输入值&quot;">​</a></h1><h2 id="参数列表" tabindex="-1">参数列表 <a class="header-anchor" href="#参数列表" aria-label="Permalink to &quot;参数列表&quot;">​</a></h2><p>Vertex Shader 输入值都在 <code>SurfacesStandardVertexIntermediate</code> 结构体中，作为函数参数传入。</p><table><thead><tr><th>Vertex Shader 输入值</th><th>类型</th><th>使用时需要开启的宏</th><th>含义</th></tr></thead><tbody><tr><td>position</td><td>vec4</td><td>N/A</td><td>本地坐标</td></tr><tr><td>normal</td><td>vec3</td><td>N/A</td><td>本地法线</td></tr><tr><td>tangent</td><td>vec4</td><td>CC_SURFACES_USE_TANGENT_SPACE</td><td>本地切线和镜像法线标记</td></tr><tr><td>color</td><td>vec4</td><td>CC_SURFACES_USE_VERTEX_COLOR</td><td>顶点颜色</td></tr><tr><td>texCoord</td><td>vec2</td><td>N/A</td><td>UV0</td></tr><tr><td>texCoord1</td><td>vec2</td><td>CC_SURFACES_USE_SECOND_UV</td><td>UV1</td></tr><tr><td>clipPos</td><td>vec4</td><td>N/A</td><td>投影坐标</td></tr><tr><td>worldPos</td><td>vec3</td><td>N/A</td><td>世界坐标</td></tr><tr><td>worldNormal</td><td>vec4</td><td>N/A</td><td>世界法线和双面材质标记</td></tr><tr><td>worldTangent</td><td>vec3</td><td>CC_SURFACES_USE_TANGENT_SPACE</td><td>世界切线</td></tr><tr><td>worldBinormal</td><td>vec3</td><td>CC_SURFACES_USE_TANGENT_SPACE</td><td>世界副法线</td></tr></tbody></table><h2 id="宏开关" tabindex="-1">宏开关 <a class="header-anchor" href="#宏开关" aria-label="Permalink to &quot;宏开关&quot;">​</a></h2><p>当需要使用带有宏开关的输入参数时，需要在 macro-remapping 代码段中开启相应的宏，示例代码如下：</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CCProgram macro</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remapping </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //使用第二套 UV</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    #define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_SURFACES_USE_SECOND_UV</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //使用世界副法线</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    #define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_SURFACES_USE_TANGENT_SPACE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><p>在任何带 SurfacesStandardVertexIntermediate 参数的函数中，都可以直接访问到相关参数，以 SurfacesVertexModifyWorldPos 函数为例：</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CC_SURFACES_VERTEX_MODIFY_WORLD_POS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SurfacesVertexModifyWorldPos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(in SurfacesStandardVertexIntermediate </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">In</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 worldPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> In.worldPos;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    worldPos.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cc_time.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> worldPos.z);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    worldPos.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cc_time.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> worldPos.z);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> worldPos;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,10),n=[d];function h(l,r,p,k,E,o){return a(),t("div",null,n)}const _=s(e,[["render",h]]);export{g as __pageData,_ as default};
