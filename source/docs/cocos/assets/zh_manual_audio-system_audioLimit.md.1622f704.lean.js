import{_ as s,v as a,b as o,R as n}from"./chunks/framework.5ffcbaff.js";const d=JSON.parse('{"title":"兼容性说明","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/audio-system/audioLimit.md","filePath":"zh/manual/audio-system/audioLimit.md"}'),l={name:"zh/manual/audio-system/audioLimit.md"},p=n(`<h1 id="兼容性说明" tabindex="-1">兼容性说明 <a class="header-anchor" href="#兼容性说明" aria-label="Permalink to &quot;兼容性说明&quot;">​</a></h1><h2 id="web-平台音频资源的加载模式" tabindex="-1">Web 平台音频资源的加载模式 <a class="header-anchor" href="#web-平台音频资源的加载模式" aria-label="Permalink to &quot;Web 平台音频资源的加载模式&quot;">​</a></h2><p>Web 平台上的音频资源比较特别，因为 Web 标准支持以两种不同的方式加载音频资源，分别是：</p><ul><li>Web Audio：提供相对更加现代化的声音控制接口，在引擎内是以一个 audio buffer 的形式缓存的。这种方式的优点是兼容性好，问题比较少。</li><li>DOM Audio：通过生成一个标准的 audio 元素来播放音频资源，在引擎内缓存的就是这个 audio 元素。使用标准的 audio 元素播放音频资源时，在某些浏览器上可能会遇到一些兼容性问题，比如 iOS 上的浏览器不支持调整音量大小，所有 volume 相关属性将不会生效。</li></ul><p>目前 Cocos Creator 默认以 Web Audio 的方式加载音频资源，但如果检测到当前浏览器不支持加载 Web Audio，则会切换使用 DOM Audio 的方式加载音频。</p><p>如果项目需要强制通过 DOM Audio 的方式加载音频资源，请使用以下方式动态加载：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">assetManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">loadRemote</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://example.com/background.mp3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">audioLoadMode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> AudioClip</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AudioType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DOM_AUDIO</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">clip</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AudioClip</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,7),e=[p];function t(r,c,i,D,y,F){return a(),o("div",null,e)}const C=s(l,[["render",t]]);export{d as __pageData,C as default};
