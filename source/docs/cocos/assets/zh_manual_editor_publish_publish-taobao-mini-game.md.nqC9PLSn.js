import{_ as a,c as e,o as t,a5 as o}from"./chunks/framework.CqnjdYks.js";const r="/docs/cocos/assets/build_option.BpBfgWq0.png",s="/docs/cocos/assets/build.Cg6dN3LJ.png",l="/docs/cocos/assets/preview.po2GJmWR.png",f=JSON.parse('{"title":"发布到淘宝小游戏","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/editor/publish/publish-taobao-mini-game.md","filePath":"zh/manual/editor/publish/publish-taobao-mini-game.md"}'),i={name:"zh/manual/editor/publish/publish-taobao-mini-game.md"},n=o('<h1 id="发布到淘宝小游戏" tabindex="-1">发布到淘宝小游戏 <a class="header-anchor" href="#发布到淘宝小游戏" aria-label="Permalink to &quot;发布到淘宝小游戏&quot;">​</a></h1><h2 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to &quot;环境配置&quot;">​</a></h2><ul><li><p>桌面端下载 <a href="https://developer.taobao.com/?spm=a219a.15212435.0.0.6a14669aEQ2g6k" target="_blank" rel="noreferrer">淘宝开发者工具</a> 并安装。</p></li><li><p>下载 <a href="https://market.m.taobao.com/app/fdilab/download-page/main/index.html" target="_blank" rel="noreferrer">淘宝</a>，并安装到手机设备上。</p></li><li><p>淘宝客户端在 Android 上支持的最低版本为 10.22.30，在 iOS 为 10.22.30。</p></li></ul><h2 id="发布流程" tabindex="-1">发布流程 <a class="header-anchor" href="#发布流程" aria-label="Permalink to &quot;发布流程&quot;">​</a></h2><p>使用 Cocos Creator 打开需要发布的项目工程，在 <strong>构建发布</strong> 面板的 <strong>发布平台</strong> 中选择 <strong>淘宝小游戏</strong>，然后点击 <strong>构建</strong>。</p><p><img src="'+r+'" alt="build option"></p><h3 id="参数项配置" tabindex="-1">参数项配置 <a class="header-anchor" href="#参数项配置" aria-label="Permalink to &quot;参数项配置&quot;">​</a></h3><p>相关参数配置具体的填写规则如下：</p><ul><li><p><strong>主包压缩类型</strong></p><p>设置主包的压缩类型，具体内容可参考文档 <a href="./../../asset/bundle.html#压缩类型">Asset Bundle — 压缩类型</a>。</p></li><li><p><strong>配置主包为远程包</strong></p><p>该项为可选项，需要与 <strong>资源服务器地址</strong> 选项配合使用。<br> 勾选后，主包会配置为远程包，并且与其相关依赖资源一起被构建到发布包目录 remote 下的内置 Asset Bundle — <a href="./../../asset/bundle.html#内置-asset-bundle">main</a> 中。开发者需要将整个 remote 文件夹上传到远程服务器。</p></li><li><p><strong>初始场景分包</strong></p><p>该项为可选项。<br> 勾选后，首场景及其相关的依赖资源会被构建到发布包目录 assets 下的内置 Asset Bundle — <a href="./../../asset/bundle.html#内置-asset-bundle">start-scene</a> 中，提高初始场景的资源加载速度。具体内容可参考文档 <a href="./publish-wechatgame.html#初始场景的加载速度">初始场景的资源加载</a>。</p></li><li><p><strong>资源服务器地址</strong></p><p>该项为选填项，用于填写资源存放在远程服务器上的地址。开发者需要在构建后手动将发布包目录下的 remote 文件夹上传到所填写的资源服务器地址上。</p></li><li><p><strong>分离引擎</strong> 该项为可选项。<br> 勾选后，可以减小游戏的首包大小。使用方法可以参考文档 <a href="./wechatgame-plugin.html#使用说明">使用说明</a>，其中构建平台选择淘宝小游戏。</p></li></ul><h3 id="运行预览" tabindex="-1">运行预览 <a class="header-anchor" href="#运行预览" aria-label="Permalink to &quot;运行预览&quot;">​</a></h3><ul><li>构建完成后点击 <strong>构建任务</strong> 左下角的文件夹图标按钮，可以看到在项目的 <code>build</code> 目录下生成了淘宝小游戏工程文件夹 <code>taobao-mini-game</code>，其中已经包含了淘宝小游戏环境的配置文件 <code>game.json</code>。</li></ul><p><img src="'+s+'" alt="build"></p><ul><li>使用 <strong>淘宝开发者工具</strong> 打开构建生成的 <code>taobao-mini-game</code> 文件夹，即可打开淘宝小游戏项目以及预览调试游戏内容。</li></ul><p><img src="'+l+'" alt="preview"></p><h2 id="淘宝小游戏环境的资源管理" tabindex="-1">淘宝小游戏环境的资源管理 <a class="header-anchor" href="#淘宝小游戏环境的资源管理" aria-label="Permalink to &quot;淘宝小游戏环境的资源管理&quot;">​</a></h2><p>淘宝小游戏与微信小游戏类似，都存在着包体限制，超过 <strong>4MB</strong> 的额外资源，必须通过网络请求下载。<br>当包体过大时，可在 <strong>构建发布</strong> 面板配置 <strong>资源服务器地址</strong> 选项，将资源上传到远程服务器，详情请参考 <a href="./../../asset/cache-manager.html">上传资源到远程服务器</a>。</p><p>我们建议用户只保存脚本文件在小游戏包内，其他资源都从远程服务器下载。Cocos Creator 已经帮用户做好了远程资源的下载、缓存和版本管理，详情请参考 <a href="./../../asset/cache-manager.html">缓存管理器</a>。</p><h2 id="淘宝小游戏的限制" tabindex="-1">淘宝小游戏的限制 <a class="header-anchor" href="#淘宝小游戏的限制" aria-label="Permalink to &quot;淘宝小游戏的限制&quot;">​</a></h2><p>不支持以下模块：</p><ul><li>WebView</li><li>VideoPlayer</li><li>自定义字体</li></ul><h2 id="相关文档" tabindex="-1">相关文档 <a class="header-anchor" href="#相关文档" aria-label="Permalink to &quot;相关文档&quot;">​</a></h2><ul><li><a href="https://open.taobao.com/v2/doc#/abilityToOpen?docType=1&amp;docId=121213&amp;treeId=804" target="_blank" rel="noreferrer">淘宝文档中心</a></li></ul>',22),p=[n];function h(d,c,m,u,g,b){return t(),e("div",null,p)}const q=a(i,[["render",h]]);export{f as __pageData,q as default};
