import{_ as t,c as e,o as s,a4 as i}from"./chunks/framework.uQk9_EO2.js";const y=JSON.parse('{"title":"Tween Interface","description":"","frontmatter":{},"headers":[],"relativePath":"en/tween/tween-interface.md","filePath":"en/tween/tween-interface.md","lastUpdated":1712336288000}'),a={name:"en/tween/tween-interface.md"},n=i(`<h1 id="tween-interface" tabindex="-1">Tween Interface <a class="header-anchor" href="#tween-interface" aria-label="Permalink to &quot;Tween Interface&quot;">​</a></h1><h2 id="properties-and-interface" tabindex="-1">Properties and Interface <a class="header-anchor" href="#properties-and-interface" aria-label="Permalink to &quot;Properties and Interface&quot;">​</a></h2><h3 id="interface" tabindex="-1">Interface <a class="header-anchor" href="#interface" aria-label="Permalink to &quot;Interface&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Interface</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>tag</strong></td><td style="text-align:left;">Add a number tag to the current tween</td></tr><tr><td style="text-align:left;"><strong>to</strong></td><td style="text-align:left;">Create motion by interpolating the property’s value to an <strong>absolute value</strong></td></tr><tr><td style="text-align:left;"><strong>by</strong></td><td style="text-align:left;">Create motion by interpolate the property’s value to a value <strong>relative</strong> to the current one</td></tr><tr><td style="text-align:left;"><strong>set</strong></td><td style="text-align:left;">Create an instant motion by setting the property to a value</td></tr><tr><td style="text-align:left;"><strong>delay</strong></td><td style="text-align:left;">Create an instant motion of pausing for a period of time</td></tr><tr><td style="text-align:left;"><strong>call</strong></td><td style="text-align:left;">Create an instant motion by calling a function</td></tr><tr><td style="text-align:left;"><strong>target</strong></td><td style="text-align:left;">Define the target node or component to which the tween is applied</td></tr><tr><td style="text-align:left;"><strong>union</strong></td><td style="text-align:left;">Combine multiple motions as one tween</td></tr><tr><td style="text-align:left;"><strong>then</strong></td><td style="text-align:left;">Insert a new motion to the current tween queue</td></tr><tr><td style="text-align:left;"><strong>repeat</strong></td><td style="text-align:left;">Define the number of times for the motion to be executed (In previous versions, this is used to define the number of times the motion is repeated.)</td></tr><tr><td style="text-align:left;"><strong>repeatForever</strong></td><td style="text-align:left;">Set the motion to repeat for infinite times</td></tr><tr><td style="text-align:left;"><strong>sequence</strong></td><td style="text-align:left;">Define a collection of motions to be executed in sequence</td></tr><tr><td style="text-align:left;"><strong>parallel</strong></td><td style="text-align:left;">Define a collection of motions to be executed simultaneously</td></tr><tr><td style="text-align:left;"><strong>start</strong></td><td style="text-align:left;">Start the tween</td></tr><tr><td style="text-align:left;"><strong>stop</strong></td><td style="text-align:left;">Stop the tween</td></tr><tr><td style="text-align:left;"><strong>clone</strong></td><td style="text-align:left;">Clone the tween</td></tr><tr><td style="text-align:left;"><strong>show</strong></td><td style="text-align:left;">Enable the tween target to be rendered. Tween target is mandatory to be Node.</td></tr><tr><td style="text-align:left;"><strong>hide</strong></td><td style="text-align:left;">Disable the tween target to be rendered. Tween target is mandatory to be Node.</td></tr></tbody></table><h3 id="static-interface" tabindex="-1">Static Interface <a class="header-anchor" href="#static-interface" aria-label="Permalink to &quot;Static Interface&quot;">​</a></h3><p>Static methods in the <code>Tween</code> class are as follows:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Tween.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stopAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Tween.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stopAllByTag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Tween.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stopAllByTarget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node);</span></span></code></pre></div><table><thead><tr><th style="text-align:left;">Interface</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>stopAll</strong></td><td style="text-align:left;">Stop all tween motions. <br>This method will remove all registered tweens at root level. <br> <strong>Note</strong>: this method will affect all tween targets.</td></tr><tr><td style="text-align:left;"><strong>stopAllByTag</strong></td><td style="text-align:left;">Stop all tween motions by their number tags. <br>This method will remove all registered tweens by the designated tag at the root level. Users may use the method parameter <code>target?: object</code> to check if the tween is attached with the tag.</td></tr><tr><td style="text-align:left;"><strong>stopAllByTarget</strong></td><td style="text-align:left;">Stop all tween motions by their targets</td></tr></tbody></table><h2 id="utility-function" tabindex="-1">Utility Function <a class="header-anchor" href="#utility-function" aria-label="Permalink to &quot;Utility Function&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Interface</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>tween&lt;T&gt;</strong></td><td style="text-align:left;">Utility function to help instantiate the <code>Tween</code> class. <br> <strong>Note</strong>: This function is not a member of the <code>Tween</code> class. Users may call <code>new Tween&lt;T&gt;(target:T)</code> to instantiate a new tween instance.</td></tr></tbody></table><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><p>The following is an example of using <code>to</code> method to create tween motions:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tweenDuration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;                                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Duration of the tween</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tween</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.position).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( tweenDuration, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Here takes the target of the node&#39;s position</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {                                                               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Interface implementation of &#39;ITweenOption&#39;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ratio</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{                       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// onUpdate accepts the current tween progress</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> target;                                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Assign the position of the node to the result calculated by the tween system</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();                                                         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Start the tween by calling &#39;start&#39; function</span></span></code></pre></div><p>For more examples, please see <a href="./tween-example">Tween Example</a>.</p><h2 id="caveats" tabindex="-1">Caveats <a class="header-anchor" href="#caveats" aria-label="Permalink to &quot;Caveats&quot;">​</a></h2><p>To avoid frequent updates to the transform data of nodes, <code>Node</code> class is constructed with an internal <code>dirty</code> state which only permits updating when modifications to the node’s transform data is called.</p><p>Due to pre-existing limitations, such as the position data returned by <code>this.node.position</code> being a public vector, certain coding conventions may not behave as expected.</p><p>For instance, when attempting to execute <code>this.node.position.x = 1</code>, the code only calls the <code>getter</code> for the position data and not the <code>setter</code> for the <code>dirty</code> state data to be updated, thus no transform data of the node will remain unchanged.</p><p>We advise against coding in such a manner and encourage users to call the <code>setter</code> for the position data via method <code>setPosition</code> instead, such as:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _pos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _pos;      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Use the setter of &#39;Transform.position&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_pos);    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Or use the &#39;setPosition&#39; function</span></span></code></pre></div>`,20),l=[n];function h(r,o,d,p,k,g){return s(),e("div",null,l)}const E=t(a,[["render",h]]);export{y as __pageData,E as default};
