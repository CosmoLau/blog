import{_ as a,c as e,o as t,a4 as o}from"./chunks/framework.uQk9_EO2.js";const u=JSON.parse('{"title":"程序式动画（实验性）","description":"","frontmatter":{},"headers":[],"relativePath":"zh/animation/marionette/procedural-animation/index.md","filePath":"zh/animation/marionette/procedural-animation/index.md","lastUpdated":1712305443000}'),i={name:"zh/animation/marionette/procedural-animation/index.md"},r=o('<h1 id="程序式动画-实验性" tabindex="-1">程序式动画（实验性） <a class="header-anchor" href="#程序式动画-实验性" aria-label="Permalink to &quot;程序式动画（实验性）&quot;">​</a></h1><blockquote><p><strong>注意</strong>：程序式动画是实验性功能，请谨慎使用。Cocos Creator 期待你的反馈。</p></blockquote><p>Cocos Creator 3.8 开始实验性地支持程序式动画效果，使得开发者有能力实现一些复杂的骨骼动画。</p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><ul><li><p>在 <a href="./introduce">程序式动画简介</a> 中，介绍了关于程序式动画的起因和基础。</p></li><li><p>程序式动画目前作为 Cocos Creator 实验性功能，默认关闭，<a href="./enabling">启用程序式动画功能</a> 中讲述了如何对其进行开启。</p></li><li><p><a href="./pose-graph/">姿态图</a> 中介绍了程序式动画的核心构件——姿态图。</p></li><li><p><a href="./../additive-animation/">加性动画</a> 是一种复用动画资产的手段。</p></li><li><p>除姿态图外，<a href="./auxiliary-curve/">辅助曲线</a> 也是实现程序式动画的有效手段。</p></li><li><p><a href="./pose-stash/">姿态暂存</a> 用于实现姿态图的复用。</p></li></ul>',5),n=[r];function l(s,p,c,d,h,_){return t(),e("div",null,n)}const f=a(i,[["render",l]]);export{u as __pageData,f as default};
