import{_ as a,c as e,o as t,a5 as s}from"./chunks/framework.CqnjdYks.js";const r="/docs/cocos/assets/module.BZNiCRB5.png",f=JSON.parse('{"title":"2D 物理简介","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/physics-2d/physics-2d.md","filePath":"zh/manual/physics-2d/physics-2d.md"}'),i={name:"zh/manual/physics-2d/physics-2d.md"},o=s('<h1 id="_2d-物理简介" tabindex="-1">2D 物理简介 <a class="header-anchor" href="#_2d-物理简介" aria-label="Permalink to &quot;2D 物理简介&quot;">​</a></h1><p>Cocos Creator 支持内置的轻量 Builtin 物理系统和强大的 Box2D 物理系统。Builtin 物理系统只提供了碰撞检测的功能，对于物理计算较为简单的情况，我们推荐使用 Builtin 物理模块，这样可以避免加载庞大的 Box2D 物理模块并构建物理世界的运行时开销。而 Box2D 物理模块提供了更完善的交互接口和刚体、关节等已经预设好的组件。</p><p>你可以根据需要来选择适合自己的物理模块，通过编辑器主菜单中的 <strong>项目 -&gt; 项目设置 -&gt; 功能裁剪</strong> 切换物理模块的使用。</p><p><img src="'+r+'" alt="feature cropping"></p><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><p>本章主要包含以下内容：</p><ul><li><a href="./physics-2d-system.html">2D 物理系统</a></li><li><a href="./physics-2d-rigid-body.html">2D 刚体组件</a></li><li><a href="./physics-2d-collider.html">2D 碰撞组件</a></li><li><a href="./physics-2d-contact-callback.html">2D 碰撞回调</a></li><li><a href="./physics-2d-joint.html">2D 物理关节</a></li></ul><h2 id="_2d-物理示例" tabindex="-1">2D 物理示例 <a class="header-anchor" href="#_2d-物理示例" aria-label="Permalink to &quot;2D 物理示例&quot;">​</a></h2><p>请参考范例 <strong>physics-samples</strong>（<a href="https://github.com/cocos-creator/physics-samples/tree/v3.x/2d" target="_blank" rel="noreferrer">GitHub</a> | <a href="https://gitee.com/mirrors_cocos-creator/physics-samples/tree/v3.x/2d" target="_blank" rel="noreferrer">Gitee</a>）。</p>',9),c=[o];function l(h,n,d,p,_,m){return t(),e("div",null,c)}const y=a(i,[["render",l]]);export{f as __pageData,y as default};
