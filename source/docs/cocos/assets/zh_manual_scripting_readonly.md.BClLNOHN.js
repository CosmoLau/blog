import{_ as s,c as i,o as a,a5 as t}from"./chunks/framework.CqnjdYks.js";const y=JSON.parse('{"title":"开发注意事项","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/scripting/readonly.md","filePath":"zh/manual/scripting/readonly.md"}'),e={name:"zh/manual/scripting/readonly.md"},n=t(`<h1 id="开发注意事项" tabindex="-1">开发注意事项 <a class="header-anchor" href="#开发注意事项" aria-label="Permalink to &quot;开发注意事项&quot;">​</a></h1><h2 id="readonly" tabindex="-1">ReadOnly <a class="header-anchor" href="#readonly" aria-label="Permalink to &quot;ReadOnly&quot;">​</a></h2><p>由于 <code>Readonly</code> 是只读属性，不建议对其进行写操作。因此直接通过 <code>Readonly</code> 属性调用接口修改值的方式，不保证在各平台都会生效。</p><p>例如，节点的世界坐标系内的位置，是 <code>Readonly</code> 的：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@en</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Position in world coordinate system</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@zh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 世界坐标系下的坐标</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">get </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">worldPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): Readonly</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">math.Vec3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">worldPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val: Readonly</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">math.Vec3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>在原生平台，此处 <code>add</code> 的结果不保存到 <code>worldPosition</code> 上：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.worldPosition.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(xxx); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 结果不会被保存！</span></span></code></pre></div><p>为避免这种情况，可通过中间变量来传递，代码示例如下：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.worldPosition.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(diff.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">multiplyScalar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.speedFactor));</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setWorldPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ret);</span></span></code></pre></div><p>常见属性包括但不限于以下所列的属性：<code>position</code>、<code>rotation</code>、<code>scale</code>、<code>worldPosition</code>、<code>worldRotation</code>、<code>worldScale</code>、<code>eulerAngles</code> 以及 <code>worldMatrix</code>，都建议采用上述方法使用。</p>`,10),l=[n];function h(p,d,k,o,r,c){return a(),i("div",null,l)}const g=s(e,[["render",h]]);export{y as __pageData,g as default};
