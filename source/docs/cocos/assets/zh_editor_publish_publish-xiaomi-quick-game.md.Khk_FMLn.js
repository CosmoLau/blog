import{_ as t,c as s,o as e,a4 as a}from"./chunks/framework.uQk9_EO2.js";const i="/docs/cocos/assets/build.DKCQA-Gn.jpg",l="/docs/cocos/assets/build-option.CX_wCtCH.png",n="/docs/cocos/assets/package.Cfd96ZJ5.png",r="/docs/cocos/assets/run.BRj56uo9.png",o="/docs/cocos/assets/play.CP-lr569.png",p="/docs/cocos/assets/play2.A-xtB-Ob.png",C=JSON.parse('{"title":"发布到小米快游戏","description":"","frontmatter":{},"headers":[],"relativePath":"zh/editor/publish/publish-xiaomi-quick-game.md","filePath":"zh/editor/publish/publish-xiaomi-quick-game.md","lastUpdated":1712305443000}'),d={name:"zh/editor/publish/publish-xiaomi-quick-game.md"},g=a(`<h1 id="发布到小米快游戏" tabindex="-1">发布到小米快游戏 <a class="header-anchor" href="#发布到小米快游戏" aria-label="Permalink to &quot;发布到小米快游戏&quot;">​</a></h1><h2 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to &quot;环境配置&quot;">​</a></h2><ul><li><p>桌面端全局安装 <a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noreferrer">Node.js</a> 8.1.4 或以上版本。</p></li><li><p>确保 Node.js 所带的 npm 版本最低是 <strong>5.2.0</strong>。升级 npm 命令如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看 npm 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 若 npm 版本在 5.2.0 以下，可使用以下升级命令升级 npm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm@latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre></div></li><li><p>下载 <a href="https://forum.cocos.org/t/topic/81887" target="_blank" rel="noreferrer">小米快游戏调试器和小米快游戏运行环境</a>，并安装到小米手机上（MIUI 8.5.0 或以上版本）。</p></li></ul><h2 id="发布流程" tabindex="-1">发布流程 <a class="header-anchor" href="#发布流程" aria-label="Permalink to &quot;发布流程&quot;">​</a></h2><p>使用 Cocos Creator 打开需要发布的项目工程，从 <strong>菜单栏 -&gt; 项目</strong> 中打开 <strong>构建发布</strong> 面板，<strong>发布平台</strong> 选择 <strong>小米快游戏</strong>。</p><p><img src="`+i+'" alt="build"></p><p>通用构建选项的设置请参考 <a href="./build-options">通用构建选项</a>，小米快游戏特有的构建选项如下：</p><p><img src="'+l+`" alt="build option"></p><table><thead><tr><th style="text-align:left;">构建选项</th><th style="text-align:left;">可选</th><th style="text-align:left;">说明</th><th style="text-align:left;">字段名（用于命令行发布）</th></tr></thead><tbody><tr><td style="text-align:left;">初始场景分包</td><td style="text-align:left;">可选项</td><td style="text-align:left;">勾选后，首场景及其相关的依赖资源会被构建到发布包目录 <code>assets</code> 下的内置 Asset Bundle — <a href="./../../asset/bundle#内置-asset-bundle">start-scene</a> 中，提高初始场景的资源加载速度。</td><td style="text-align:left;"><code>startSceneAssetBundle</code></td></tr><tr><td style="text-align:left;">资源服务器地址</td><td style="text-align:left;">可选项</td><td style="text-align:left;">该项用于填写资源存放在服务器上的地址。<br>若 <strong>不填写</strong> 该项，则发布包目录下的 <code>remote</code> 文件夹会被打包到构建出来的 rpk 包中。<br>若 <strong>填写</strong> 该项，则不会打包到 rpk 包中，开发者需要在构建后手动将发布包目录下的 <code>remote</code> 文件夹上传到所填写的资源服务器地址上。详情请参考 <a href="./../../asset/cache-manager">上传资源到远程服务器</a>。</td><td style="text-align:left;"><code>remoteServerAddress</code></td></tr><tr><td style="text-align:left;">应用包名</td><td style="text-align:left;">必填项</td><td style="text-align:left;">根据开发者的需求进行填写，例如 <code>com.example.demo</code>。</td><td style="text-align:left;"><code>package</code></td></tr><tr><td style="text-align:left;">桌面图标</td><td style="text-align:left;">必填项</td><td style="text-align:left;">点击输入框后面的放大镜图标按钮选择所需的图标。构建时，图标将会被构建到 vivo 快游戏的工程中。桌面图标建议使用 <strong>png</strong> 图片。</td><td style="text-align:left;"><code>icon</code></td></tr><tr><td style="text-align:left;">应用版本名称</td><td style="text-align:left;">必填项</td><td style="text-align:left;">应用版本名称是真实的版本，如：1.0.0</td><td style="text-align:left;"><code>versionName</code></td></tr><tr><td style="text-align:left;">应用版本号</td><td style="text-align:left;">必填项</td><td style="text-align:left;"><strong>应用版本号</strong> 与 <strong>应用版本名称</strong> 不同，<strong>应用版本号</strong> 主要用于区别版本更新。每次提交审核时应用版本号都要比上次提交审核的值至少 +1，一定不能等于或者小于上次提交审核的值，建议每次提交审核时应用版本号递归 +1。<br><strong>注意</strong>：<strong>应用版本号</strong> 必须为正整数。</td><td style="text-align:left;"><code>versionCode</code></td></tr><tr><td style="text-align:left;">支持的最小平台版本号</td><td style="text-align:left;">必填项</td><td style="text-align:left;">该项用于兼容性检查，避免上线后在低版本平台运行导致不兼容。根据小米快游戏的要求目前这个值必须大于或等于 1050。</td><td style="text-align:left;"><code>minPlatformVersion</code></td></tr><tr><td style="text-align:left;">屏幕方向</td><td style="text-align:left;">可选项</td><td style="text-align:left;">设备方向，可选值包括 <code>landscape</code> 和 <code>portrait</code>。构建时会写入到发布包目录下的 <code>manifest.json</code> 中。</td><td style="text-align:left;"><code>deviceOrientation</code></td></tr><tr><td style="text-align:left;">构建后立即生成 rpk</td><td style="text-align:left;">可选项</td><td style="text-align:left;">在构建完成后自动生成 rpk，无需手动点击 <strong>生成</strong> 按钮</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">密钥库</td><td style="text-align:left;">可选项</td><td style="text-align:left;">若勾选该项，表示构建 rpk 包时默认使用的是 Creator 自带的证书，仅用于 <strong>调试</strong> 时使用。若 rpk 包要用于提交审核，则构建时不要勾选该项。<br> 若不勾选该项，则需要手动配置签名证书。</td><td style="text-align:left;"><code>useDebugKey</code></td></tr><tr><td style="text-align:left;">certificate.pem 路径<br>private.pem 路径</td><td style="text-align:left;">可选项</td><td style="text-align:left;">如果不勾选 <strong>密钥库</strong>，则需要配置签名文件 <strong>certificate.pem 路径</strong> 和 <strong>private.pem 路径</strong>，此时构建后生成的是可以 <strong>直接发布</strong> 的 rpk 包。开发者可通过输入框右边的放大镜图标按钮来配置两个签名文件，或者也可以参考下方的 <strong>生成签名文件</strong>。</td><td style="text-align:left;"><code>privatePemPath</code>、<code>certificatePemPath</code></td></tr></tbody></table><ul><li><p><strong>生成签名文件</strong></p><p>有以下两种方式可以生成签名文件：</p><ul><li><p>通过 <strong>构建发布</strong> 面板 <strong>certificate.pem 路径</strong> 后的 <strong>新建</strong> 按钮生成</p></li><li><p>通过命令行生成 release 签名</p><p>用户需要通过 openssl 命令等工具生成签名文件 private.pem、certificate.pem。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过 openssl 命令工具生成签名文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -newkey</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa:2048</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nodes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -keyout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> private.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3650</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certificate.pem</span></span></code></pre></div><blockquote><p><strong>注意</strong>：openssl 工具在 linux 或 Mac 环境下可在终端直接打开。而在 Windows 环境下则需要安装 openssl 工具并且配置系统环境变量，配置完成后需重启 Creator。</p></blockquote></li></ul></li></ul><h3 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h3><p><strong>构建发布</strong> 面板的构建选项设置完成后，点击 <strong>构建</strong> 按钮。<br> 完成后点击 <strong>构建任务</strong> 左下角的文件夹图标按钮打开项目发布包，可以看到在默认发布路径 <code>build</code> 目录下生成了 <code>xiaomi-quick-game</code>（以具体的构建任务名为准）文件夹，该文件夹就是导出的小米快游戏工程目录和 rpk 包。</p><ul><li>若构建时勾选了 <strong>构建后立即生成 rpk</strong> 选项，则 rpk 包会生成在 <code>build/xiaomi-quick-game/dist</code> 目录下。</li><li>若构建时没有勾选 <strong>构建后立即生成 rpk</strong> 选项，那么在构建完成后需要点击 <strong>构建任务</strong> 右下角的 <strong>生成 rpk</strong> 按钮，来生成 rpk 包。</li></ul><p><img src="`+n+'" alt="package"></p><h3 id="启动游戏" tabindex="-1">启动游戏 <a class="header-anchor" href="#启动游戏" aria-label="Permalink to &quot;启动游戏&quot;">​</a></h3><p>启动游戏，有以下两种方式：</p><ul><li><p><strong>方法一</strong>：</p><ul><li><p>点击 <strong>构建任务</strong> 右下角的 <strong>运行</strong> 按钮，等待二维码界面生成。</p><p><img src="'+r+'" alt="run"></p></li><li><p>然后在小米手机上打开之前已经安装完成的 <strong>快应用调试器</strong>，点击 <strong>扫码安装</strong> 按钮，直接扫描二维码即可打开 rpk。</p><p><img src="'+o+'" alt="play"></p></li></ul></li><li><p><strong>方法二</strong>：</p><ul><li><p>首先在小米手机上打开 <strong>设置-&gt; 更多设置-&gt; 开发者选项</strong>，开启开发者选项以及 USB 调试。</p></li><li><p>使用 USB 数据线将桌面端电脑与手机相连。</p></li><li><p>将构建生成的快游戏 rpk 文件（位于发布包 <code>build/xiaomi-quick-game/dist</code> 目录下）拷贝到小米手机的内部存储目录中。</p></li><li><p>在小米手机上打开之前已经安装完成的 <strong>快应用调试器</strong>，点击 <strong>本地安装</strong>，然后从手机内部存储目录中找到 rpk 文件，选择打开即可。</p><p><img src="'+p+`" alt="play"></p></li></ul></li></ul><h2 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h2><p>调试必须基于真机进行调试，并且必须严格按照先运行游戏再启动调试功能的先后顺序。<br> 启动游戏后，让小米手机处于打开游戏运行的界面。然后使用 USB 数据线将桌面端电脑与小米手机相连，并且小米手机需要开启开发者选项以及 USB 调试。</p><p>目前可以通过命令行来启动调试：</p><ul><li><p>指定到编辑器安装目录 <code>resources\\tools\\xiaomi-pack-tools</code> 目录下，执行命令：<code>npm run debug</code>，就会在 Chrome 浏览器中 <strong>自动</strong> 启动调试界面。</p></li><li><p>如果想要 <strong>手动</strong> 打开调试界面，那么执行命令：<code>npm run debug -- --print-only</code>，然后将运行后生成的 URL 地址拷贝到 Chrome 浏览器中打开即可启动调试界⾯。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定到编辑器安装目录下的 resources/tools/xiaomi-pack-tools 目录下</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${CocosCreator}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tools/xiaomi-pack-tools</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自动在 Chrome 上打开调试界面</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> debug</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 手动在 Chrome 上打开调试页面</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> debug</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --print-only</span></span></code></pre></div></li></ul><h2 id="分包-rpk" tabindex="-1">分包 rpk <a class="header-anchor" href="#分包-rpk" aria-label="Permalink to &quot;分包 rpk&quot;">​</a></h2><p>分包加载，即把游戏内容按一定规则拆分在几个包里，在首次启动的时候只下载必要的包，这个必要的包称为 <strong>主包</strong>，开发者可以在主包内触发下载其他子包，这样可以有效降低首次启动的消耗时间。</p><p>若要使用该功能需要在 Creator 编辑器中配置 <a href="./subpackage">小游戏分包</a>，设置完成后在构建时就会自动分包。</p><p>分包或者主包的包体大小限制，具体可参考 <a href="https://forum.cocos.org/t/topic/81887" target="_blank" rel="noreferrer">小米快游戏分包规则</a>。</p><h2 id="小米快游戏环境的资源管理" tabindex="-1">小米快游戏环境的资源管理 <a class="header-anchor" href="#小米快游戏环境的资源管理" aria-label="Permalink to &quot;小米快游戏环境的资源管理&quot;">​</a></h2><p>小米快游戏与微信小游戏类似，都存在着包体限制。小米的主包包体限制是 5MB，超过的部分必须通过网络请求下载。<br>当包体过大时，可在 <strong>构建发布</strong> 面板配置 <strong>资源服务器地址</strong> 选项，将资源上传到远程服务器，详情请参考 <a href="./../../asset/cache-manager">上传资源到远程服务器</a>。</p><p>Cocos Creator 已经帮开发者做好了远程资源的下载、缓存和版本管理，具体的实现逻辑请参考 <a href="./../../asset/cache-manager#资源下载流程">资源管理</a>。</p><h2 id="相关参考链接" tabindex="-1">相关参考链接 <a class="header-anchor" href="#相关参考链接" aria-label="Permalink to &quot;相关参考链接&quot;">​</a></h2><ul><li><a href="https://forum.cocos.org/t/topic/81887" target="_blank" rel="noreferrer">小米快游戏相关参考链接</a></li></ul>`,30),h=[g];function c(k,u,y,m,f,b){return e(),s("div",null,h)}const F=t(d,[["render",c]]);export{C as __pageData,F as default};
