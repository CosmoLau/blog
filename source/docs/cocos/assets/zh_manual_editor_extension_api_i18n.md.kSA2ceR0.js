import{_ as t,c as s,o as i,a5 as a}from"./chunks/framework.CqnjdYks.js";const y=JSON.parse('{"title":"I18n","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/editor/extension/api/i18n.md","filePath":"zh/manual/editor/extension/api/i18n.md"}'),e={name:"zh/manual/editor/extension/api/i18n.md"},n=a(`<h1 id="i18n" tabindex="-1">I18n <a class="header-anchor" href="#i18n" aria-label="Permalink to &quot;I18n&quot;">​</a></h1><p>本地化翻译，通过在扩展中注册对应的数据，可以使用 i18n 进行翻译</p><h2 id="接口说明" tabindex="-1">接口说明 <a class="header-anchor" href="#接口说明" aria-label="Permalink to &quot;接口说明&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> I18nMap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> I18nMap</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h2><h3 id="getlanguage" tabindex="-1">getLanguage <a class="header-anchor" href="#getlanguage" aria-label="Permalink to &quot;getLanguage&quot;">​</a></h3><p>▸ <strong>getLanguage</strong>(): <code>any</code></p><p>获取当前的语言</p><p><strong>返回结果</strong></p><table><thead><tr><th style="text-align:left;">value</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>zh</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">中文</td></tr><tr><td style="text-align:left;"><code>en</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">English</td></tr></tbody></table><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> langeage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Editor.I18n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLanguage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;zh&quot;</span></span></code></pre></div><h3 id="select" tabindex="-1">select <a class="header-anchor" href="#select" aria-label="Permalink to &quot;select&quot;">​</a></h3><p>▸ <strong>select</strong>(language: <code>string</code>): <code>any</code></p><p>选择一种翻译语言</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>language</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">选择当前使用的语言</td></tr></tbody></table><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Editor.I18n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;zh&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="t" tabindex="-1">t <a class="header-anchor" href="#t" aria-label="Permalink to &quot;t&quot;">​</a></h3><p>▸ <strong>t</strong>(key: <code>string</code>, obj?: <code>{[key: string]: string}</code>): <code>any</code></p><p>传入 key，翻译成当前语言 允许翻译变量 {a}，传入的第二个参数 obj 内定义 a</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">用于翻译的 key 值</td></tr><tr><td style="text-align:left;"><code>obj?</code></td><td style="text-align:left;"><code>Object</code></td><td style="text-align:left;">翻译字段内如果有 {key} 等可以在这里传入替换字段</td></tr></tbody></table><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* zh.js 文件定义的翻译映射数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* showUuid: &#39;复制并打印 UUID&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* cancelSearchType: &#39;取消搜索类型 {type}，默认 搜索名称或 UUID&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Editor.I18n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hierarchy.menu.showUuid&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;复制并打印 UUID&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Editor.I18n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hierarchy.menu.cancelSearchType&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;UUID&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;取消搜索类型 UUID，默认 搜索名称或 UUID&#39;</span></span></code></pre></div>`,23),l=[n];function h(p,d,r,k,o,g){return i(),s("div",null,l)}const E=t(e,[["render",h]]);export{y as __pageData,E as default};
