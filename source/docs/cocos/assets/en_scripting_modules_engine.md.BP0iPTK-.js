import{_ as t,c as e,o as l,a4 as i}from"./chunks/framework.uQk9_EO2.js";const y=JSON.parse('{"title":"Engine Modules","description":"","frontmatter":{},"headers":[],"relativePath":"en/scripting/modules/engine.md","filePath":"en/scripting/modules/engine.md","lastUpdated":1712305443000}'),a={name:"en/scripting/modules/engine.md"},s=i(`<h1 id="engine-modules" tabindex="-1">Engine Modules <a class="header-anchor" href="#engine-modules" aria-label="Permalink to &quot;Engine Modules&quot;">​</a></h1><p>The engine expose functional interfaces to developers via modules, which exist as <strong>ECMAScript</strong> modules.</p><blockquote><p><strong>Note</strong>: from v3.0, it is strongly recommended not to use the global variable <code>cc</code> to access engine modules or classes.</p></blockquote><h2 id="function" tabindex="-1">Function <a class="header-anchor" href="#function" aria-label="Permalink to &quot;Function&quot;">​</a></h2><p>The module <code>&#39;cc&#39;</code> provides access to all engine functions. The contents of module <code>&#39;cc&#39;</code> are dynamic and are related to the <strong>Feature Cropping</strong> setting in <strong>Project Setting</strong>.</p><h3 id="engine-log-output" tabindex="-1">Engine Log Output <a class="header-anchor" href="#engine-log-output" aria-label="Permalink to &quot;Engine Log Output&quot;">​</a></h3><p>Example:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { log } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello world!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="build-time-constants" tabindex="-1">Build-Time Constants <a class="header-anchor" href="#build-time-constants" aria-label="Permalink to &quot;Build-Time Constants&quot;">​</a></h2><p>The engine module <code>&#39;cc/env&#39;</code> exposes a number of build-time <strong>constants</strong> that represent the execution environment, debug level, or platform identifier, etc.</p><p>As these constants are declared with <code>const</code>, they provide good opportunities for code optimization.</p><h3 id="execution-environment" tabindex="-1">Execution Environment <a class="header-anchor" href="#execution-environment" aria-label="Permalink to &quot;Execution Environment&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name (all of type <code>boolean</code>)</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>BUILD</code></td><td style="text-align:left;">Whether it is running in the post-build environment</td></tr><tr><td style="text-align:left;"><code>PREVIEW</code></td><td style="text-align:left;">Whether it is running in the preview environment</td></tr><tr><td style="text-align:left;"><code>EDITOR</code></td><td style="text-align:left;">Whether it running in the editor environment</td></tr></tbody></table><h3 id="debug-level" tabindex="-1">Debug Level <a class="header-anchor" href="#debug-level" aria-label="Permalink to &quot;Debug Level&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Name (all of type <code>boolean</code>)</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>DEBUG</code></td><td style="text-align:left;">Whether it is in debug mode. Only <code>false</code> if the debug option is unchecked at build time, but <code>true</code> in all other cases.</td></tr><tr><td style="text-align:left;"><code>DEV</code></td><td style="text-align:left;">Equivalent to <code>DEBUG</code>/<code>EDITOR</code>/<code>PREVIEW</code></td></tr></tbody></table><h3 id="platform-identifier" tabindex="-1">Platform Identifier <a class="header-anchor" href="#platform-identifier" aria-label="Permalink to &quot;Platform Identifier&quot;">​</a></h3><p>The constants in the following table indicate whether the application is running on <strong>a particular</strong> or <strong>a class of</strong> platforms, and are all of type <code>boolean</code>.</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Platform</th><th style="text-align:left;"><code>MINIGAME</code></th><th style="text-align:left;"><code>RUNTIME_BASED</code></th><th style="text-align:left;"><code>SUPPORT_JIT</code></th></tr></thead><tbody><tr><td style="text-align:left;"><code>HTML5</code></td><td style="text-align:left;">Web</td><td style="text-align:left;">❌</td><td style="text-align:left;">❌</td><td style="text-align:left;">❌</td></tr><tr><td style="text-align:left;"><code>NATIVE</code></td><td style="text-align:left;">Native Platforms</td><td style="text-align:left;">❌</td><td style="text-align:left;">❌</td><td style="text-align:left;">❌</td></tr><tr><td style="text-align:left;"><code>ALIPAY</code></td><td style="text-align:left;">Alipay Mini Game</td><td style="text-align:left;">✔️</td><td style="text-align:left;">❌</td><td style="text-align:left;">✔️</td></tr><tr><td style="text-align:left;"><code>BAIDU</code></td><td style="text-align:left;">Baidu Mini Game</td><td style="text-align:left;">✔️</td><td style="text-align:left;">❌</td><td style="text-align:left;">✔️</td></tr><tr><td style="text-align:left;"><code>BYTEDANCE</code></td><td style="text-align:left;">Douyin Mini Game</td><td style="text-align:left;">✔️</td><td style="text-align:left;">❌</td><td style="text-align:left;">✔️</td></tr><tr><td style="text-align:left;"><code>WECHAT</code></td><td style="text-align:left;">WeChat Mini Gamee</td><td style="text-align:left;">✔️</td><td style="text-align:left;">❌</td><td style="text-align:left;">✔️</td></tr><tr><td style="text-align:left;"><code>XIAOMI</code></td><td style="text-align:left;">Xiaomi Quick Game</td><td style="text-align:left;">✔️</td><td style="text-align:left;">❌</td><td style="text-align:left;">✔️</td></tr><tr><td style="text-align:left;"><code>COCOSPLAY</code></td><td style="text-align:left;">Cocos Play</td><td style="text-align:left;">❌</td><td style="text-align:left;">✔️</td><td style="text-align:left;">✔️</td></tr><tr><td style="text-align:left;"><code>HUAWEI</code></td><td style="text-align:left;">Huawei Quick Game</td><td style="text-align:left;">❌</td><td style="text-align:left;">✔️</td><td style="text-align:left;">✔️</td></tr><tr><td style="text-align:left;"><code>OPPO</code></td><td style="text-align:left;">OPPO Mini Game</td><td style="text-align:left;">❌</td><td style="text-align:left;">✔️</td><td style="text-align:left;">✔️</td></tr><tr><td style="text-align:left;"><code>VIVO</code></td><td style="text-align:left;">vivo Mini Game</td><td style="text-align:left;">❌</td><td style="text-align:left;">✔️</td><td style="text-align:left;">✔️</td></tr></tbody></table><h3 id="output-in-debug-mode" tabindex="-1">Output in Debug Mode <a class="header-anchor" href="#output-in-debug-mode" aria-label="Permalink to &quot;Output in Debug Mode&quot;">​</a></h3><p>Examples are as follows:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { log } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { DEV } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cc/env&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DEV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;I am in development mode!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,21),n=[s];function d(o,r,h,c,g,p){return l(),e("div",null,n)}const u=t(a,[["render",d]]);export{y as __pageData,u as default};
