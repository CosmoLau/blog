import{_ as e,v as t,b as o,R as d}from"./chunks/framework.5ffcbaff.js";const _=JSON.parse('{"title":"Cocos Creator 图像位置解析算法","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/asset/model/image-location-resolution.md","filePath":"zh/manual/asset/model/image-location-resolution.md"}'),c={name:"zh/manual/asset/model/image-location-resolution.md"},l=d('<h1 id="cocos-creator-图像位置解析算法" tabindex="-1">Cocos Creator 图像位置解析算法 <a class="header-anchor" href="#cocos-creator-图像位置解析算法" aria-label="Permalink to &quot;Cocos Creator 图像位置解析算法&quot;">​</a></h1><p>Cocos Creator 图像位置解析算法中给定的参数及参数说明如下：</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;">期望的 URL</td></tr><tr><td style="text-align:left;"><code>startDir</code></td><td style="text-align:left;">起始搜索目录</td></tr><tr><td style="text-align:left;"><code>DEPTH</code></td><td style="text-align:left;">搜索深度，固定为 <strong>2</strong></td></tr><tr><td style="text-align:left;"><code>SEARCH_DIR_NAMES</code></td><td style="text-align:left;">贴图文件夹名称数组，默认为：<code>textures</code>、<code>materials</code></td></tr><tr><td style="text-align:left;"><code>SEARCH_EXT_NAMES</code></td><td style="text-align:left;">需要搜索的扩展名数组，固定为：<code>.jpg</code>、<code>.jpeg</code>、<code>.png</code>、<code>.tga</code>、<code>.webp</code></td></tr></tbody></table><p>Cocos Creator 图像位置解析算法由以下过程给出：</p><ul><li><p>如果 <code>url</code> 对应的文件存在，则返回 <code>url</code></p></li><li><p>令 <code>expectedExtName</code> 为 <code>url</code> 的扩展名</p></li><li><p>令 <code>expectedBaseName</code> 为 <code>url</code> 去扩展后的文件名</p></li><li><p>令 <code>searchExtNames</code> 为 <code>[expectedExtName, ...SEARCH_EXT_NAMES]</code> 去重之后的数组</p></li><li><p>令 <code>currentDir</code> 为 <code>startDir</code>，进行 <code>DEPTH</code> 次循环：</p><ul><li><p>如果 <code>currentDir</code> 处于项目 <code>assets</code> 目录外，则退出循环</p></li><li><p>如果 <code>currentDir</code> 目录中没有任何一个子目录的名称匹配 <code>SEARCH_DIR_NAMES</code>，则执行下次循环</p></li><li><p>令 <code>dir</code> 为 <code>currentDir</code> 目录中名称匹配 <code>SEARCH_DIR_NAMES</code> 的子目录</p></li><li><p>在 <code>dir</code> 中搜索是否有文件基础名称匹配 <code>expectedBaseName</code> 且扩展名匹配 <code>searchExtNames</code>的，如果有，则返回其路径</p></li><li><p>将 <code>currentDir</code> 置为其上层目录</p></li></ul></li><li><p>返回搜索失败</p></li></ul>',5),a=[l];function r(i,s,n,p,u,m){return t(),o("div",null,a)}const g=e(c,[["render",r]]);export{_ as __pageData,g as default};
