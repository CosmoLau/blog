import{_ as a,c as t,o as e,a5 as o}from"./chunks/framework.CqnjdYks.js";const i="/docs/cocos/assets/main.B3eze_sp.gif",u=JSON.parse('{"title":"动画系统","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/animation/index.md","filePath":"zh/manual/animation/index.md"}'),n={name:"zh/manual/animation/index.md"},r=o('<h1 id="动画系统" tabindex="-1">动画系统 <a class="header-anchor" href="#动画系统" aria-label="Permalink to &quot;动画系统&quot;">​</a></h1><p>Cocos Creator 内置了通用的动画系统用以实现基于关键帧的动画。除了支持标准的位移、旋转、缩放动画和帧动画之外，还支持任意组件属性和用户自定义属性的驱动，再加上可任意编辑的时间曲线和创新的移动轨迹编辑功能，能够让内容生产人员不写一行代码就制作出细腻的各种动态效果。</p><p><img src="'+i+'" alt="animation cover"></p><blockquote><p><strong>注意</strong>：Cocos Creator 自带的动画编辑器适用于制作一些不太复杂的、需要与逻辑进行联动的动画，例如 UI 动画。如果要制作复杂的特效、角色动画、嵌套动画等，可以考虑改用 Spine、DragonBones 或者 3D 模型骨骼动画编辑器进行制作。</p></blockquote><h2 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h2><ul><li><p><a href="./animation-clip.html">动画剪辑</a>（Animation Clip）：包含了动画数据的资源，可复用。动画剪辑可以通过 <strong>动画编辑器</strong> 产出，或者通过某些已经包含了骨骼动画的外部资源导入。</p></li><li><p><a href="./animation-comp.html">动画组件参考</a>：动画组件可以以动画方式驱动所在节点和子节点上的节点/组件属性，包括用户自定义脚本中的属性。</p></li><li><p><a href="./animation.html">使用动画编辑器</a>：了解动画编辑器的使用，通过动画编辑器创建/修改/生成动画剪辑资源。</p></li><li><p><a href="./skeletal-animation.html">骨骼动画</a>：常见但类型特殊的动画，本篇主要对其进行介绍及说明用法。</p></li><li><p><a href="./animation-component.html">使用脚本控制动画</a>：动画组件管理了一组动画状态，用于控制各动画的播放、暂停、继续、停止、切换等。</p><ul><li><a href="./animation-state.html">动画状态</a>（Animation State）：动画剪辑的状态保存在称为动画状态的对象中，动画状态可以控制需要在对象上使用的动画剪辑。动画状态提供了更多动画控制接口，通过这些接口可以对动画进行播放、停止、变速、设置循环模式等更为细致的控制。</li></ul></li><li><p><a href="./embedded-player.html">嵌入播放器</a>：嵌入播放器用于在动画剪辑中嵌入其他粒子播放器或动画播放器。</p></li><li><p><a href="./marionette/">Marionette 动画系统</a>：v3.4 新增，实现了由状态机控制的自动化且可复用的骨骼动画流程。</p></li></ul><p>具体的动画实现根据不同的动画需求，操作步骤以及代码实现都不同，可参考官方范例 <strong>animation</strong>（<a href="https://github.com/cocos/cocos-test-projects/tree/v3.7/assets/cases/animation" target="_blank" rel="noreferrer">GitHub</a> | <a href="https://gitee.com/mirrors_cocos-creator/test-cases-3d/tree/v3.7/assets/cases/animation" target="_blank" rel="noreferrer">Gitee</a>），主要介绍一些常见的编辑操作方法以及代码范例，以供参考。</p>',7),s=[r];function l(c,m,p,h,_,d){return e(),t("div",null,s)}const g=a(n,[["render",l]]);export{u as __pageData,g as default};
