import{_ as t,c as e,o as l,a4 as a}from"./chunks/framework.uQk9_EO2.js";const p=JSON.parse('{"title":"Property Attributes","description":"","frontmatter":{},"headers":[],"relativePath":"en/scripting/reference/attributes.md","filePath":"en/scripting/reference/attributes.md","lastUpdated":1712336288000}'),i={name:"en/scripting/reference/attributes.md"},r=a('<h1 id="property-attributes" tabindex="-1">Property Attributes <a class="header-anchor" href="#property-attributes" aria-label="Permalink to &quot;Property Attributes&quot;">​</a></h1><p>Attributes are used to attach metadata to defined properties, similar to <code>Decorator</code> in scripting languages or <code>Attribute</code> in <code>C#</code>.</p><h2 id="related-attributes-on-inspector-panel" tabindex="-1">Related Attributes on Inspector Panel <a class="header-anchor" href="#related-attributes-on-inspector-panel" aria-label="Permalink to &quot;Related Attributes on Inspector Panel&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Attribute Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Remarks</th></tr></thead><tbody><tr><td style="text-align:left;">type</td><td style="text-align:left;">Restrict the data type of the property</td><td style="text-align:left;">(Any)</td><td style="text-align:left;">undefined</td><td style="text-align:left;">See <a href="./../decorator#type-attribute">type attribute</a></td></tr><tr><td style="text-align:left;">visible</td><td style="text-align:left;">Show or hide in the <strong>Inspector</strong> panel</td><td style="text-align:left;">boolean</td><td style="text-align:left;">[1]</td><td style="text-align:left;">See <a href="./../decorator#visible-attribute">visible attribute</a></td></tr><tr><td style="text-align:left;">displayName</td><td style="text-align:left;">Show as another name in the <strong>Inspector</strong> panel</td><td style="text-align:left;">string</td><td style="text-align:left;">undefined</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">tooltip</td><td style="text-align:left;">Add a Tooltip for a property in the <strong>Inspector</strong> panel</td><td style="text-align:left;">string</td><td style="text-align:left;">undefined</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">multiline</td><td style="text-align:left;">Use multi-line text boxes in the <strong>Inspector</strong> panel</td><td style="text-align:left;">boolean</td><td style="text-align:left;">false</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">readonly</td><td style="text-align:left;">Read-only in the <strong>Inspector</strong> panel</td><td style="text-align:left;">boolean</td><td style="text-align:left;">false</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">min</td><td style="text-align:left;">Restrict the minimum value in the <strong>Inspector</strong> panel</td><td style="text-align:left;">number</td><td style="text-align:left;">undefined</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">max</td><td style="text-align:left;">Restrict the maximum value in the <strong>Inspector</strong> panel</td><td style="text-align:left;">number</td><td style="text-align:left;">undefined</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">step</td><td style="text-align:left;">Restrict the step value in the <strong>Inspector</strong> panel</td><td style="text-align:left;">number</td><td style="text-align:left;">undefined</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">range</td><td style="text-align:left;">Set min, max, step</td><td style="text-align:left;">[min, max, step]</td><td style="text-align:left;">undefined</td><td style="text-align:left;">step value optional</td></tr><tr><td style="text-align:left;">slide</td><td style="text-align:left;">Show as a slider in the <strong>Inspector</strong> panel</td><td style="text-align:left;">boolean</td><td style="text-align:left;">false</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">group</td><td style="text-align:left;">Show as a tab group in the <strong>Inspector</strong> panel</td><td style="text-align:left;">{ name } or { id, name, displayOrder, style }</td><td style="text-align:left;">undefined</td><td style="text-align:left;">See <a href="./../decorator#group">group attribute</a></td></tr></tbody></table><h2 id="serialization-related-attributes" tabindex="-1">Serialization-Related Attributes <a class="header-anchor" href="#serialization-related-attributes" aria-label="Permalink to &quot;Serialization-Related Attributes&quot;">​</a></h2><p>The following attributes cannot be used with the <code>get</code> method.</p><table><thead><tr><th style="text-align:left;">Attribute Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Remarks</th></tr></thead><tbody><tr><td style="text-align:left;">serializable</td><td style="text-align:left;">Serialize this property</td><td style="text-align:left;">boolean</td><td style="text-align:left;">true</td><td style="text-align:left;">See <a href="./../decorator#serializable-attribute">serializable attribute</a></td></tr><tr><td style="text-align:left;">formerlySerializedAs</td><td style="text-align:left;">Specify the name of the field used in the previous serialization</td><td style="text-align:left;">string</td><td style="text-align:left;">undefined</td><td style="text-align:left;">Declare this attribute when renaming the property to be compatible with the previously serialized data</td></tr><tr><td style="text-align:left;">editorOnly</td><td style="text-align:left;">Exclude this property before exporting the project</td><td style="text-align:left;">boolean</td><td style="text-align:left;">false</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="other-attributes" tabindex="-1">Other Attributes <a class="header-anchor" href="#other-attributes" aria-label="Permalink to &quot;Other Attributes&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Attribute Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Remarks</th></tr></thead><tbody><tr><td style="text-align:left;">override</td><td style="text-align:left;">Define this parameter as true when overriding parent properties</td><td style="text-align:left;">boolean</td><td style="text-align:left;">false</td><td style="text-align:left;">See <a href="./../decorator#override-attribute">override attribute</a></td></tr></tbody></table><blockquote><p>[1]: The default value of visible depends on the property name. When the property name starts with an underscore <code>_</code>, it is hidden by default, otherwise it is shown by default.</p></blockquote>',10),n=[r];function d(s,o,f,g,y,h){return l(),e("div",null,n)}const u=t(i,[["render",d]]);export{p as __pageData,u as default};
