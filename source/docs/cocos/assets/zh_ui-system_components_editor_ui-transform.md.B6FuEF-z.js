import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.uQk9_EO2.js";const g=JSON.parse('{"title":"UI 变换组件","description":"","frontmatter":{},"headers":[],"relativePath":"zh/ui-system/components/editor/ui-transform.md","filePath":"zh/ui-system/components/editor/ui-transform.md","lastUpdated":1712305443000}'),t={name:"zh/ui-system/components/editor/ui-transform.md"},h=n(`<h1 id="ui-变换组件" tabindex="-1">UI 变换组件 <a class="header-anchor" href="#ui-变换组件" aria-label="Permalink to &quot;UI 变换组件&quot;">​</a></h1><p>定义了 UI 上的矩形信息，包括矩形的尺寸和锚点位置。开发者可以通过该组件任意地操作矩形的大小、位置。一般用于渲染、点击事件的计算、界面布局以及屏幕适配等。</p><p>点击 <strong>属性检查器</strong> 下面的 <strong>添加组件</strong> 按钮，然后选择 <strong>UI/UITransform</strong> 即可添加 UITransform 组件到节点上。</p><p>UITransform 脚本接口请参考 <a href="./__APIDOC__/zh/class/UITransform">UITransform API</a>。</p><h2 id="uitransform-属性介绍" tabindex="-1">UITransform 属性介绍 <a class="header-anchor" href="#uitransform-属性介绍" aria-label="Permalink to &quot;UITransform 属性介绍&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">功能说明</th></tr></thead><tbody><tr><td style="text-align:left;">ContentSize</td><td style="text-align:left;">UI 矩形内容尺寸</td></tr><tr><td style="text-align:left;">AnchorPoint</td><td style="text-align:left;">UI 矩形锚点位置</td></tr></tbody></table><hr><h3 id="通过脚本代码修改节点尺寸和锚点" tabindex="-1">通过脚本代码修改节点尺寸和锚点 <a class="header-anchor" href="#通过脚本代码修改节点尺寸和锚点" aria-label="Permalink to &quot;通过脚本代码修改节点尺寸和锚点&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { _decorator, Component, Node, UITransform } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ccclass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">property</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _decorator;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ccclass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Example&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Example</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> uiTransform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UITransform);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 方法一</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setContentSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAnchorPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 方法二</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.anchorX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uiTransform.anchorY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="priority-属性的弃用说明" tabindex="-1">priority 属性的弃用说明 <a class="header-anchor" href="#priority-属性的弃用说明" aria-label="Permalink to &quot;priority 属性的弃用说明&quot;">​</a></h3><p>我们在 3.1 版本中弃用了 UITransform 组件的 priority 属性，用户可以通过使用 setSiblingIndex 来设置节点树的顺序来进行调整渲染顺序。</p><p>关于 priority 属性的移除及推荐使用的 SiblingIndex 属性的说明： 由于表意不明以及与引擎中其他属性的命名冲突，UITransform 组件上的 priority 属性在 v3.1 已被废弃。priority 属性的设计之初是为用户提供节点树排序的快捷方式，本身并无其他用途，和 priority 所表达的“优先级”也不相关，并且设置之后实际上还是通过更改节点树的顺序来调整渲染顺序。</p><p>在移除了 <code>priority</code> 属性之后，用户可以用 <code>setSiblingIndex</code> 方法来替换使用，<code>setSiblingIndex</code> 方法通过影响节点中的 <code>siblingIndex</code> 属性来调整节点树的顺序。不同之处在于，<code>priority</code> 属性存在默认值，而 node 的 <code>siblingIndex</code> 属性实际上就是这个节点在父节点中的位置，所以在节点树发生变化之后，节点的 <code>siblingIndex</code> 属性数值就会产生变化。这就要求在使用 <code>setSiblingIndex</code> 方法的时候，需要知道节点在父节点中的相对位置并做出控制，才能够获得预期的结果。</p><p>需要注意的是，不能直接将 <code>siblingIndex</code> 属性等同于 <code>priority</code>（已废弃）属性来理解使用，它们的意义是不同的，改变 <code>siblingIndex</code> 属性需要理解并清楚其代表的是在父节点下的位置，且在节点树变化时会发生变化，并且只能通过 <code>setSiblingIndex</code> 方法来修改 <code>siblingIndex</code> 属性。</p><p>考虑到节点快捷排序的需求，我们会在之后的版本中提供更方便快捷的接口供用户排列节点使用。</p>`,15),e=[h];function l(p,r,k,d,o,E){return a(),i("div",null,e)}const y=s(t,[["render",l]]);export{g as __pageData,y as default};
