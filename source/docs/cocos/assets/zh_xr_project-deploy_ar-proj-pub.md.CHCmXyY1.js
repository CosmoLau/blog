import{_ as o,c as s,o as t,a4 as r}from"./chunks/framework.uQk9_EO2.js";const e="/docs/cocos/assets/select-android-platform.DW1D42uF.png",a="/docs/cocos/assets/build-android-platform.BzHwSHor.png",p="/docs/cocos/assets/select-ios-platform.B-2hTJgq.png",c="/docs/cocos/assets/build-ios-platform.CYGuoUTI.png",n="/docs/cocos/assets/open-ios-build-folder.2Z_EA6jo.png",i="/docs/cocos/assets/select-xcodeproj.DYdXMMj-.png",l="/docs/cocos/assets/compile-with-xcode.B-FwDXwn.png",d="/docs/cocos/assets/select-spaces-platform.D6VGi1Qq.png",x=JSON.parse('{"title":"AR 项目构建与发布","description":"","frontmatter":{},"headers":[],"relativePath":"zh/xr/project-deploy/ar-proj-pub.md","filePath":"zh/xr/project-deploy/ar-proj-pub.md","lastUpdated":1712336288000}'),g={name:"zh/xr/project-deploy/ar-proj-pub.md"},_=r('<h1 id="ar-项目构建与发布" tabindex="-1">AR 项目构建与发布 <a class="header-anchor" href="#ar-项目构建与发布" aria-label="Permalink to &quot;AR 项目构建与发布&quot;">​</a></h1><p>完成 AR 应用的项目设置并完成项目开发之后，即可打包 AR 应用。点击 <strong>菜单栏 -&gt; 项目 -&gt; 构建发布</strong>。</p><h2 id="arcore、arengine" tabindex="-1">ARCore、AREngine <a class="header-anchor" href="#arcore、arengine" aria-label="Permalink to &quot;ARCore、AREngine&quot;">​</a></h2><p>针对于安卓和华为平台的手机发布 AR 应用，新建构建任务，平台选择 <strong>安卓</strong>。</p><p><img src="'+e+'" alt="ar-proj-pub/select-android-platform.png"></p><p>填写应用 ID 并勾选 <strong>Enable AR</strong>，连接好移动端设备后点击 <strong>构建</strong> -&gt; <strong>生成</strong> -&gt; <strong>运行</strong> 即可一键发布 AR 应用。</p><p><img src="'+a+'" alt="ar-proj-pub/build-android-platform.png"></p><blockquote><p><strong>注意</strong>：安卓平台 AR 应用的渲染后端不支持 VULKAN。</p></blockquote><h2 id="arkit" tabindex="-1">ARKit <a class="header-anchor" href="#arkit" aria-label="Permalink to &quot;ARKit&quot;">​</a></h2><p>iOS发布需要的各项配置属性请参考 [iOS 平台构建选项](../../editor/publish/native-options.md#iOS 平台构建选项)，需要在 Xcode 中配置好开发者账户。</p><p>针对于 iOS 平台发布 AR 应用，新建构建任务，平台选择 <strong>iOS</strong>。</p><p><img src="'+p+'" alt="ar-proj-pub/select-ios-platform.png"></p><p>应用 ID 名称第二节建议使用 Xcode 配置的同名开发者账户名，目标平台选择 <strong>iPhone OS应用</strong>，勾选 <strong>Enable AR</strong>。</p><p>点击构建，生成 Xcode 工程。</p><p><img src="'+c+'" alt="ar-proj-pub/build-ios-platform.png"></p><blockquote><p><strong>注意</strong>：目前 Cocos Creator 对 iOS 应用暂时只支持构建工程，编译和运行需要转移至 Xcode 中进行。</p></blockquote><p>构建完成后，找到生成的 xcodeproj 文件，使用 Xcode 打开，配置好签名和开发者团队连接好设备点击运行即可。</p><p><img src="'+n+'" alt="ar-proj-pub/open-ios-build-folder.png"></p><p><img src="'+i+'" alt="ar-proj-pub/select-xcodeproj.png"></p><p><img src="'+l+'" alt="compile-with-xcode"></p><h2 id="spaces" tabindex="-1">Spaces <a class="header-anchor" href="#spaces" aria-label="Permalink to &quot;Spaces&quot;">​</a></h2><p>针对于高通 Spaces 平台的设备发布 AR 应用，新建构建任务，平台选择 <strong>XR Spaces</strong>。</p><p><img src="'+d+'" alt="select-spaces-platform"></p><p>填写好应用 ID，连接好 Spaces 设备（如果是分体式设备请连接移动端）后点击 <strong>构建 -&gt; 生成 -&gt;运行</strong> 即可一键发布 AR 应用。</p>',24),m=[_];function u(h,b,f,A,R,j){return t(),s("div",null,m)}const q=o(g,[["render",u]]);export{x as __pageData,q as default};
