import{_ as t,v as e,b as l,R as r}from"./chunks/framework.5ffcbaff.js";const x=JSON.parse('{"title":"glTF 模型","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/asset/model/glTF.md","filePath":"zh/manual/asset/model/glTF.md"}'),a={name:"zh/manual/asset/model/glTF.md"},o=r('<h1 id="gltf-模型" tabindex="-1">glTF 模型 <a class="header-anchor" href="#gltf-模型" aria-label="Permalink to &quot;glTF 模型&quot;">​</a></h1><p>Cocos Creator 支持 glTF 2.0 及更早的文件格式。</p><h2 id="uri-解析" tabindex="-1">URI 解析 <a class="header-anchor" href="#uri-解析" aria-label="Permalink to &quot;URI 解析&quot;">​</a></h2><p>Creator 支持 glTF 中指定以下形式的 URI：</p><ul><li><p>Data URI</p></li><li><p>相对 URI 路径</p></li><li><p>文件 URL</p></li><li><p>文件路径</p></li></ul><h2 id="转换关系" tabindex="-1">转换关系 <a class="header-anchor" href="#转换关系" aria-label="Permalink to &quot;转换关系&quot;">​</a></h2><p>当导入 glTF 模型到 Creator 时，glTF 中的资源将会按照以下关系转换为 Creator 中的资源：</p><table><thead><tr><th style="text-align:left;">glTF 资源</th><th style="text-align:left;">Cocos Creator 资源</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-scene" target="_blank" rel="noreferrer">glTF 场景</a></td><td style="text-align:left;">预制体</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-mesh" target="_blank" rel="noreferrer">glTF 网格</a></td><td style="text-align:left;">网格</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-skin" target="_blank" rel="noreferrer">glTF 蒙皮</a></td><td style="text-align:left;">骨骼</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-material" target="_blank" rel="noreferrer">glTF 材质</a></td><td style="text-align:left;">材质</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-texture" target="_blank" rel="noreferrer">glTF 贴图</a></td><td style="text-align:left;">贴图</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-image" target="_blank" rel="noreferrer">glTF 图像</a></td><td style="text-align:left;">图像</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-animation" target="_blank" rel="noreferrer">glTF 动画</a></td><td style="text-align:left;">动画剪辑</td></tr></tbody></table><h3 id="gltf-场景" tabindex="-1">glTF 场景 <a class="header-anchor" href="#gltf-场景" aria-label="Permalink to &quot;glTF 场景&quot;">​</a></h3><p>导入后，glTF 场景将转换为 Creator 中的预制体资源，glTF 场景中递归包含的节点也将按照相同层级关系一一转换为预制体中的节点。</p><h4 id="场景根节点" tabindex="-1">场景根节点 <a class="header-anchor" href="#场景根节点" aria-label="Permalink to &quot;场景根节点&quot;">​</a></h4><p>预制体将使用一个不带任何空间转换信息的节点作为根节点，glTF 场景的所有 <a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenenodes" target="_blank" rel="noreferrer">根节点</a> 将作为该节点的子节点。</p><h4 id="节点转换" tabindex="-1">节点转换 <a class="header-anchor" href="#节点转换" aria-label="Permalink to &quot;节点转换&quot;">​</a></h4><p>glTF 节点中的属性将按照下表中的映射关系转换为预制体节点中的属性：</p><table><thead><tr><th style="text-align:left;">glTF 节点属性</th><th style="text-align:left;">预制体节点属性</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodechildren" target="_blank" rel="noreferrer">层级关系</a></td><td style="text-align:left;">层级关系</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodetranslation" target="_blank" rel="noreferrer">位移</a></td><td style="text-align:left;">位置</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#noderotation" target="_blank" rel="noreferrer">旋转</a></td><td style="text-align:left;">旋转</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodescale" target="_blank" rel="noreferrer">缩放</a></td><td style="text-align:left;">缩放</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodematrix" target="_blank" rel="noreferrer">矩阵</a></td><td style="text-align:left;">解压，并分别设置位置、旋转、缩放</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodemesh" target="_blank" rel="noreferrer">网格引用</a></td><td style="text-align:left;">网格渲染器组件</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodeskin" target="_blank" rel="noreferrer">蒙皮引用</a></td><td style="text-align:left;">蒙皮网格渲染器组件</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodeweights" target="_blank" rel="noreferrer">初始权重</a></td><td style="text-align:left;">（蒙皮）网格渲染器组件权重</td></tr></tbody></table><h4 id="网格渲染器" tabindex="-1">网格渲染器 <a class="header-anchor" href="#网格渲染器" aria-label="Permalink to &quot;网格渲染器&quot;">​</a></h4><p>若 glTF 节点引用了网格，那么导入后相对应的预制体节点也会添加网格渲染组件（MeshRenderer）。若该 glTF 节点还引用了蒙皮，那么相对应的预制体节点还会添加蒙皮网格渲染组件（SkinnedMeshRenderer）。</p><p>（蒙皮）网格渲染组件中的网格、骨骼和材质，都会与转换后的 glTF 网格、蒙皮、材质资源一一对应。</p><p>若 glTF 节点指定了初始权重，则转换后的（蒙皮）网格渲染器也将带有此权重。</p><h3 id="gltf-网格" tabindex="-1">glTF 网格 <a class="header-anchor" href="#gltf-网格" aria-label="Permalink to &quot;glTF 网格&quot;">​</a></h3><p>导入后，glTF 网格将转换为 Cocos Creator 中的网格资源。</p><p>glTF 网格中的所有 <a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#meshprimitives-white_check_mark" target="_blank" rel="noreferrer">基元体</a> 将被一一转换为 Creator 中的子网格。</p><p>若 glTF 网格指定了 <a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#meshweights" target="_blank" rel="noreferrer">权重</a>，则相应地，转换后的 Creator 网格中也将存储相应的权重。</p><h4 id="gltf-基元体" tabindex="-1">glTF 基元体 <a class="header-anchor" href="#gltf-基元体" aria-label="Permalink to &quot;glTF 基元体&quot;">​</a></h4><p>glTF 基元体的索引数组将一一对应转换为 Cocos Creator 子网格的索引数组。</p><p>glTF 基元模式将按照下表中的映射关系转换为 Cocos Creator 基元模式：</p><table><thead><tr><th style="text-align:left;">glTF 基元模式</th><th style="text-align:left;">Cocos Creator 基元模式</th></tr></thead><tbody><tr><td style="text-align:left;"><code>POINTS</code></td><td style="text-align:left;"><code>gfx.PrimitiveMode.POINT_LIST</code></td></tr><tr><td style="text-align:left;"><code>LINES</code></td><td style="text-align:left;"><code>gfx.PrimitiveMode.LINE_LIST</code></td></tr><tr><td style="text-align:left;"><code>LINE_LOOP</code></td><td style="text-align:left;"><code>gfx.PrimitiveMode.LINE_LOOP</code></td></tr><tr><td style="text-align:left;"><code>LINE_STRIP</code></td><td style="text-align:left;"><code>gfx.PrimitiveMode.LINE_STRIP</code></td></tr><tr><td style="text-align:left;"><code>TRIANGLES</code></td><td style="text-align:left;"><code>gfx.PrimitiveMode.TRIANGLE_LIST</code></td></tr><tr><td style="text-align:left;"><code>TRIANGLE_STRIP</code></td><td style="text-align:left;"><code>gfx.PrimitiveMode.TRIANGLE_STRIP</code></td></tr><tr><td style="text-align:left;"><code>TRIANGLE_FAN</code></td><td style="text-align:left;"><code>gfx.PrimitiveMode.TRIANGLE_FAN</code></td></tr></tbody></table><p>glTF 顶点属性将转换为 Cocos Creator 顶点属性，属性名称的转换如下表所示：</p><table><thead><tr><th style="text-align:left;">glTF 顶点属性名称</th><th style="text-align:left;">Cocos Creator 顶点属性名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>POSITION</code></td><td style="text-align:left;"><code>gfx.AttributeName.ATTR_POSITION</code></td></tr><tr><td style="text-align:left;"><code>NORMAL</code></td><td style="text-align:left;"><code>gfx.AttributeName.ATTR_NORMAL</code></td></tr><tr><td style="text-align:left;"><code>TANGENT</code></td><td style="text-align:left;"><code>gfx.AttributeName.ATTR_TANGENT</code></td></tr><tr><td style="text-align:left;"><code>TEXCOORD_0</code></td><td style="text-align:left;"><code>gfx.AttributeName.ATTR_TEX_COORD</code></td></tr><tr><td style="text-align:left;"><code>TEXCOORD_1</code>..<code>TEXCOORD_8</code></td><td style="text-align:left;"><code>gfx.AttributeName.ATTR_TEX_COORD1</code>..<code>gfx.AttributeName.ATTR_TEX_COORD8</code></td></tr><tr><td style="text-align:left;"><code>COLOR_0</code></td><td style="text-align:left;"><code>gfx.AttributeName.ATTR_COLOR</code></td></tr><tr><td style="text-align:left;"><code>COLOR_1</code>..<code>COLOR_2</code></td><td style="text-align:left;"><code>gfx.AttributeName.ATTR_COLOR1</code>..<code>gfx.AttributeName.ATTR_COLOR2</code></td></tr><tr><td style="text-align:left;"><code>JOINTS_0</code></td><td style="text-align:left;"><code>gfx.AttributeName.ATTR_JOINTS</code></td></tr><tr><td style="text-align:left;"><code>WEIGHTS_0</code></td><td style="text-align:left;"><code>gfx.AttributeName.ATTR_WEIGHTS</code></td></tr></tbody></table><blockquote><p><strong>注意</strong>：若 glTF 基元体中存在其他 <code>JOINTS</code>、<code>WEIGHTS</code> 顶点属性，例如 <code>JOINTS_1</code>、<code>WEIGHTS_1</code>，则意味着此 glTF 网格的顶点可能受到多于 4 根骨骼的影响。</p></blockquote><p>对于每个顶点，所有由 <code>JOINTS_{}</code>、<code>WEIGHTS_{}</code> 确定的权重信息将按权重值进行排序，取出影响权重最大的四根骨骼作为 <code>gfx.AttributeName.ATTR_JOINTS</code> 和 <code>gfx.AttributeName.ATTR_WEIGHTS</code>。</p><p>glTF 形变目标将被转换为 Cocos Creator 子网格形变数据。</p><h3 id="gltf-蒙皮" tabindex="-1">glTF 蒙皮 <a class="header-anchor" href="#gltf-蒙皮" aria-label="Permalink to &quot;glTF 蒙皮&quot;">​</a></h3><p>导入后，glTF 蒙皮将转换为 Cocos Creator 中的骨骼资源。</p><h3 id="gltf-材质" tabindex="-1">glTF 材质 <a class="header-anchor" href="#gltf-材质" aria-label="Permalink to &quot;glTF 材质&quot;">​</a></h3><p>导入后，glTF 材质将转换为 Cocos Creator 中的材质资源。</p><h3 id="gltf-贴图" tabindex="-1">glTF 贴图 <a class="header-anchor" href="#gltf-贴图" aria-label="Permalink to &quot;glTF 贴图&quot;">​</a></h3><p>导入后，glTF 贴图将转换为 Cocos Creator 中的贴图资源。</p><p>glTF 贴图中引用的 glTF 图像将转换为对相应转换后的 Cocos Creator 图像的引用。</p><p>glTF 贴图属性将按照下表中的映射关系转换为 Cocos Creator 贴图属性：</p><table><thead><tr><th style="text-align:left;">glTF 贴图属性</th><th style="text-align:left;">Cocos Creator 贴图属性</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#samplermagfilter" target="_blank" rel="noreferrer">放大筛选器</a></td><td style="text-align:left;">放大筛选器</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#samplerminfilter" target="_blank" rel="noreferrer">缩小筛选器</a></td><td style="text-align:left;">缩小筛选器、Mip Map 筛选器</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#samplerwraps" target="_blank" rel="noreferrer">S 环绕模式</a></td><td style="text-align:left;">S 环绕模式</td></tr><tr><td style="text-align:left;"><a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#samplerwrapt" target="_blank" rel="noreferrer">T 环绕模式</a></td><td style="text-align:left;">环绕模式</td></tr></tbody></table><p>glTF 贴图放大筛选器将按照下表中的映射关系转换为 Cocos Creator 贴图放大筛选器：</p><table><thead><tr><th style="text-align:left;">glTF 贴图放大筛选器</th><th style="text-align:left;">Cocos Creator 贴图放大筛选器</th></tr></thead><tbody><tr><td style="text-align:left;"><code>NEAREST</code></td><td style="text-align:left;"><code>TextureBase.Filter.NEAREST</code></td></tr><tr><td style="text-align:left;"><code>LINEAR</code></td><td style="text-align:left;"><code>TextureBase.Filter.LINEAR</code></td></tr></tbody></table><p>glTF 贴图缩小筛选器将按照下表中的映射关系转换为 Cocos Creator 贴图缩小筛选器和 Cocos Creator 贴图 Mip Map 筛选器：</p><table><thead><tr><th style="text-align:left;">glTF 贴图缩小筛选器</th><th style="text-align:left;">Cocos Creator 贴图缩小筛选器</th><th style="text-align:left;">Cocos Creator 贴图 Mip Map 筛选器</th></tr></thead><tbody><tr><td style="text-align:left;"><code>NEAREST</code></td><td style="text-align:left;"><code>TextureBase.Filter.NEAREST</code></td><td style="text-align:left;"><code>TextureBase.Filter.NONE</code></td></tr><tr><td style="text-align:left;"><code>LINEAR_MIPMAP_LINEAR</code></td><td style="text-align:left;"><code>TextureBase.Filter.LINEAR</code></td><td style="text-align:left;"><code>TextureBase.Filter.NONE</code></td></tr><tr><td style="text-align:left;"><code>LINEAR_MIPMAP_NEAREST</code></td><td style="text-align:left;"><code>TextureBase.Filter.NEAREST</code></td><td style="text-align:left;"><code>TextureBase.Filter.NEAREST</code></td></tr><tr><td style="text-align:left;"><code>LINEAR</code></td><td style="text-align:left;"><code>TextureBase.Filter.LINEAR</code></td><td style="text-align:left;"><code>TextureBase.Filter.NEAREST</code></td></tr><tr><td style="text-align:left;"><code>NEAREST_MIPMAP_LINEAR</code></td><td style="text-align:left;"><code>TextureBase.Filter.NEAREST</code></td><td style="text-align:left;"><code>TextureBase.Filter.LINEAR</code></td></tr><tr><td style="text-align:left;"><code>NEAREST_MIPMAP_NEAREST</code></td><td style="text-align:left;"><code>TextureBase.Filter.LINEAR</code></td><td style="text-align:left;"><code>TextureBase.Filter.LINEAR</code></td></tr></tbody></table><p>glTF 贴图环绕模式将按照下表中的映射关系转换为 Cocos Creator 贴图环绕模式：</p><table><thead><tr><th style="text-align:left;">glTF 贴图环绕模式</th><th style="text-align:left;">Cocos Creator 贴图环绕模式</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CLAMP_TO_EDGE</code></td><td style="text-align:left;"><code>TextureBase.WrapMode.CLAMP_TO_EDGE</code></td></tr><tr><td style="text-align:left;"><code>REPEAT</code></td><td style="text-align:left;"><code>TextureBase.WrapMode.REPEAT</code></td></tr><tr><td style="text-align:left;"><code>MIRRORED_REPEAT</code></td><td style="text-align:left;"><code>TextureBase.WrapMode.MIRRORED_REPEAT</code></td></tr></tbody></table><h3 id="gltf-图像" tabindex="-1">glTF 图像 <a class="header-anchor" href="#gltf-图像" aria-label="Permalink to &quot;glTF 图像&quot;">​</a></h3><p>导入后，glTF 图像将转换为 Cocos Creator 中的图像资源。</p><p>当 glTF 图像的 <a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#imageuri" target="_blank" rel="noreferrer">URI</a> 是 Data URI 时，图像数据将从 Data URI 中获取。否则，将根据 <a href="./image-location-resolution.html">Cocos Creator 图像位置解析算法</a> 解析并引用外部图像文件，其中 <code>url</code> 就是 glTF 图像的 URI，<code>startDir</code> 为 glTF 文件所在目录。</p><h3 id="gltf-动画" tabindex="-1">glTF 动画 <a class="header-anchor" href="#gltf-动画" aria-label="Permalink to &quot;glTF 动画&quot;">​</a></h3><p>导入后，glTF 动画将转换为 Cocos Creator 动画资源。</p>',52),d=[o];function i(s,g,n,c,f,h){return e(),l("div",null,d)}const p=t(a,[["render",i]]);export{x as __pageData,p as default};
