import{_ as a,c as e,o as t,a5 as s}from"./chunks/framework.CqnjdYks.js";const u=JSON.parse('{"title":"Localization Editor Api","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/editor/l10n/localization-editor-api.md","filePath":"zh/manual/editor/l10n/localization-editor-api.md"}'),i={name:"zh/manual/editor/l10n/localization-editor-api.md"},n=s('<h1 id="localization-editor-api" tabindex="-1">Localization Editor Api <a class="header-anchor" href="#localization-editor-api" aria-label="Permalink to &quot;Localization Editor Api&quot;">​</a></h1><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><h3 id="核心功能-l10n" tabindex="-1"><a href="#l10n">核心功能 <code>l10n</code></a> <a class="header-anchor" href="#核心功能-l10n" aria-label="Permalink to &quot;[核心功能 `l10n`](#l10n)&quot;">​</a></h3><p>l10n 提供了核心翻译功能以及 ICU 功能，同时也提供的切换语言的功能。</p><p>我们会将切换后的目标语言存储于 <code>localStorage</code> 中，同时也会自动重启项目运行时，并在下次启动时读取 <code>localStorage</code> 配置以完成整个语言切换流程。</p><blockquote><p><strong>注意</strong>：因此我们希望用户在切换语言之前务必处理好数据持久化工作。</p></blockquote><h3 id="导入-l10n-模块" tabindex="-1">导入 <a href="#l10n"><code>l10n</code></a> 模块 <a class="header-anchor" href="#导入-l10n-模块" aria-label="Permalink to &quot;导入 [`l10n`](#l10n) 模块&quot;">​</a></h3><p>localization-editor 所提供的所有 API 都将从 db://localization-editor/l10n 进行具名导入，导入示例如下：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { l10n } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;db://localization-editor/l10n&#39;</span></span></code></pre></div><h3 id="使用翻译api" tabindex="-1">使用翻译api <a class="header-anchor" href="#使用翻译api" aria-label="Permalink to &quot;使用翻译api&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 任意 component 组件代码中</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// l10n 是 localization 的核心功能</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { l10n } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;db://localization-editor/l10n&#39;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { _decorator, Label, Component } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ccclass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SomeComponent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SomeComponent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ......</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    someMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 将返回 this_is_an_apple 所对应文案</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> l10n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;this_is_an_apple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ......</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="api详细说明" tabindex="-1">API详细说明 <a class="header-anchor" href="#api详细说明" aria-label="Permalink to &quot;API详细说明&quot;">​</a></h2><ul><li>类:<a href="#l10nmanager"><code>L10nManager</code></a></li></ul><hr><ul><li><p>接口:<a href="#resourcelist"><code>ResourceList</code></a></p></li><li><p>接口:<a href="#resourcebundle"><code>ResourceBundle</code></a></p></li><li><p>接口:<a href="#resourcedata"><code>ResourceData</code></a></p></li><li><p>接口:<a href="#resourceitem"><code>ResourceItem</code></a></p></li><li><p>接口:<a href="#fallbacklanguageobjectlist"><code>FallbackLanguageObjectList</code></a></p></li><li><p>接口:<a href="#l10noptions"><code>L10nOptions</code></a></p></li><li><p>接口:<a href="#standardoption"><code>StandardOption</code></a></p></li></ul><hr><ul><li>枚举:<a href="#l10nlistenevent"><code>L10nListenEvent</code></a></li></ul><hr><ul><li><p>别名:<a href="#别名"><code>L10nKey</code></a></p></li><li><p>别名:<a href="#别名"><code>L10nValue</code></a></p></li><li><p>别名:<a href="#别名"><code>TextInfoDirection</code></a></p></li><li><p>别名:<a href="#别名"><code>FallbackLanguage</code></a></p></li></ul><hr><h2 id="l10nmanager" tabindex="-1"><code>L10nManager</code> <a class="header-anchor" href="#l10nmanager" aria-label="Permalink to &quot;`L10nManager`&quot;">​</a></h2><p>导入示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { L10nManager } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;db://localization-editor/l10n&#39;</span></span></code></pre></div><p>描述：</p><p>通常我们不建议您自行使用或构造该类型。</p><p>而我们提供了<a href="#l10n"><code>l10n</code></a>作为全局单例以使用翻译功能。</p><hr><h3 id="索引" tabindex="-1">索引 <a class="header-anchor" href="#索引" aria-label="Permalink to &quot;索引&quot;">​</a></h3><h4 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-label="Permalink to &quot;构造函数&quot;">​</a></h4><ul><li><code>L10nManager</code> <strong>private</strong></li></ul><hr><h4 id="全局变量" tabindex="-1">全局变量 <a class="header-anchor" href="#全局变量" aria-label="Permalink to &quot;全局变量&quot;">​</a></h4><h4 id="l10n-定义" tabindex="-1"><code>l10n 定义</code> <a class="header-anchor" href="#l10n-定义" aria-label="Permalink to &quot;`l10n 定义`&quot;">​</a></h4><p>定义: <code>const l10n: L10nManager</code></p><hr><h3 id="静态属性" tabindex="-1">静态属性 <a class="header-anchor" href="#静态属性" aria-label="Permalink to &quot;静态属性&quot;">​</a></h3><h4 id="local-storage-language-key" tabindex="-1"><code>LOCAL_STORAGE_LANGUAGE_KEY</code> <a class="header-anchor" href="#local-storage-language-key" aria-label="Permalink to &quot;`LOCAL_STORAGE_LANGUAGE_KEY`&quot;">​</a></h4><p>定义: <code>static LOCAL_STORAGE_LANGUAGE_KEY: string</code></p><p>描述: 当调用<a href="#changelanguage"><code>changeLanguage</code></a>切换游戏语言时，将使用<code>localStorage</code> 存储所切换的目标语言标记，并且使用<a href="#localstoragelanguagekey"><code>LOCAL_STORAGE_LANGUAGE_KEY</code></a>作为<code>localStorage</code>的key</p><p>备注：</p><table><thead><tr><th>默认值</th><th>localization-editor/language</th></tr></thead></table><hr><h3 id="实例方法" tabindex="-1">实例方法 <a class="header-anchor" href="#实例方法" aria-label="Permalink to &quot;实例方法&quot;">​</a></h3><h4 id="config" tabindex="-1"><code>config</code> <a class="header-anchor" href="#config" aria-label="Permalink to &quot;`config`&quot;">​</a></h4><p>定义: <code>config(options: L10nOptions): void</code></p><p>描述: 用于配置l10n的某些设置，探索更多选项可以查看<a href="#l10noptions"><code>L10nOptions</code></a></p><p>用例:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l10n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 用于在默认语言没有找到相应翻译时，以该值进行补充显示</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fallbackLanguage: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;zh-Hans-CN&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 如果不喜欢LOCAL_STORAGE_LANGUAGE_KEY的默认值，可以在此修改，但是需要确保在changeLanguage之前</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    localStorageLanguageKey: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localization-editor/langauge&#39;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><hr><h5 id="changelanguage" tabindex="-1"><code>changeLanguage</code> <a class="header-anchor" href="#changelanguage" aria-label="Permalink to &quot;`changeLanguage`&quot;">​</a></h5><p>定义: <code>changeLanguage(language: Intl.BCP47LanguageTag): void</code></p><p>描述: 用于动态切换语言，请查看<a href="https://www.techonthenet.com/js/language_tags.php" target="_blank" rel="noreferrer"><code>BCP47 Language Tag</code></a>以获得更多信息</p><p>用例:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l10n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">changeLanguage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;zh-Hans-CN&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><blockquote><p><strong>注意</strong>: 在调用此方法后，会自动重启游戏，请务必做好数据持久化工作。</p></blockquote><hr><h5 id="t" tabindex="-1"><code>t</code> <a class="header-anchor" href="#t" aria-label="Permalink to &quot;`t`&quot;">​</a></h5><p>定义: <code>t(key: L10nKey, options?: StandardOption): L10nValue</code></p><p>描述: 根据传入的L10nKey，返回当前语言数据中所对应的L10nValue，探索更多选项可以查看<a href="#standardoption"><code>StandardOption</code></a></p><p>用例:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(l10n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;this_is_apple&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这是一个苹果</span></span></code></pre></div><blockquote><p><strong>注意</strong>: 语言数据需要配合 Localization Editor 插件在编译后生成。</p></blockquote><hr><h5 id="exists" tabindex="-1"><code>exists</code> <a class="header-anchor" href="#exists" aria-label="Permalink to &quot;`exists`&quot;">​</a></h5><p>定义: <code>exists(key: L10nKey): boolean</code></p><p>描述: 返回是否存在key</p><p>用例:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(l10n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test_key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><hr><h5 id="currentlanguage" tabindex="-1"><code>currentLanguage</code> <a class="header-anchor" href="#currentlanguage" aria-label="Permalink to &quot;`currentLanguage`&quot;">​</a></h5><p>定义: <code>get currentLanguage(): Intl.BCP47LanguageTag</code></p><p>描述: 返回当前语言的<a href="https://www.techonthenet.com/js/language_tags.php" target="_blank" rel="noreferrer"><code>BCP47 Language Tag</code></a></p><p>用例:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>console.log(l10n.currentLanguage)</span></span>\n<span class="line"><span>// &#39;zh-Hans-CN&#39;</span></span></code></pre></div><hr><h5 id="languages" tabindex="-1"><code>languages</code> <a class="header-anchor" href="#languages" aria-label="Permalink to &quot;`languages`&quot;">​</a></h5><p>定义: <code>get languages(): readonly Intl.BCP47LanguageTag[]</code></p><p>描述: 返回当前可用语言的<a href="https://www.techonthenet.com/js/language_tags.php" target="_blank" rel="noreferrer"><code>BCP47 Language Tag</code></a>数组，可利用该方法作为切换语言下拉框的数据源</p><p>用例:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(l10n.languages)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [&#39;zh-Hans-CN&#39;, &#39;en-US&#39;]</span></span></code></pre></div><hr><h5 id="direction" tabindex="-1"><code>direction</code> <a class="header-anchor" href="#direction" aria-label="Permalink to &quot;`direction`&quot;">​</a></h5><p>定义: <code>direction(language?: Intl.BCP47LanguageTag): TextInfoDirection</code></p><p>描述: 绝大多数语言都尊崇从左到右的阅读习惯，但某些语言却例外比如阿拉伯语，此方法可以得知所传入语言的<a href="#textinfodirection">TextInfoDirection</a></p><p>用例:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(l10n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;rtl&#39;</span></span></code></pre></div><hr><h5 id="on" tabindex="-1"><code>on</code> <a class="header-anchor" href="#on" aria-label="Permalink to &quot;`on`&quot;">​</a></h5><p>定义: <code>on(event: L10nListenEvent, callback: (...args: any[]) =&gt; void)</code></p><p>描述: 用于注册<a href="#l10n">l10n</a>的<a href="#l10nlistenevent">L10nListenEvent</a>事件回调，比如<code>languageChanged</code></p><p>用例:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l10n.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L10nListenEvent.languageChanged, (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //在切换语言后的一些操作，某些数据可以放在这里持久化，之后便会重启整个游戏场景</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><hr><h5 id="off" tabindex="-1"><code>off</code> <a class="header-anchor" href="#off" aria-label="Permalink to &quot;`off`&quot;">​</a></h5><p>定义: <code>off(event: L10nListenEvent, callback: (...args: any[]) =&gt; void)</code></p><p>描述: 用于反注册<a href="#l10n">l10n</a>的<a href="#l10nlistenevent">L10nListenEvent</a>事件回调</p><blockquote><p><em><strong>请务必使on与off成对出现，确保正确的销毁无用数据</strong></em></p></blockquote><hr><h2 id="别名" tabindex="-1">别名 <a class="header-anchor" href="#别名" aria-label="Permalink to &quot;别名&quot;">​</a></h2><table><thead><tr><th>别名</th><th>原类型</th></tr></thead><tbody><tr><td><code>L10nKey</code></td><td><code>string</code></td></tr><tr><td><code>L10nValue</code></td><td><code>string</code></td></tr><tr><td><code>TextInfoDirection</code></td><td><code>&#39;ltr&#39; / &#39;rtl&#39;</code></td></tr><tr><td><code>FallbackLanguage</code></td><td><code>string / readonly string[] / FallbackLanguageObjectList / ((language: Intl.BCP47LanguageTag) =&gt; string / readonly string[] / FallbackLanguageObjectList</code></td></tr></tbody></table><hr><h2 id="接口" tabindex="-1">接口 <a class="header-anchor" href="#接口" aria-label="Permalink to &quot;接口&quot;">​</a></h2><h3 id="l10noptions" tabindex="-1"><code>L10nOptions</code> <a class="header-anchor" href="#l10noptions" aria-label="Permalink to &quot;`L10nOptions`&quot;">​</a></h3><table><thead><tr><th>函数/变量名</th><th>类型</th><th>可选</th></tr></thead><tbody><tr><td><code>fallbackLanguage</code></td><td><code>false</code> / <a href="#别名"><code>FallbackLanguage</code></a></td><td>是</td></tr><tr><td><code>localStorageLanguageKey</code></td><td><code>string</code></td><td>是</td></tr><tr><td><code>beforeTranslate</code></td><td><code>(key: L10nKey) =&gt; L10nValue</code></td><td>是</td></tr><tr><td><code>afterTranslate</code></td><td><code>(key: L10nKey) =&gt; L10nValue</code></td><td>是</td></tr><tr><td><code>returnNull</code></td><td><code>boolean</code></td><td>是</td></tr><tr><td><code>returnEmptyString</code></td><td><code>boolean</code></td><td>是</td></tr></tbody></table><hr><h3 id="resourcelist" tabindex="-1"><code>ResourceList</code> <a class="header-anchor" href="#resourcelist" aria-label="Permalink to &quot;`ResourceList`&quot;">​</a></h3><table><thead><tr><th>函数/变量名</th><th>类型</th><th>可选</th></tr></thead><tbody><tr><td><code>defaultLanguage</code></td><td><code>Intl.BCP47LanguageTag</code></td><td>是</td></tr><tr><td><code>fallbackLanguage</code></td><td><code>Intl.BCP47LanguageTag</code></td><td>是</td></tr><tr><td><code>languages</code></td><td><code>Intl.BCP47LanguageTag[]</code></td><td>否</td></tr></tbody></table><h3 id="resourcebundle" tabindex="-1"><code>ResourceBundle</code> <a class="header-anchor" href="#resourcebundle" aria-label="Permalink to &quot;`ResourceBundle`&quot;">​</a></h3><table><thead><tr><th>函数/变量名</th><th>类型</th><th>可选</th></tr></thead><tbody><tr><td><code>[language: Intl.BCP47LanguageTag]</code></td><td><a href="#resourcedata"><code>ResourceData</code></a></td><td>否</td></tr></tbody></table><hr><h3 id="resourcedata" tabindex="-1"><code>ResourceData</code> <a class="header-anchor" href="#resourcedata" aria-label="Permalink to &quot;`ResourceData`&quot;">​</a></h3><table><thead><tr><th>函数/变量名</th><th>类型</th><th>可选</th></tr></thead><tbody><tr><td><code>[namespace: string]</code></td><td><a href="#resourceitem"><code>ResourceItem</code></a></td><td>否</td></tr></tbody></table><hr><h3 id="resourceitem" tabindex="-1"><code>ResourceItem</code> <a class="header-anchor" href="#resourceitem" aria-label="Permalink to &quot;`ResourceItem`&quot;">​</a></h3><table><thead><tr><th>函数/变量名</th><th>类型</th><th>可选</th></tr></thead><tbody><tr><td><code>[key: string]</code></td><td><code>any</code></td><td>否</td></tr></tbody></table><hr><h3 id="fallbacklanguageobjectlist" tabindex="-1"><code>FallbackLanguageObjectList</code> <a class="header-anchor" href="#fallbacklanguageobjectlist" aria-label="Permalink to &quot;`FallbackLanguageObjectList`&quot;">​</a></h3><table><thead><tr><th>函数/变量名</th><th>类型</th><th>可选</th></tr></thead><tbody><tr><td><code>[language: string]</code></td><td><code>readonly string[]</code></td><td>否</td></tr></tbody></table><hr><h3 id="standardoption" tabindex="-1"><code>StandardOption</code> <a class="header-anchor" href="#standardoption" aria-label="Permalink to &quot;`StandardOption`&quot;">​</a></h3><table><thead><tr><th>函数/变量名</th><th>类型</th><th>可选</th></tr></thead><tbody><tr><td><code>count</code></td><td><code>number</code></td><td>是</td></tr><tr><td><code>defaultValue</code></td><td><code>L10nValue</code></td><td>是</td></tr><tr><td><code>language</code></td><td><code>Intl.BCP47LanguageTag</code></td><td>是</td></tr><tr><td><code>fallbackLanguage</code></td><td><a href="#别名"><code>FallbackLanguage</code></a></td><td>是</td></tr></tbody></table><hr><h2 id="枚举" tabindex="-1">枚举 <a class="header-anchor" href="#枚举" aria-label="Permalink to &quot;枚举&quot;">​</a></h2><h3 id="l10nlistenevent" tabindex="-1"><code>L10nListenEvent</code> <a class="header-anchor" href="#l10nlistenevent" aria-label="Permalink to &quot;`L10nListenEvent`&quot;">​</a></h3><table><thead><tr><th>函数/变量名</th><th>类型</th></tr></thead><tbody><tr><td><code>languageChanged</code></td><td><code>languageChanged</code></td></tr><tr><td><code>onMissingKey</code></td><td><code>missingKey</code></td></tr></tbody></table>',125),l=[n];function d(o,h,r,c,p,g){return t(),e("div",null,l)}const E=a(i,[["render",d]]);export{u as __pageData,E as default};
