import{_ as s,v as t,b as e,R as a}from"./chunks/framework.5ffcbaff.js";const l="/docs/cocos/assets/geometry-renderer-demo.ea8a780e.png",n="/docs/cocos/assets/geometry-renderer-features.c52219a7.png",o="/docs/cocos/assets/enable-geometry-renderer.6c504bee.png",r="/docs/cocos/assets/result.547eb9bc.png",f=JSON.parse('{"title":"几何渲染器（Geometry-Renderer）","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/geometry-renderer/index.md","filePath":"zh/manual/geometry-renderer/index.md"}'),p={name:"zh/manual/geometry-renderer/index.md"},c=a('<h1 id="几何渲染器-geometry-renderer" tabindex="-1">几何渲染器（Geometry-Renderer） <a class="header-anchor" href="#几何渲染器-geometry-renderer" aria-label="Permalink to &quot;几何渲染器（Geometry-Renderer）&quot;">​</a></h1><p>几何渲染器是引擎提供的一种批量渲染各种几何体的功能接口，主要用于调试（比如显示物体的包围盒）及 Cocos Creator 的 gizmo 批量显示。</p><p>几何渲染器的效果展示如图：</p><p><img src="'+l+'" alt="geometry-renderer-demo"></p><p>几何渲染器的功能特性如图：</p><p><img src="'+n+'" alt="geometry-renderer-features"></p><p>其中：</p><ul><li>solid：是否支持实心模式，如果不支持则显示线框模式</li><li>depth test：是否支持深度测试，如果支持则被遮挡部分半透明显示，未被遮挡部分不透明显示，如果不支持则全部不透明显示</li><li>lighting：是否支持简单光照，如果不支持就使用无光模式</li><li>transform：是否支持变换，如果支持，开发者可传入一个变换矩阵，变换矩阵会作用到几何体的顶点上，方便显示任意坐标空间的几何体</li></ul><h2 id="接口描述" tabindex="-1">接口描述 <a class="header-anchor" href="#接口描述" aria-label="Permalink to &quot;接口描述&quot;">​</a></h2><p>几何渲染器位于 <a href="https://github.com/cocos/cocos-engine/blob/v3.7.0/cocos/core/pipeline/geometry-renderer.ts" target="_blank" rel="noreferrer">geometry-render.ts</a> 和原生 <a href="https://github.com/cocos/cocos-engine/blob/v3.7.0/native/cocos/renderer/pipeline/GeometryRenderer.h" target="_blank" rel="noreferrer">GeometryRenderer.h</a> 内，开发者可根据需求查看。其支持的几何体描述如下：</p><h3 id="支持的几何体类型" tabindex="-1">支持的几何体类型 <a class="header-anchor" href="#支持的几何体类型" aria-label="Permalink to &quot;支持的几何体类型&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">类型</th><th style="text-align:left;">接口</th></tr></thead><tbody><tr><td style="text-align:left;">虚线</td><td style="text-align:left;">addDashedLine</td></tr><tr><td style="text-align:left;">线段</td><td style="text-align:left;">addLine</td></tr><tr><td style="text-align:left;">三角形</td><td style="text-align:left;">addTriangle</td></tr><tr><td style="text-align:left;">四边形</td><td style="text-align:left;">addQuad</td></tr><tr><td style="text-align:left;">轴对齐包围盒</td><td style="text-align:left;">addBoundingBox</td></tr><tr><td style="text-align:left;">交叉点</td><td style="text-align:left;">addCross</td></tr><tr><td style="text-align:left;">视锥</td><td style="text-align:left;">addFrustum</td></tr><tr><td style="text-align:left;">胶囊体</td><td style="text-align:left;">addCapsule</td></tr><tr><td style="text-align:left;">圆柱</td><td style="text-align:left;">addCylinder</td></tr><tr><td style="text-align:left;">圆锥</td><td style="text-align:left;">addCone</td></tr><tr><td style="text-align:left;">圆形</td><td style="text-align:left;">addCircle</td></tr><tr><td style="text-align:left;">弧形</td><td style="text-align:left;">addArc</td></tr><tr><td style="text-align:left;">任意多边形</td><td style="text-align:left;">addPolygon</td></tr><tr><td style="text-align:left;">圆盘</td><td style="text-align:left;">addDisc</td></tr><tr><td style="text-align:left;">扇形</td><td style="text-align:left;">addSector</td></tr><tr><td style="text-align:left;">球体</td><td style="text-align:left;">addSphere</td></tr><tr><td style="text-align:left;">环面</td><td style="text-align:left;">addTorus</td></tr><tr><td style="text-align:left;">八面体</td><td style="text-align:left;">addOctahedron</td></tr><tr><td style="text-align:left;">贝塞尔曲线</td><td style="text-align:left;">addBezier</td></tr><tr><td style="text-align:left;">样条曲线，包含三种模式：折线段，多段贝塞尔曲线，Catmull-Rom 曲线</td><td style="text-align:left;">addSpline</td></tr><tr><td style="text-align:left;">网格线框</td><td style="text-align:left;">addMesh</td></tr><tr><td style="text-align:left;">基于索引的网格线框</td><td style="text-align:left;">addIndexedMesh</td></tr></tbody></table><h3 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h3><p>由于每帧渲染完这些几何体后会清空顶点缓存，所以需要在 update 等函数中，每帧往 geometry renderer 对象（位于 camera 中）添加几何体，除此之外不需要额外的操作。</p><p>在使用此功能时需要在 <strong>项目设置</strong> -&gt; <strong>功能剪裁</strong> 内启用 <strong>几何渲染器</strong>：</p><p><img src="'+o+`" alt="enable geometry renderer"></p><blockquote><p><strong>注意</strong>：请确保您的工程是基于 3D 的。</p></blockquote><p>代码示例如下：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_decorator</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Component</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Camera</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Color</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> ccclass</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> property</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> executeInEditMode</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _decorator</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ccclass</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Geometry</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">executeInEditMode</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Geometry</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">property</span><span style="color:#A6ACCD;">(Camera)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">mainCamera</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Camera</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">        </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">mainCamera</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">camera</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">initGeometryRenderer</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">update</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">deltaTime</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">mainCamera</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">camera</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">geometryRenderer</span><span style="color:#89DDFF;">?.</span><span style="color:#82AAFF;">addCircle</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">worldPosition</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Color</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GREEN</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>运行结果如下：</p><p><img src="`+r+'" alt="result"></p>',21),d=[c];function y(i,D,F,C,A,g){return t(),e("div",null,d)}const x=s(p,[["render",y]]);export{f as __pageData,x as default};
