import{_ as t,c as e,o,a4 as s}from"./chunks/framework.uQk9_EO2.js";const r="/docs/cocos/assets/layout.CMLh5Z8V.png",x=JSON.parse('{"title":"Layout 组件参考","description":"","frontmatter":{},"headers":[],"relativePath":"zh/ui-system/components/editor/layout.md","filePath":"zh/ui-system/components/editor/layout.md","lastUpdated":1712305443000}'),n={name:"zh/ui-system/components/editor/layout.md"},l=s('<h1 id="layout-组件参考" tabindex="-1">Layout 组件参考 <a class="header-anchor" href="#layout-组件参考" aria-label="Permalink to &quot;Layout 组件参考&quot;">​</a></h1><p>Layout 是一种容器组件，容器能够开启自动布局功能，自动按照规范排列所有子物体，方便用户制作列表、翻页等功能。</p><p><img src="'+r+'" alt="layout"></p><p>点击 <strong>属性检查器</strong> 下面的 <strong>添加组件</strong> 按钮，然后选择 <strong>UI -&gt; Layout</strong> 即可添加 Layout 组件到节点上。</p><p>布局的组件接口请参考 <a href="./__APIDOC__/zh/class/Layout">Layout API</a>。</p><p>具体使用方法可参考范例 <strong>Layout</strong>（<a href="https://github.com/cocos/cocos-test-projects/tree/v3.8/assets/cases/ui/05.layout" target="_blank" rel="noreferrer">GitHub</a> | <a href="https://gitee.com/mirrors_cocos-creator/test-cases-3d/tree/v3.8/assets/cases/ui/05.layout" target="_blank" rel="noreferrer">Gitee</a>）。</p><h2 id="layout-属性" tabindex="-1">Layout 属性 <a class="header-anchor" href="#layout-属性" aria-label="Permalink to &quot;Layout 属性&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">功能说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Type</strong></td><td style="text-align:left;">布局类型，支持 <strong>NONE</strong>、<strong>HORIZONTAL</strong>、<strong>VERTICAL</strong> 和 <strong>GRID</strong>。</td></tr><tr><td style="text-align:left;"><strong>ResizeMode</strong></td><td style="text-align:left;">缩放模式，支持 <strong>NONE</strong>、<strong>CHILDREN</strong> 和 <strong>CONTAINER</strong>。</td></tr><tr><td style="text-align:left;"><strong>PaddingLeft</strong></td><td style="text-align:left;">排版时，子物体相对于容器左边框的距离。</td></tr><tr><td style="text-align:left;"><strong>PaddingRight</strong></td><td style="text-align:left;">排版时，子物体相对于容器右边框的距离。</td></tr><tr><td style="text-align:left;"><strong>PaddingTop</strong></td><td style="text-align:left;">排版时，子物体相对于容器上边框的距离。</td></tr><tr><td style="text-align:left;"><strong>PaddingBottom</strong></td><td style="text-align:left;">排版时，子物体相对于容器下边框的距离。</td></tr><tr><td style="text-align:left;"><strong>SpacingX</strong></td><td style="text-align:left;">水平排版时，子物体与子物体在水平方向上的间距。NONE 模式无此属性。</td></tr><tr><td style="text-align:left;"><strong>SpacingY</strong></td><td style="text-align:left;">垂直排版时，子物体与子物体在垂直方向上的间距。NONE 模式无此属性。</td></tr><tr><td style="text-align:left;"><strong>HorizontalDirection</strong></td><td style="text-align:left;">指定水平排版时，第一个子节点从容器的左边还是右边开始布局。当容器为 <code>GRID</code> 类型时，此属性和 <code>Start Axis</code> 属性一起决定 Grid 布局元素的起始水平排列方向。</td></tr><tr><td style="text-align:left;"><strong>VerticalDirection</strong></td><td style="text-align:left;">指定垂直排版时，第一个子节点从容器的上面还是下面开始布局。当容器为 <code>GRID</code> 类型时，此属性和 <code>Start Axis</code> 属性一起决定 Grid 布局元素的起始垂直排列方向。</td></tr><tr><td style="text-align:left;"><strong>CellSize</strong></td><td style="text-align:left;">此属性只在 <code>GRID</code> 布局、<code>Children</code> 缩放模式时存在，指定网格容器里面排版元素的大小。</td></tr><tr><td style="text-align:left;"><strong>StartAxis</strong></td><td style="text-align:left;">此属性只在 <code>GRID</code> 布局时存在，指定网格容器里面元素排版指定的起始方向轴。</td></tr><tr><td style="text-align:left;"><strong>AffectedByScale</strong></td><td style="text-align:left;">子节点的缩放是否影响布局。</td></tr><tr><td style="text-align:left;"><strong>AutoAlignment</strong></td><td style="text-align:left;">自动对齐，在 <code>Type</code> 类型为 <strong>HORIZONTAL</strong> 或 <strong>VERTICAL</strong> 模式下，保证另外一个轴向值始终为 0。</td></tr><tr><td style="text-align:left;"><strong>Constraint</strong></td><td style="text-align:left;">布局约束，可以在某个方向上约束排列数量，支持 <strong>NONE</strong>、<strong>FIXED_ROW</strong> 和 <strong>FIXED_COL</strong>。</td></tr><tr><td style="text-align:left;"><strong>ConstraintNum</strong></td><td style="text-align:left;">布局约束值，在 <code>Constraint</code> 的类型为 <strong>FIXED_ROW</strong> 或 <strong>FIXED_COL</strong> 模式下有效。</td></tr></tbody></table><h2 id="详细说明" tabindex="-1">详细说明 <a class="header-anchor" href="#详细说明" aria-label="Permalink to &quot;详细说明&quot;">​</a></h2><p>添加 Layout 组件之后，默认的布局类型是 <strong>NONE</strong>，可以通过修改 <strong>属性检查器</strong> 里的 <code>Type</code> 切换容器排列类型。类型分为 <strong>HORIZONTAL</strong>（水平）、<strong>VERTICAL</strong>（垂直）以及 <strong>GRID</strong>（网格）布局。另外，除了 <strong>NONE</strong> 布局类型，其他都支持 <code>ResizeMode</code>。</p><ul><li><p><strong>ResizeMode</strong> 模式：</p><ul><li><p>设置为 <strong>NONE</strong> 时，子物体和容器的大小变化互不影响。</p></li><li><p>设置为 <strong>CHILDREN</strong> 时，子物体大小会随着容器的大小而变化。</p></li><li><p>设置为 <strong>CONTAINER</strong> 时，容器的大小会随着子物体的大小变化。</p></li></ul><p>所有的排列都是根据容器大小进行计算的，如果需要固定排序，可以将 Type 设置为 <strong>GRID</strong>，然后设置 <code>Constraint</code> 和 <code>ConstraintNum</code> 来固定排序。</p></li><li><p><strong>Constraint</strong> 模式：</p><ul><li><p>设置为 <strong>NONE</strong> 时，自由布局。</p></li><li><p>设置为 <strong>FIXED_ROW</strong> 时，固定行数，搭配 <code>ConstraintNum</code> 使用。</p></li><li><p>设置为 <strong>FIXED_COL</strong> 时，固定列数，搭配 <code>ConstraintNum</code> 使用。</p></li></ul></li></ul><blockquote><p><strong>注意</strong>：Layout 设置后的结果需要到下一帧才会更新，除非你设置完以后手动调用 <code>updateLayout</code> API。</p></blockquote><p>更多布局案例，详情请参考 <a href="./../engine/auto-layout">自动布局</a>。</p>',13),a=[l];function g(d,i,c,y,p,u){return o(),e("div",null,a)}const _=t(n,[["render",g]]);export{x as __pageData,_ as default};
