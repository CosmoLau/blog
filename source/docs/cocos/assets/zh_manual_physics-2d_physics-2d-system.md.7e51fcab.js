import{_ as s,v as a,b as n,R as l}from"./chunks/framework.5ffcbaff.js";const p="/docs/cocos/assets/raycasting-output.fe844c63.png",h=JSON.parse('{"title":"2D 物理系统","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/physics-2d/physics-2d-system.md","filePath":"zh/manual/physics-2d/physics-2d-system.md"}'),o={name:"zh/manual/physics-2d/physics-2d-system.md"},e=l(`<h1 id="_2d-物理系统" tabindex="-1">2D 物理系统 <a class="header-anchor" href="#_2d-物理系统" aria-label="Permalink to &quot;2D 物理系统&quot;">​</a></h1><p>物理系统隐藏了大部分物理模块（Box2D 和 Builtin 模块）实现细节（比如创建刚体，同步刚体信息到节点中等）。</p><p>可以通过物理系统访问一些物理模块常用的功能，比如点击测试、射线测试、设置测试信息等。</p><h2 id="物理系统相关设置" tabindex="-1">物理系统相关设置 <a class="header-anchor" href="#物理系统相关设置" aria-label="Permalink to &quot;物理系统相关设置&quot;">​</a></h2><h3 id="开启物理系统" tabindex="-1">开启物理系统 <a class="header-anchor" href="#开启物理系统" aria-label="Permalink to &quot;开启物理系统&quot;">​</a></h3><p>物理系统默认是开启的，代码如下：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PhysicsSystem2D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">enable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="绘制物理调试信息" tabindex="-1">绘制物理调试信息 <a class="header-anchor" href="#绘制物理调试信息" aria-label="Permalink to &quot;绘制物理调试信息&quot;">​</a></h3><p>物理系统默认是不绘制任何调试信息的，如果需要绘制调试信息，请使用 <strong>debugDrawFlags</strong>。</p><p>物理系统提供了各种各样的调试信息，可以通过组合这些信息来绘制相关的内容。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PhysicsSystem2D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">debugDrawFlags </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> EPhysics2DDrawFlags</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Aabb </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">    EPhysics2DDrawFlags</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Pair </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">    EPhysics2DDrawFlags</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CenterOfMass </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">    EPhysics2DDrawFlags</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Joint </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">    EPhysics2DDrawFlags</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Shape</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>设置绘制标志位为 <strong>EPhysics2DDrawFlags.None</strong>，即可以关闭绘制。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PhysicsSystem2D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">debugDrawFlags </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> EPhysics2DDrawFlags</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">None</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="物理单位到世界坐标系单位的转换" tabindex="-1">物理单位到世界坐标系单位的转换 <a class="header-anchor" href="#物理单位到世界坐标系单位的转换" aria-label="Permalink to &quot;物理单位到世界坐标系单位的转换&quot;">​</a></h3><p>一般物理模块（Box2D）都是使用 <strong>米 - 千克 - 秒（MKS）</strong> 单位制，Box2D 在这样的单位制下运算的表现是最佳的。但是我们在 2D 游戏运算中一般使用 <strong>世界坐标系中的单位</strong>（简称世界单位）来作为长度单位制，所以我们需要一个比率来进行物理单位到世界单位上的相互转换。</p><p>一般情况下我们把这个比率设置为 32，这个值可以通过 <code>PHYSICS_2D_PTM_RATIO</code> 获取，并且这个值是只读的。通常用户是不需要关心这个值的，物理系统内部会自动对物理单位与世界单位进行转换，用户访问和设置的都是进行 2d 游戏开发中所熟悉的世界单位。</p><h3 id="设置物理重力" tabindex="-1">设置物理重力 <a class="header-anchor" href="#设置物理重力" aria-label="Permalink to &quot;设置物理重力&quot;">​</a></h3><p>重力是物理表现中非常重要的一点，大部分物理游戏都会使用到重力这一物理特性。默认的重力加速度是 <code>(0, -10)</code> 米/秒<sup>2</sup>，按照上面描述的转换规则，即 <code>(0, -320)</code> 世界单位/秒<sup>2</sup>。</p><p>如果希望重力加速度为 0，可以这样设置：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PhysicsSystem2D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gravity </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">v2</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>如果希望修改重力加速度为其他值，比如每秒加速降落 20m/s，那么可以这样设置：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PhysicsSystem2D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gravity </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">v2</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> PHYSICS_2D_PTM_RATIO)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="设置物理步长" tabindex="-1">设置物理步长 <a class="header-anchor" href="#设置物理步长" aria-label="Permalink to &quot;设置物理步长&quot;">​</a></h3><p>物理系统是按照一个固定的步长来更新物理世界的，默认的步长是 <code>1/60</code>。但是有的游戏可能会不希望按照这么高的频率来更新物理世界，毕竟这个操作是比较消耗时间的，可以通过降低步长来达到这个效果。代码示例如下：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> system </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> PhysicsSystem2D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 物理步长，默认 fixedTimeStep 是 1/60</span></span>
<span class="line"><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fixedTimeStep </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 每次更新物理系统处理速度的迭代次数，默认为 10</span></span>
<span class="line"><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">velocityIterations </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 每次更新物理系统处理位置的迭代次数，默认为 10</span></span>
<span class="line"><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">positionIterations </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p><strong>注意</strong>：降低物理步长和各个属性的迭代次数，都会降低物理的检测频率，所以会更有可能发生刚体穿透的情况，使用时需要考虑到这个情况。</p><p>通过 <a href="./../editor/project/physics-configs.html">物理配置</a> 也可以在 <strong>项目设置</strong> -&gt; <strong>物理</strong> 内修改重力和物理步长。</p><h2 id="查询物体" tabindex="-1">查询物体 <a class="header-anchor" href="#查询物体" aria-label="Permalink to &quot;查询物体&quot;">​</a></h2><p>通常你可能想知道在给定的场景中都有哪些实体。例如，一个炸弹爆炸了，在范围内的物体都会受到伤害，或者在策略类游戏中，可能会希望让用户选择一个范围内的单位进行拖动。</p><p>物理系统提供了几个方法方便用户高效快速地查找某个区域中有哪些物体，每种方法通过不同的方式来检测物体，基本满足游戏所需。</p><h3 id="点测试" tabindex="-1">点测试 <a class="header-anchor" href="#点测试" aria-label="Permalink to &quot;点测试&quot;">​</a></h3><p>点测试将测试是否有碰撞体会包含一个世界坐标系下的点，如果测试成功，则会返回一个包含这个点的碰撞体。注意，如果有多个碰撞体同时满足条件，下面的接口只会返回一个随机的结果。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> collider </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> PhysicsSystem2D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">testPoint</span><span style="color:#A6ACCD;">(point)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="矩形测试" tabindex="-1">矩形测试 <a class="header-anchor" href="#矩形测试" aria-label="Permalink to &quot;矩形测试&quot;">​</a></h3><p>矩形测试将测试世界坐标系下指定的一个矩形，如果一个碰撞体的包围盒与这个矩形有重叠部分，则这个碰撞体会被添加到返回列表中。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> colliderList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> PhysicsSystem2D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">testAABB</span><span style="color:#A6ACCD;">(rect)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="射线测试" tabindex="-1">射线测试 <a class="header-anchor" href="#射线测试" aria-label="Permalink to &quot;射线测试&quot;">​</a></h3><p>Box2D 物理模块（Builtin 模块没有）提供了射线检测来检测给定的线段穿过哪些碰撞体，我们还可以获取到碰撞体在线段穿过碰撞体的那个点的法线向量和其他一些有用的信息。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> results </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> PhysicsSystem2D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">raycast</span><span style="color:#A6ACCD;">(p1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> p2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> type</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mask)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> results</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">results</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">collider</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">collider</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">point</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">point</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">normal</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">normal</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fraction</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">fraction</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>射线检测的第三个参数指定检测的类型，射线检测支持四种类型。这是因为 Box2D 的射线检测不是从射线起始点最近的物体开始检测的，所以检测结果不能保证结果是按照物体距离射线起始点远近来排序的。Cocos Creator 物理系统将根据射线检测传入的检测类型来决定是否对 Box2D 检测结果进行排序，这个类型会影响到最后返回给用户的结果。</p><ul><li><p>ERaycast2DType.Any</p><p>检测射线路径上任意的碰撞体，一旦检测到任何碰撞体，将立刻结束检测其他的碰撞体，最快。</p></li><li><p>ERaycast2DType.Closest</p><p>检测射线路径上最近的碰撞体，这是射线检测的默认值，稍慢。</p></li><li><p>ERaycast2DType.All</p><p>检测射线路径上的所有碰撞体，检测到的结果顺序不是固定的。在这种检测类型下，一个碰撞体可能会返回多个结果，这是因为 Box2D 是通过检测夹具（fixture）来进行物体检测的，而一个碰撞体中可能由多个夹具（fixture）组成的，慢。</p></li><li><p>ERaycast2DType.AllClosest</p><p>检测射线路径上所有碰撞体，但是会对返回值进行删选，只返回每一个碰撞体距离射线起始点最近的那个点的相关信息，最慢。</p></li></ul><h4 id="射线检测的结果" tabindex="-1">射线检测的结果 <a class="header-anchor" href="#射线检测的结果" aria-label="Permalink to &quot;射线检测的结果&quot;">​</a></h4><p>射线检测的结果包含了许多有用的信息，你可以根据实际情况来选择如何使用这些信息。</p><ul><li><p>collider</p><p>指定射线穿过的是哪一个碰撞体。</p></li><li><p>point</p><p>指定射线与穿过的碰撞体在哪一点相交。</p></li><li><p>normal</p><p>指定碰撞体在相交点的表面的法线向量。</p></li><li><p>fraction</p><p>指定相交点在射线上的分数。</p></li></ul><p>可以通过下面这张图更好的理解射线检测的结果。</p><p><img src="`+p+'" alt="raycasting-output"></p><h4 id="射线检测时分组与掩码" tabindex="-1">射线检测时分组与掩码 <a class="header-anchor" href="#射线检测时分组与掩码" aria-label="Permalink to &quot;射线检测时分组与掩码&quot;">​</a></h4><p>2D 物理系统的分组和掩码和 3D 物理系统一致，开发者可以在 <strong>项目设置</strong> -&gt; <strong>物理</strong> 分页中找到碰撞矩阵进行修改。更多信息可以参考 <a href="./../physics/physics-group-mask.html">分组和掩码</a>。</p>',48),t=[e];function c(r,D,y,i,C,F){return a(),n("div",null,t)}const d=s(o,[["render",c]]);export{h as __pageData,d as default};
