import{_ as s,v as a,b as t,R as l}from"./chunks/framework.5ffcbaff.js";const e="/docs/cocos/assets/debug-renderer-demo.6b8e6f22.png",n="/docs/cocos/assets/debug-renderer-setting.eee62df9.png",g=JSON.parse('{"title":"调试渲染器（Debug-Renderer）","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/debug-renderer/index.md","filePath":"zh/manual/debug-renderer/index.md"}'),o={name:"zh/manual/debug-renderer/index.md"},p=l('<h1 id="调试渲染器-debug-renderer" tabindex="-1">调试渲染器（Debug-Renderer） <a class="header-anchor" href="#调试渲染器-debug-renderer" aria-label="Permalink to &quot;调试渲染器（Debug-Renderer）&quot;">​</a></h1><p>调试渲染器是引擎提供的一种批量渲染屏幕文字的功能接口，主要用于调试，输出任意的文字调试信息到屏幕上。目前仅支持原生平台。</p><p>其效果图如下所示：</p><p><img src="'+e+'" alt="debug-renderer-demo"></p><h2 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h2><ol><li><p>确保在项目设置面板中，调试渲染器处于勾选状态 <img src="'+n+`" alt="debug-renderer-setting"></p></li><li><p>由于每帧渲染完这些文字后会清空顶点缓存，所以需要在 <code>update</code> 等函数中，每帧添加调试文本，示例 <code>TS</code> 代码如下：</p></li></ol><div class="language-TS"><button title="Copy Code" class="copy"></button><span class="lang">TS</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">native</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Vec2</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">NATIVE</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cc/env</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (NATIVE) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">native</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DebugRenderer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getInstance</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addText</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Stanley</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Vec2</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="c-接口描述" tabindex="-1">C++ 接口描述 <a class="header-anchor" href="#c-接口描述" aria-label="Permalink to &quot;C++ 接口描述&quot;">​</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addText</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ccstd</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">text</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Vec2</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">screenPos</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DebugTextInfo</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">info</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DebugTextInfo</span><span style="color:#89DDFF;">());</span></span></code></pre></div><p>其参数描述如下：</p><ul><li>text：要输出的文字</li><li>screenPos：文字展示的位置</li><li>info：定义字体的样式</li></ul><p>DebugTextInfo 可以定制输出文字的外观，其参数描述如下：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">color</td><td style="text-align:left;">文字颜色</td></tr><tr><td style="text-align:left;">bold</td><td style="text-align:left;">是否粗体</td></tr><tr><td style="text-align:left;">italic</td><td style="text-align:left;">是否斜体</td></tr><tr><td style="text-align:left;">shadow</td><td style="text-align:left;">是否开启阴影效果</td></tr><tr><td style="text-align:left;">shadowThickness</td><td style="text-align:left;">阴影宽度</td></tr><tr><td style="text-align:left;">shadowColor</td><td style="text-align:left;">阴影颜色</td></tr><tr><td style="text-align:left;">scale</td><td style="text-align:left;">文字缩放比例</td></tr></tbody></table>`,13),r=[p];function c(y,d,i,D,F,C){return a(),t("div",null,r)}const f=s(o,[["render",c]]);export{g as __pageData,f as default};
