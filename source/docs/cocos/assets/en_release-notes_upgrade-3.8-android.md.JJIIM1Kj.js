import{_ as e,c as a,o as s,a4 as n}from"./chunks/framework.uQk9_EO2.js";const i="/docs/cocos/assets/upgrade-3.8-jdk-bad-version.DkJvt9zP.png",t="/docs/cocos/assets/upgrade-3.8-jdk-version-as.B3DNnYR8.png",f=JSON.parse('{"title":"Upgrading Android Project to v3.8","description":"","frontmatter":{},"headers":[],"relativePath":"en/release-notes/upgrade-3.8-android.md","filePath":"en/release-notes/upgrade-3.8-android.md","lastUpdated":1712305443000}'),o={name:"en/release-notes/upgrade-3.8-android.md"},r=n(`<h1 id="upgrading-android-project-to-v3-8" tabindex="-1">Upgrading Android Project to v3.8 <a class="header-anchor" href="#upgrading-android-project-to-v3-8" aria-label="Permalink to &quot;Upgrading Android Project to v3.8&quot;">​</a></h1><p>Starting from version 3.8, the Android project generated by the build supports the new version of Android Studio (Flamingo | 2022.2.1) by default. Due to the <a href="https://developer.android.com/studio/releases#jdk-17" target="_blank" rel="noreferrer">requirement of the Android Gradle plugin</a>, developers need to upgrade their JDK to version 17 and also upgrade Android Studio to the Flamingo version.</p><blockquote><p>If the Android project generated by the build is not configured, you can directly delete the <code>native/engine/android</code> directory and <code>build/android</code>directory, and then rebuild it. This avoids the need for step-by-step modifications and upgrades to the project. However, please note that this step is risky, and developers need to understand the consequences.</p></blockquote><p>For existing native Android projects, developers can follow the steps below to upgrade their projects:</p><h2 id="step-1-backup-the-current-project" tabindex="-1">Step 1: Backup the Current Project <a class="header-anchor" href="#step-1-backup-the-current-project" aria-label="Permalink to &quot;Step 1: Backup the Current Project&quot;">​</a></h2><p>Before proceeding with the upgrade, it is important to backup the current native directory in case of any issues. For example, you can use Git to save the current modifications.</p><h2 id="step-2-upgrade-gradle-plugin-version" tabindex="-1">Step 2: Upgrade Gradle Plugin Version <a class="header-anchor" href="#step-2-upgrade-gradle-plugin-version" aria-label="Permalink to &quot;Step 2: Upgrade Gradle Plugin Version&quot;">​</a></h2><p>The Gradle plugin version acts as the interface between Gradle and the Android build system. Therefore, before upgrading Gradle, we need to upgrade the Gradle plugin version. In the project&#39;s <code>native/engine/android/build.gradle</code> file, change the Gradle plugin version in the classpath to 8.0.2.</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         // jcenter() // keeped as anchor, will be removed soon</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     dependencies {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-        classpath &#39;com.android.tools.build:gradle:4.1.0&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+        classpath &#39;com.android.tools.build:gradle:8.0.2&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         // NOTE: Do not place your application dependencies here; they belong</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         // in the individual module build.gradle files</span></span></code></pre></div><h2 id="step-3-update-package-field" tabindex="-1">Step 3: Update Package Field <a class="header-anchor" href="#step-3-update-package-field" aria-label="Permalink to &quot;Step 3: Update Package Field&quot;">​</a></h2><p>Remove the package attribute from the <code>native/engine/android/app/AndroidManifest.xml</code> file.</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-    package=&quot;com.cocos.test&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     android:installLocation=&quot;auto&quot;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;</span></span></code></pre></div><p>Based on the diff file below, edit <code>native/engine/android/app/build.gradle</code> and change <code>applicationId</code> to <code>namespace</code>.</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     buildToolsVersion PROP_BUILD_TOOLS_VERSION</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     ndkPath PROP_NDK_PATH</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+    namespace APPLICATION_ID</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     compileOptions {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         sourceCompatibility JavaVersion.VERSION_1_8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">@@ -17,7 +18,6 @@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> android {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     defaultConfig {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-        applicationId APPLICATION_ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         minSdkVersion PROP_MIN_SDK_VERSION</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         targetSdkVersion PROP_TARGET_SDK_VERSION</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         versionCode 1</span></span></code></pre></div><h3 id="step-4-upgrade-gradle-version" tabindex="-1">Step 4: Upgrade Gradle Version <a class="header-anchor" href="#step-4-upgrade-gradle-version" aria-label="Permalink to &quot;Step 4: Upgrade Gradle Version&quot;">​</a></h3><p>Next, we need to upgrade the Gradle wrapper version. In the project&#39;s <code>build/android/proj/gradle/wrapper/gradle-wrapper.properties</code> file, change the distributionUrl to 8.0.2 as shown below:</p><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">distributionUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=https\\://services.gradle.org/distributions/gradle-8.0.2-bin.zip</span></span></code></pre></div><h2 id="step-5-update-proguard-rules" tabindex="-1">Step 5: Update Proguard Rules <a class="header-anchor" href="#step-5-update-proguard-rules" aria-label="Permalink to &quot;Step 5: Update Proguard Rules&quot;">​</a></h2><p>Add the following code to file <code>native/engine/android/app/proguard-rules.pro</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># This is generated automatically by the Android Gradle plugin.</span></span>
<span class="line"><span>-dontwarn android.hardware.BatteryState</span></span>
<span class="line"><span>-dontwarn android.hardware.lights.Light</span></span>
<span class="line"><span>-dontwarn android.hardware.lights.LightState$Builder</span></span>
<span class="line"><span>-dontwarn android.hardware.lights.LightState</span></span>
<span class="line"><span>-dontwarn android.hardware.lights.LightsManager$LightsSession</span></span>
<span class="line"><span>-dontwarn android.hardware.lights.LightsManager</span></span>
<span class="line"><span>-dontwarn android.hardware.lights.LightsRequest$Builder</span></span>
<span class="line"><span>-dontwarn android.hardware.lights.LightsRequest</span></span>
<span class="line"><span>-dontwarn android.net.ssl.SSLSockets</span></span>
<span class="line"><span>-dontwarn android.os.VibratorManager</span></span></code></pre></div><h2 id="step-6-install-jdk-17" tabindex="-1">Step 6: Install JDK 17 <a class="header-anchor" href="#step-6-install-jdk-17" aria-label="Permalink to &quot;Step 6: Install JDK 17&quot;">​</a></h2><p>Download and install JDK 17 from the <a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noreferrer">official website</a>. During the installation process, make sure to configure the environment variables.</p><p>Once the installation is complete, you can verify if it was successful by running <code>java -version</code> in the command line.</p><h2 id="step-7-upgrade-android-studio" tabindex="-1">Step 7: Upgrade Android Studio <a class="header-anchor" href="#step-7-upgrade-android-studio" aria-label="Permalink to &quot;Step 7: Upgrade Android Studio&quot;">​</a></h2><p>After upgrading Gradle, we also need to upgrade Android Studio. If you are currently using an older version of Android Studio, please download the latest version of Android Studio (Flamingo | 2022.2.1) from <a href="https://developer.android.com/studio" target="_blank" rel="noreferrer">https://developer.android.com/studio</a>.</p><p>Once the download is complete, open Android Studio and import your project. Android Studio will automatically detect the required Gradle version for your project and prompt you to upgrade. Follow the prompts to complete the upgrade of Android Studio.</p><p>If you encounter the error report below when compiling in Android Studio, <img src="`+i+'" alt="error"> you can refer to the following screenshot to modify the JDK 17 used by Gradle in the settings. <img src="'+t+'" alt="settings"></p><p>After completing the above steps, you can also perform a build by using the build panel.</p>',28),d=[r];function p(l,h,c,g,u,k){return s(),a("div",null,d)}const b=e(o,[["render",p]]);export{f as __pageData,b as default};
