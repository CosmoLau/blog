import{_ as s,c as t,o as e,a4 as a}from"./chunks/framework.uQk9_EO2.js";const o="/docs/cocos/assets/physics.DL7bba5F.gif",c="/docs/cocos/assets/physics-system.CmnWRLEK.png",g=JSON.parse('{"title":"物理系统","description":"","frontmatter":{},"headers":[],"relativePath":"zh/physics/index.md","filePath":"zh/physics/index.md","lastUpdated":1712305443000}'),r={name:"zh/physics/index.md"},i=a('<h1 id="物理系统" tabindex="-1">物理系统 <a class="header-anchor" href="#物理系统" aria-label="Permalink to &quot;物理系统&quot;">​</a></h1><p>Cocos Creator 的物理系统提供了高效的组件化工作流程和便捷的使用方法。目前支持刚体、碰撞组件、触发和碰撞事件、物理材质、射线检测等等特性。</p><p><img src="'+o+'" alt="image"></p><p>Cocos Creator 内置了 <a href="./../physics-2d/physics-2d">2D 物理系统</a> 和 <a href="./physics">3D 物理系统</a>，开发者可以通过 Creator 主菜单栏的 <strong>项目 -&gt; 项目设置 -&gt; 功能裁剪</strong> 中根据需要配置 2D 或者 3D 物理系统：</p><p><img src="'+c+'" alt="physics system"></p>',5),p=[i];function n(_,d,h,m,l,f){return e(),t("div",null,p)}const x=s(r,[["render",n]]);export{g as __pageData,x as default};
