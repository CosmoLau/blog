import{_ as s,c as i,o as t,a5 as a}from"./chunks/framework.CqnjdYks.js";const e="/docs/cocos/assets/debug-renderer-demo.B2ZWitBc.png",l="/docs/cocos/assets/debug-renderer-setting.CjYuK8FH.png",F=JSON.parse('{"title":"调试渲染器（Debug-Renderer）","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/debug-renderer/index.md","filePath":"zh/manual/debug-renderer/index.md"}'),n={name:"zh/manual/debug-renderer/index.md"},h=a('<h1 id="调试渲染器-debug-renderer" tabindex="-1">调试渲染器（Debug-Renderer） <a class="header-anchor" href="#调试渲染器-debug-renderer" aria-label="Permalink to &quot;调试渲染器（Debug-Renderer）&quot;">​</a></h1><p>调试渲染器是引擎提供的一种批量渲染屏幕文字的功能接口，主要用于调试，输出任意的文字调试信息到屏幕上。目前仅支持原生平台。</p><p>其效果图如下所示：</p><p><img src="'+e+'" alt="debug-renderer-demo"></p><h2 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h2><ol><li><p>确保在项目设置面板中，调试渲染器处于勾选状态 <img src="'+l+`" alt="debug-renderer-setting"></p></li><li><p>由于每帧渲染完这些文字后会清空顶点缓存，所以需要在 <code>update</code> 等函数中，每帧添加调试文本，示例 <code>TS</code> 代码如下：</p></li></ol><div class="language-TS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">TS</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { native, Vec2 } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { NATIVE } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cc/env&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NATIVE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    native.DebugRenderer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Stanley&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="c-接口描述" tabindex="-1">C++ 接口描述 <a class="header-anchor" href="#c-接口描述" aria-label="Permalink to &quot;C++ 接口描述&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ccstd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vec2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">screenPos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DebugTextInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DebugTextInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><p>其参数描述如下：</p><ul><li>text：要输出的文字</li><li>screenPos：文字展示的位置</li><li>info：定义字体的样式</li></ul><p>DebugTextInfo 可以定制输出文字的外观，其参数描述如下：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">color</td><td style="text-align:left;">文字颜色</td></tr><tr><td style="text-align:left;">bold</td><td style="text-align:left;">是否粗体</td></tr><tr><td style="text-align:left;">italic</td><td style="text-align:left;">是否斜体</td></tr><tr><td style="text-align:left;">shadow</td><td style="text-align:left;">是否开启阴影效果</td></tr><tr><td style="text-align:left;">shadowThickness</td><td style="text-align:left;">阴影宽度</td></tr><tr><td style="text-align:left;">shadowColor</td><td style="text-align:left;">阴影颜色</td></tr><tr><td style="text-align:left;">scale</td><td style="text-align:left;">文字缩放比例</td></tr></tbody></table>`,13),p=[h];function d(k,r,g,o,c,E){return t(),i("div",null,p)}const u=s(n,[["render",d]]);export{F as __pageData,u as default};
