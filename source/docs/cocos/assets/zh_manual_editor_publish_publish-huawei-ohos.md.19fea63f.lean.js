import{_ as o,v as e,b as r,R as t}from"./chunks/framework.5ffcbaff.js";const n="/docs/cocos/assets/app-info.1c6596bb.png",a="/docs/cocos/assets/dev-setting.75ced545.png",s="/docs/cocos/assets/preferences.e80b4ef0.png",c="/docs/cocos/assets/build.fafb9c9a.png",i="/docs/cocos/assets/package-ohos.98f7f91b.png",p="/docs/cocos/assets/open-project.57614d8d.png",l="/docs/cocos/assets/sign-configs-debug.f9848fe6.png",d="/docs/cocos/assets/build-variants.d2092ff6.png",g="/docs/cocos/assets/build-hap.371645b5.png",h="/docs/cocos/assets/output.37d04d5c.png",u="/docs/cocos/assets/debug-output.0f52cebc.png",m="/docs/cocos/assets/run-project.0eb87c6a.png",b="/docs/cocos/assets/cer-file.e5dd495f.png",f="/docs/cocos/assets/provision-profile.fbba9090.png",D=JSON.parse('{"title":"发布 Huawei HarmonyOS 应用","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/editor/publish/publish-huawei-ohos.md","filePath":"zh/manual/editor/publish/publish-huawei-ohos.md"}'),_={name:"zh/manual/editor/publish/publish-huawei-ohos.md"},v=t('<h1 id="发布-huawei-harmonyos-应用" tabindex="-1">发布 Huawei HarmonyOS 应用 <a class="header-anchor" href="#发布-huawei-harmonyos-应用" aria-label="Permalink to &quot;发布 Huawei HarmonyOS 应用&quot;">​</a></h1><p>从 v3.2 开始，Cocos Creator 支持将游戏打包为 HarmonyOS 应用（<code>.hap</code>）。</p><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><ul><li><p>进入 <a href="https://developer.huawei.com/consumer/cn/service/josp/agc/index.html" target="_blank" rel="noreferrer">AppGallery Connect 网站</a> 注册 <a href="https://developer.huawei.com/consumer/cn/doc/start/registration-and-verification-0000001053628148" target="_blank" rel="noreferrer">华为开发者联盟帐号</a>。</p></li><li><p>登录后 <a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/agc-harmonyapp-createproject" target="_blank" rel="noreferrer">创建项目</a> 并 <a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/agc-harmonyapp-createharmonyapp" target="_blank" rel="noreferrer">添加 HarmonyOS 应用</a>，<strong>选择平台</strong> 为 <strong>APP（HarmonyOS 应用）</strong>。</p><p><img src="'+n+'" alt="app info"></p><blockquote><p><strong>注意</strong>：<strong>应用包名</strong> 需要与 Creator <strong>构建发布</strong> 面板中的 <strong>应用 ID 名称</strong> 保持一致。</p></blockquote></li><li><p>下载并安装 <a href="https://developer.harmonyos.com/cn/develop/deveco-studio#download" target="_blank" rel="noreferrer">HUAWEI DevEco Studio</a>。安装完成后 <a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides/environment_config-0000001052902427" target="_blank" rel="noreferrer">配置开发环境</a>，下载 HarmonyOS SDK，SDK Platforms 中的 SDK 包请勾选 <strong>Java</strong> 和 <strong>Native</strong>。</p><p><img src="'+a+'" alt="dev setting"></p><p>记住窗口上方所示的 <strong>HarmonyOS SDK Location</strong> 指示的目录，稍后需要在 Cocos Creator 的 <strong>偏好设置</strong> 面板中填写这个 SDK 所在路径。</p></li></ul><h2 id="发布流程" tabindex="-1">发布流程 <a class="header-anchor" href="#发布流程" aria-label="Permalink to &quot;发布流程&quot;">​</a></h2><h3 id="使用-cocos-creator-构建" tabindex="-1">使用 Cocos Creator 构建 <a class="header-anchor" href="#使用-cocos-creator-构建" aria-label="Permalink to &quot;使用 Cocos Creator 构建&quot;">​</a></h3><ol><li><p>使用 Cocos Creator 打开项目工程，点击上方菜单栏中的 <strong>Cocos Creator -&gt; 偏好设置 -&gt; 外部程序</strong>，配置 <strong>HarmonyOS NDK</strong> 和 <strong>HarmonyOS SDK</strong> 路径：</p><p><img src="'+s+'" alt="preferences"></p></li><li><p>从 <strong>菜单栏 -&gt; 项目</strong> 中打开 <strong>构建发布</strong> 面板。在 <strong>构建发布</strong> 面板的 <strong>发布平台</strong> 中选择 <strong>HarmonyOS</strong>，根据需要配置 <a href="./native-options.html#构建选项">构建选项</a> 然后点击右下方的 <strong>构建</strong> 按钮。</p><p><img src="'+c+'" alt="build"></p><blockquote><p><strong>注意</strong>：</p><ol><li><strong>HarmonyOS</strong> 展开项中的 <strong>应用 ID 名称</strong> 需要与在 AppGallery Connect 后台添加 HarmonyOS 应用时的包名保持一致。</li><li>由于 <strong>HarmonyOS</strong> 已全面支持 GLES3 渲染后端，因此在 v3.4.2 中我们移除了 <strong>HarmonyOS</strong> 展开项中的 <strong>Render BackEnd</strong> 选项。</li></ol></blockquote></li><li><p>构建完成后打开项目目录，可以看到在 <code>native\\engine</code> 目录下生成了 <code>ohos</code> 文件夹，该文件夹就包含了构建生成的 HarmonyOS 工程。</p><p><img src="'+i+'" alt="package"></p><blockquote><p><strong>注意</strong>：因为 HarmonyOS 暂时不支持多目录构建，所以生成的 HarmonyOS 工程在 <code>native\\engine</code> 目录下，与其他平台生成在项目目录 <code>build</code> 目录下的不同。</p></blockquote><p>然后使用 HUAWEI DevEco Studio 打开 <code>ohos</code> 文件夹即可执行进一步的编译运行，详情请查看下文介绍。</p></li></ol><h3 id="通过-huawei-deveco-studio-编译运行" tabindex="-1">通过 HUAWEI DevEco Studio 编译运行 <a class="header-anchor" href="#通过-huawei-deveco-studio-编译运行" aria-label="Permalink to &quot;通过 HUAWEI DevEco Studio 编译运行&quot;">​</a></h3><ol><li><p>打开 HUAWEI DevEco Studio，点击 <strong>打开项目</strong>，选择上个步骤构建后生成的 HarmonyOS 工程（<code>ohos</code> 文件夹）。</p><p><img src="'+p+'" alt="open-project"></p></li><li><p>准备签名文件，签名文件的获取方式请参考下文 <strong>签名文件</strong> 部分的内容。</p></li><li><p>配置签名文件。点击 DevEco Studio 菜单栏中的 <strong>File -&gt; Project Structure</strong>，选择 <strong>Modules -&gt; entry</strong>，在 <strong>Signing Configs</strong> 页面 <a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides/ide_debug_device-0000001053822404#ZH-CN_TOPIC_0000001154985555__section19238119191816" target="_blank" rel="noreferrer">配置签名信息</a>。</p><p><img src="'+l+'" alt="sign configs"></p><p>然后继续在 <strong>Project -&gt; Signing Configs</strong> 中配置签名信息。</p><p>设置完成并保存后，配置的签名信息可以在项目目录下的 <code>native\\engine\\ohos\\entry\\build.gradle</code> 文件中查看。</p><p>根据构建类型（Debug/Release）的不同以及是否带签名信息，开发者可根据需要自行组合配置，详情请参考 <a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides/build_hap-0000001053342418" target="_blank" rel="noreferrer">编译构建生成 HAP</a>。</p><p><img src="'+d+'" alt="build variants"></p></li><li><p>然后点击菜单栏中的 <strong>Build -&gt; Build Hap(s)/APP(s) -&gt; Build Hap(s)</strong> 项，即可执行编译流程，生成 <code>.hap</code> 文件。</p><p><img src="'+g+'" alt="build hap"></p><p>编译完成后可以在项目目录的 <code>native\\engine\\ohos\\build\\outputs\\hap</code> 目录下看到生成了带有签名信息的 <code>.hap</code> 文件。</p><p><img src="'+h+'" alt="output"></p><p>所有带/不带签名信息的 <code>.hap</code> 文件则是全部生成在项目目录的 <code>native\\engine\\ohos\\entry\\build\\outputs\\hap</code> 目录下。</p><p><img src="'+u+'" alt="output"></p></li><li><p>使用 USB 连接 HarmonyOS 系统的华为设备，然后点击菜单栏中的 <strong>Run -&gt; Run ‘entry’</strong>，或者点击上方的运行按钮，即可将 HarmonyOS 应用运行到设备上。详情可参考 <a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides/run_phone_tablat-0000001064774652" target="_blank" rel="noreferrer">运行 HarmonyOS 应用</a>。</p><p><img src="'+m+'" alt="run project"></p><blockquote><p><strong>注意</strong>：若运行到设备上时发现找不到图标，可检查一下项目目录下的 <code>native\\engine\\ohos\\entry\\src\\main\\config.json</code> 中是否有 <code>installationFree</code> 字段并为 <code>true</code>，将其改为 <code>false</code> 即可。</p></blockquote></li><li><p>若需要上传并发布 HarmonyOS 应用到华为应用市场，具体流程请参考官方文档 <a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/agc-harmonyapp-releaseharmonyapp" target="_blank" rel="noreferrer">发布 HarmonyOS 应用指南</a>。</p></li></ol><h3 id="签名文件" tabindex="-1">签名文件 <a class="header-anchor" href="#签名文件" aria-label="Permalink to &quot;签名文件&quot;">​</a></h3><p>HarmonyOS 应用是通过数字证书（<code>.cer</code> 文件）和 HarmonyAppProvision 文件（<code>.p7b</code> 文件）来保证应用的完整性。首先需要通过 <strong>DevEco Studio</strong> 生成密钥和证书请求文件，再通过证书请求文件在 AppGallery Connect 申请用于发布/调试的数字证书和 Profile 文件。</p><h4 id="生成密钥和证书请求文件" tabindex="-1">生成密钥和证书请求文件 <a class="header-anchor" href="#生成密钥和证书请求文件" aria-label="Permalink to &quot;生成密钥和证书请求文件&quot;">​</a></h4><p>在 <strong>DevEco Studio</strong> 中点击上方菜单栏的 <strong>Build -&gt; Generate Key and CSR</strong>，生成密钥（<code>.p12</code> 文件），然后再生成证书请求文件（<code>.csr</code>）。详情请参考 <a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides/publish_app-0000001053223745#ZH-CN_TOPIC_0000001154985553__section7209054153620" target="_blank" rel="noreferrer">生成密钥和证书请求文件</a>。</p><h4 id="生成并下载数字证书-cer-文件" tabindex="-1">生成并下载数字证书（<code>.cer</code> 文件） <a class="header-anchor" href="#生成并下载数字证书-cer-文件" aria-label="Permalink to &quot;生成并下载数字证书（`.cer` 文件）&quot;">​</a></h4><ul><li><p>进入 <a href="https://developer.huawei.com/consumer/cn/service/josp/agc/index.html" target="_blank" rel="noreferrer">AppGallery Connect 网站</a>，选择 <strong>用户与访问 -&gt; 证书管理</strong>。</p><p><img src="'+b+'" alt="provision profile"></p></li><li><p>点击右上角的 <strong>新增证书</strong> 按钮填写信息，其中：</p><ul><li><p><strong>证书类型</strong>：根据需要选择 <strong>发布证书</strong>/<strong>调试证书</strong>。</p></li><li><p><strong>证书请求文件</strong>：选择上一个步骤在 <strong>DevEco Studio</strong> 中生成的 <code>.csr</code> 文件。</p></li></ul></li><li><p>信息填写完成后点击 <strong>提交</strong>，便会生成一个发布/调试证书（<code>.cer</code> 文件），点击证书后面的 <strong>下载</strong> 按钮将其下载到本地。</p></li></ul><p>更多内容可参考 <a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/agc-harmonyapp-debugharmonyapp#h1-1598336089667" target="_blank" rel="noreferrer">申请数字证书</a>。</p><h4 id="生成并下载-harmonyappprovision-profile-文件-p7b-文件" tabindex="-1">生成并下载 HarmonyAppProvision Profile 文件（<code>.p7b</code> 文件） <a class="header-anchor" href="#生成并下载-harmonyappprovision-profile-文件-p7b-文件" aria-label="Permalink to &quot;生成并下载 HarmonyAppProvision Profile 文件（`.p7b` 文件）&quot;">​</a></h4><ul><li><p>进入 <a href="https://developer.huawei.com/consumer/cn/service/josp/agc/index.html" target="_blank" rel="noreferrer">AppGallery Connect 网站</a>，选择 <strong>我的项目</strong>，选择之前创建的 HarmonyOS 项目和应用。</p></li><li><p>点击左侧的 <strong>HarmonyOS 应用 -&gt; HAP Provision Profile 管理</strong> 项，然后点击页面右上方的 <strong>添加</strong> 按钮来创建 <code>.p7b</code> 文件。</p><p><img src="'+f+'" alt="provision profile"></p><ul><li><strong>类型</strong> 可根据需要选择 <strong>发布</strong>/<strong>调试</strong> 类型，但要与上一步骤中的证书类型保持一致。</li><li><strong>选择证书</strong>：选择上一步骤生成的 <code>.cer</code> 文件。</li><li><strong>选择设备</strong>：请参考 <a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/agc-harmonyapp-debugharmonyapp#h1-1598336280693" target="_blank" rel="noreferrer">注册调试设备</a>。当选择 <strong>发布</strong> 类型时不需要配置该项。</li></ul></li><li><p>设置完成后点击 <strong>提交</strong>，将生成的 <code>.p7b</code> 文件下载到本地。</p></li></ul><p>更多内容可参考 <a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/agc-harmonyapp-debugharmonyapp#h1-1598336409517" target="_blank" rel="noreferrer">申请 Profile 文件</a>。</p><h2 id="已知问题" tabindex="-1">已知问题 <a class="header-anchor" href="#已知问题" aria-label="Permalink to &quot;已知问题&quot;">​</a></h2><ul><li>WebView 不支持 <code>touch</code> 事件，触碰无响应。</li><li>VideoPlayer 播放远程视频不可拖动。</li><li>EditBox 全屏不可缩小，键盘收回后不重新布局。</li><li>重力/加速传感器延迟 500ms 左右，跟手性差。</li></ul><h2 id="相关参考链接" tabindex="-1">相关参考链接 <a class="header-anchor" href="#相关参考链接" aria-label="Permalink to &quot;相关参考链接&quot;">​</a></h2><ul><li><a href="https://developer.huawei.com/consumer/cn/service/josp/agc/index.html" target="_blank" rel="noreferrer">AppGallery Connect 网站</a></li><li><a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides/tools_overview-0000001053582387" target="_blank" rel="noreferrer">HUAWEI DevEco Studio 使用指南</a></li><li><a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides/ide_debug_device-0000001053822404" target="_blank" rel="noreferrer">HarmonyOS 应用调试</a></li><li><a href="https://developer.harmonyos.com/cn/docs/documentation/doc-guides/publish_app-0000001053223745" target="_blank" rel="noreferrer">HarmonyOS 应用发布</a></li></ul>',23),y=[v];function S(H,k,P,O,q,C){return e(),r("div",null,y)}const x=o(_,[["render",S]]);export{D as __pageData,x as default};
