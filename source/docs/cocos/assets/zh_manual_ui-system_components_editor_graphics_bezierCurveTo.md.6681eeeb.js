import{_ as s,v as t,b as e,R as a}from"./chunks/framework.5ffcbaff.js";const l="/docs/cocos/assets/bezierCurveTo.a1cafeb7.png",h=JSON.parse('{"title":"bezierCurveTo","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/ui-system/components/editor/graphics/bezierCurveTo.md","filePath":"zh/manual/ui-system/components/editor/graphics/bezierCurveTo.md"}'),n={name:"zh/manual/ui-system/components/editor/graphics/bezierCurveTo.md"},o=a(`<h1 id="beziercurveto" tabindex="-1">bezierCurveTo <a class="header-anchor" href="#beziercurveto" aria-label="Permalink to &quot;bezierCurveTo&quot;">​</a></h1><p><code>bezierCurveTo()</code> 方法通过使用表示三次贝塞尔曲线的指定控制点，向当前路径添加一个点。</p><p><strong>注意</strong>：三次贝塞尔曲线需要三个点。前两个点是用于三次贝塞尔计算中的控制点，第三个点是曲线的结束点。曲线的开始点是当前路径中最后一个点。</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">cp1x</td><td style="text-align:left;">第一个贝塞尔控制点的 x 坐标</td></tr><tr><td style="text-align:left;">cp1y</td><td style="text-align:left;">第一个贝塞尔控制点的 y 坐标</td></tr><tr><td style="text-align:left;">cp2x</td><td style="text-align:left;">第二个贝塞尔控制点的 x 坐标</td></tr><tr><td style="text-align:left;">cp2y</td><td style="text-align:left;">第二个贝塞尔控制点的 y 坐标</td></tr><tr><td style="text-align:left;">x</td><td style="text-align:left;">结束点的 x 坐标</td></tr><tr><td style="text-align:left;">y</td><td style="text-align:left;">结束点的 y 坐标</td></tr></tbody></table><h2 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-label="Permalink to &quot;实例&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ctx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getComponent</span><span style="color:#A6ACCD;">(Graphics)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">moveTo</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bezierCurveTo</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stroke</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p><a href="./bezierCurveTo.png"><img src="`+l+'"></a></p><hr><p>返回 <a href="./../graphics.html">Graphics 组件参考</a></p>',9),p=[o];function r(c,i,y,d,C,F){return t(),e("div",null,p)}const u=s(n,[["render",r]]);export{h as __pageData,u as default};
