import{_ as e,c as s,o as a,a4 as t}from"./chunks/framework.uQk9_EO2.js";const u=JSON.parse('{"title":"About Assets","description":"","frontmatter":{},"headers":[],"relativePath":"en/asset/index.md","filePath":"en/asset/index.md","lastUpdated":1712305443000}'),o={name:"en/asset/index.md"},r=t('<h1 id="about-assets" tabindex="-1">About Assets <a class="header-anchor" href="#about-assets" aria-label="Permalink to &quot;About Assets&quot;">​</a></h1><p>This section will introduce the overall workflow of the assets in <strong>Cocos Creator</strong> in detail, and explain the use of various types of assets and items that may require attention.</p><h2 id="assets-manager" tabindex="-1">Assets Manager <a class="header-anchor" href="#assets-manager" aria-label="Permalink to &quot;Assets Manager&quot;">​</a></h2><p>The <strong>Assets</strong> panel is an important tool for accessing and managing assets, developers are recommended to familiarize themselves with the use of the <strong>Assets</strong> panel for managing assets. Read the <a href="./../editor/assets/">Assets Manager</a> documentation for a detailed introduction.</p><h2 id="assets-workflow" tabindex="-1">Assets Workflow <a class="header-anchor" href="#assets-workflow" aria-label="Permalink to &quot;Assets Workflow&quot;">​</a></h2><p>The general Assets workflow including importing assets, synchronizing assets, locating assets, etc. can be found in the <a href="./asset-workflow">Assets Workflow</a> documentation.</p><h2 id="common-assets-type-workflow" tabindex="-1">Common Assets type workflow <a class="header-anchor" href="#common-assets-type-workflow" aria-label="Permalink to &quot;Common Assets type workflow&quot;">​</a></h2><p>Next we will introduce the main <strong>Asset</strong> types in <strong>Cocos Creator</strong>:</p><ul><li><a href="./scene">Scene Assets</a></li><li><a href="./image">Image Assets</a><ul><li><a href="./texture">Texture Map Assets</a></li><li><a href="./sprite-frame">Sprite Frame Assets</a></li><li><a href="./../concepts/scene/skybox#cubemap">Cube Map Assets</a></li><li><a href="./../ui-system/components/engine/trim">Auto Crop of Image Assets</a></li><li><a href="./atlas">Atlas Assets</a></li><li><a href="./render-texture">Render Texture</a></li></ul></li><li><a href="./prefab">Prefabricated Assets</a></li><li><a href="./script">Script Assets</a></li><li><a href="./font">Font Assets</a></li><li><a href="./audio">Audio Assets</a></li><li><a href="./material">Material Assets</a></li><li><a href="./model/mesh">Model Assets</a><ul><li><a href="./model/dcc-export-mesh">Importing models exported from DCC tools</a></li><li><a href="./model/glTF">glTF</a></li></ul></li><li><a href="./../animation/animation-clip">Animation Assets</a></li><li><a href="./spine">Spine Skeletal Animation Assets</a></li><li><a href="./dragonbones">DragonBones Skeletal Animation Assets</a></li><li><a href="./tiledmap">TiledMap Assets</a></li></ul><h2 id="asset-manager" tabindex="-1">Asset Manager <a class="header-anchor" href="#asset-manager" aria-label="Permalink to &quot;Asset Manager&quot;">​</a></h2><p>For the section about asset management at runtime, please refer to the <a href="./asset-manager">Asset Manager</a> documentation.</p>',11),i=[r];function n(l,h,d,m,f,c){return a(),s("div",null,i)}const A=e(o,[["render",n]]);export{u as __pageData,A as default};
