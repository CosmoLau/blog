import{_ as s,v as a,b as n,R as l}from"./chunks/framework.5ffcbaff.js";const o="/docs/cocos/assets/rim-preview.6344ceff.jpg",p="/docs/cocos/assets/rim-light-effect.4808ee68.png",e="/docs/cocos/assets/view-direction.92cb5bd5.png",t="/docs/cocos/assets/dot.111dc98d.jpg",c="/docs/cocos/assets/1-dot.1d0ed03f.jpg",r="/docs/cocos/assets/add-intensity.08169258.png",y="/docs/cocos/assets/intensity.d7f54ea3.png",F="/docs/cocos/assets/preview-instensity.7d1edd9b.jpg",D="/docs/cocos/assets/adjust-option.787675ce.png",i="/docs/cocos/assets/opt-overview.c63b2d57.jpg",C="/docs/cocos/assets/effect-by-color.e17648cb.jpg",A="/docs/cocos/assets/fresnel.eb326e1e.jpg",P=JSON.parse('{"title":"3D 着色器：RimLight","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/shader/write-effect-3d-rim-light.md","filePath":"zh/manual/shader/write-effect-3d-rim-light.md"}'),g={name:"zh/manual/shader/write-effect-3d-rim-light.md"},m=l('<h1 id="_3d-着色器-rimlight" tabindex="-1">3D 着色器：RimLight <a class="header-anchor" href="#_3d-着色器-rimlight" aria-label="Permalink to &quot;3D 着色器：RimLight&quot;">​</a></h1><p>本文将通过实现一个 RimLight 效果，来演示如何编写一个在 Cocos 可用于 3D 模型渲染的 Cocos Shader。</p><p><strong>RimLight</strong> 也称为“内发光”/“轮廓光”/“边缘光”（本文统一使用边缘光），是一种通过使物体的边缘发出高亮，让物体更加生动的技术。</p><p><strong>RimLight</strong> 是菲涅尔现象[^1]的一种应用，通过计算物体法线和视角方向的夹角的大小，调整发光的位置和颜色，是一种简单且高效的提升渲染效果的着色器。</p><p>在边缘光的计算中，视线和法线的夹角越大，则边缘光越明显。</p><p><img src="'+o+'" alt="rimlight preview"></p><h2 id="新建材质与着色器" tabindex="-1">新建材质与着色器 <a class="header-anchor" href="#新建材质与着色器" aria-label="Permalink to &quot;新建材质与着色器&quot;">​</a></h2><p>首先参考 <a href="./effect-inspector.html">着色器资源</a> 新建一个名为 <strong>rimlight.effect</strong> 的着色器，并创建一个使用该着色器的材质 <strong>rimlight.mtl</strong>。</p><p><img src="'+p+`" alt="create rimlight"></p><h2 id="cceffect" tabindex="-1">CCEffect <a class="header-anchor" href="#cceffect" aria-label="Permalink to &quot;CCEffect&quot;">​</a></h2><p>Cocos Shader 使用 YAML 作为解析器，因此 CCEffect 的写法需要遵守 YAML 的语法标准，对于这块的内容可以参考 <a href="./yaml-101.html">YAML 101</a>。</p><p>在本示例中，将暂时不考虑半透明效果，此时可以将 <code>transparent</code> 部分删掉。</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 删除如下的部分</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">transparent</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">passes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">vert</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">general-vs:vert</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># builtin header</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">frag</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rimlight-fs:frag</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">blendState</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">targets</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">blend</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">blendSrc</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src_alpha</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">blendDst</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">one_minus_src_alpha</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">blendSrcAlpha</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src_alpha</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">blendDstAlpha</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">one_minus_src_alpha</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">properties</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">*</span><span style="color:#A6ACCD;">props</span></span></code></pre></div><p>将 <code>opaque</code> 部分的 <code>frag</code> 函数修改为： <code>rimlight-fs:frag</code>，这是接下来要实现的边缘光的片元着色器部分。</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">opaque</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">passes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">vert</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">general-vs:vert</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># builtin header</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">frag</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rimlight-fs:frag</span></span></code></pre></div><p>为了方便调整边缘光的颜色，增加一个用于调整边缘光颜色的属性 <code>rimLightColor</code>，由于不考虑半透明，只使用该颜色的 RGB 通道：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">rimLightColor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;"># RGB 的默认值</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rimColor.rgb</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># 绑定到 Uniform rimColor 的 RGB 通道上</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">editor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">                 </span><span style="color:#676E95;font-style:italic;"># 在 material 的属性检查器内的样式定义</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">displayName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Rim Color</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 显示 Rim Color 作为显示名称 </span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">color</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 该字段的类型为颜色值</span></span></code></pre></div><p>此时的 CCEffect 代码：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C3E88D;">CCEffect %{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">techniques</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">opaque</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">passes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">vert</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">general-vs:vert</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># builtin header</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">frag</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rimlight-fs:frag</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">properties</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">&amp;</span><span style="color:#FFCB6B;">props</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">mainTexture</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">white</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">mainColor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">editor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">color</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;"># Rim Light 的颜色，只依赖 RGB 三个通道的分量</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">rimLightColor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rimColor.rgb</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">editor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">displayName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Rim Color</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">color</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}%</span></span></code></pre></div><blockquote><p><strong>注意</strong>：需要在片元着色器的 <code>uniform Constant</code> 内增加对应的 <code>rimColor</code> 字段：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">uniform</span><span style="color:#A6ACCD;"> Constant </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">        </span></span>
<span class="line"><span style="color:#F07178;">    vec4 mainColor</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">    vec4 rimColor</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div></blockquote><p>这个绑定意味着着色器的 <code>rimLightColor</code> 的 RGB 分量的值会通过引擎传输到 Uniform <code>rimColor</code> 的 <code>rgb</code> 三个分量里。</p><blockquote><p><strong>注意</strong>：引擎规定不能使用 vec3 类型的矢量来避免 <a href="./effect-syntax.html">implict padding</a>，因此在使用 3 维向量（vec3）时，可选择用 4 维向量（vec4）代替。不用担心，alpha 通道会被利用起来不被浪费。</p></blockquote><h2 id="顶点着色器" tabindex="-1">顶点着色器 <a class="header-anchor" href="#顶点着色器" aria-label="Permalink to &quot;顶点着色器&quot;">​</a></h2><p>通常引擎内置的顶点着色器可以满足大部分的开发需求，因此可以直接采用引擎内置的通用顶点着色器：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">vert</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">general-vs:vert</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># builtin header</span></span></code></pre></div><h2 id="片元着色器" tabindex="-1">片元着色器 <a class="header-anchor" href="#片元着色器" aria-label="Permalink to &quot;片元着色器&quot;">​</a></h2><p>修改通过 <strong>资源管理器</strong> 创建的着色器中的片元着色器代码，将 <code>CCProgram unlit-fs</code> 修改为 <code>CCProgram rimlight-fs</code>。</p><p>修改前：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">CCProgram unlit</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">fs </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#F07178;">  precision highp </span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  ...</span></span>
<span class="line"><span style="color:#89DDFF;">}%</span></span></code></pre></div><p>修改后：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">CCProgram rimlight</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">fs </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#F07178;">  precision highp </span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  ...</span></span>
<span class="line"><span style="color:#89DDFF;">}%</span></span></code></pre></div><p>在光照计算中，通常都需要计算法线和视线的夹角，而视线的计算和 <strong>摄像机位置</strong> 紧密相关。</p><p><img src="`+e+`" alt="view-direction"></p><p>如上图所示，如果要计算视线，需要通过 <strong>摄像机位置</strong> 减去 <strong>物体的位置</strong>。在着色器内，想要获取 <strong>摄像机位置</strong>，需要使用 <a href="./uniform.html">全局 Uniform</a> 中的 <code>cc_cameraPos</code>，该变量存放于 <code>cc-global</code> 着色器片段内。通过 <a href="./effect-chunk-index.html"><code>include</code></a> 关键字，可以方便的引入整个着色器片段。</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">builtin/uniforms/cc-global</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 包含 Cocos Creator 内置全局变量</span></span></code></pre></div><p>着色器代码：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">CCProgram rimlight</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">fs </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#F07178;">  precision highp </span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">builtin/uniforms/cc-global</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">// 包含 Cocos Creator 内置全局变量  </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">legacy/output</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">legacy/fog-fs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>视线方向的计算是通过当前相机的位置（<code>cc_cameraPos</code>）减去片元着色器内由顶点着色器传入的位置信息 <code>in vec3 v_position</code>：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">vec3</span><span style="color:#A6ACCD;"> viewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cc_cameraPos.xyz </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> v_position</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 计算视线的方向</span></span></code></pre></div><p>我们不关心视线向量的长度，因此得到 <code>viewDirection</code> 后，通过 <code>normalize</code> 方法进行归一化处理：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">vec3</span><span style="color:#A6ACCD;"> normalizedViewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">viewDirection</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 对视线方向进行归一化</span></span></code></pre></div><p><code>cc_cameraPos</code> 的 xyz 分量表示了相机的位置。</p><p>此时的片元着色器代码：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">vec4</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">frag</span><span style="color:#89DDFF;">(){</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    vec3 viewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cc_cameraPos</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xyz</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 计算视线的方向</span></span>
<span class="line"><span style="color:#F07178;">    vec3 normalizedViewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">viewDirection</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 对视线方向进行归一化</span></span>
<span class="line"><span style="color:#F07178;">    vec4 col </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> mainColor </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">texture</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mainTexture</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_uv</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 计算最终的颜色</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">CC_APPLY_FOG</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CCFragOutput</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>接下来需要计算法线和视角的夹角，由于使用的是内置标准顶点着色器 <code>general-vs:vert</code>，法线已由顶点着色器传入到片元着色器，但是没有被声明，若要在片元着色器里面使用，只需在代码中增加：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">vec3</span><span style="color:#A6ACCD;"> v_normal</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>此时的片元着色器：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">CCProgram rimlight</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">fs </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#F07178;">  precision highp </span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">builtin/uniforms/cc-global</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">legacy/output</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">legacy/fog-fs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  in vec2 v_uv</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  in vec3 v_normal</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  in vec3 v_position</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  ....</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>法线由于管线的插值，不再处于归一化状态，因此需要对法线进行归一化处理，使用 <code>normalize</code> 函数进行归一化：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">vec3</span><span style="color:#A6ACCD;"> normal </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">v_normal</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 重新归一化法线。</span></span></code></pre></div><p>此时的 <code>frag</code> 函数：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">vec4</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">frag</span><span style="color:#89DDFF;">(){</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    vec3 normal </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">v_normal</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 重新归一化法线。</span></span>
<span class="line"><span style="color:#F07178;">    vec3 viewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cc_cameraPos</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xyz</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 计算视线的方向</span></span>
<span class="line"><span style="color:#F07178;">    vec3 normalizedViewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">viewDirection</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 对视线方向进行归一化</span></span>
<span class="line"><span style="color:#F07178;">    vec4 col </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> mainColor </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">texture</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mainTexture</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_uv</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 计算最终的颜色</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">CC_APPLY_FOG</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CCFragOutput</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这时可计算法线和视角的夹角，在线性代数里面，点积表示为两个向量的模乘以夹角的余弦值：</p><div class="language-math"><button title="Copy Code" class="copy"></button><span class="lang">math</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">a·b = |a|*|b|*cos(θ)</span></span></code></pre></div><p>通过简单的交换律可得出：</p><div class="language-math"><button title="Copy Code" class="copy"></button><span class="lang">math</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cos(θ) = a·b /(|a|*|b|)</span></span></code></pre></div><p>由于法线和视角方向都已经归一化，因此他们的模为 1，点积的结果则表示为法线和视角的 cos 值。</p><div class="language-math"><button title="Copy Code" class="copy"></button><span class="lang">math</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cos(θ) = a·b</span></span></code></pre></div><p>将其转化为代码：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">normal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> normalizedViewDirection</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>注意点积的计算可能会出现小于 0 的情况，而颜色是正值，通过 <code>max</code> 函数将其约束在 [0, 1] 这个范围内：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">normal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> normalizedViewDirection</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>此时可根据点积的结果来调整 RimLight 的颜色：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">float</span><span style="color:#A6ACCD;"> rimPower </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">normal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> normalizedViewDirection</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">// 计算 RimLight 的亮度</span></span>
<span class="line"><span style="color:#C792EA;">vec4</span><span style="color:#A6ACCD;"> col </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mainColor </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">texture</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">mainTexture</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> v_uv</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 计算最终的颜色</span></span>
<span class="line"><span style="color:#A6ACCD;">col.rgb </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> rimPower </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> rimColor.rgb</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 增加边缘光</span></span></code></pre></div><p>着色器代码如下：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">vec4</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">frag</span><span style="color:#89DDFF;">(){</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    vec3 normal </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">v_normal</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">// 重新归一化法线。</span></span>
<span class="line"><span style="color:#F07178;">    vec3 viewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cc_cameraPos</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xyz</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 计算视线的方向</span></span>
<span class="line"><span style="color:#F07178;">    vec3 normalizedViewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">viewDirection</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 对视线方向进行归一化</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> rimPower </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">normal</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> normalizedViewDirection</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 计算 RimLight 的亮度</span></span>
<span class="line"><span style="color:#F07178;">    vec4 col </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> mainColor </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">texture</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mainTexture</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_uv</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 计算最终的颜色</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">col</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rgb</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> rimPower </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rimColor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rgb</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 增加边缘光</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">CC_APPLY_FOG</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CCFragOutput</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>可观察到物体中心比边缘更亮，这是因为边缘顶点的法线和视角的夹角更大，得到的余弦值更小。</p><blockquote><p><strong>注意</strong>：此步骤若无法观察到效果，可调整 <code>MainColor</code> 使其不为白色。因为默认的 <code>MainColor</code> 颜色是白色，遮盖了边缘光的颜色。</p></blockquote><p><img src="`+t+`" alt="dot result"></p><p>要调整这个结果，只需用 1 减去点积的结果即可，删除下面的代码：</p><p><s><code>float rimPower = max(dot(normal, normalizedViewDirection), 0.0);</code></s></p><p>并增加：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">float</span><span style="color:#A6ACCD;"> rimPower </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">normal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> normalizedViewDirection</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>片元着色器代码：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">vec4</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">frag</span><span style="color:#89DDFF;">(){</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    vec3 normal </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">v_normal</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 重新归一化法线。</span></span>
<span class="line"><span style="color:#F07178;">    vec3 viewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cc_cameraPos</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xyz</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 计算视线的方向</span></span>
<span class="line"><span style="color:#F07178;">    vec3 normalizedViewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">viewDirection</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 对视线方向进行归一化</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> rimPower </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">normal</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> normalizedViewDirection</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    vec4 col </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> mainColor </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">texture</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mainTexture</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_uv</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 计算最终的颜色</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">col</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rgb</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> rimPower </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rimColor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rgb</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 增加边缘光</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">CC_APPLY_FOG</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CCFragOutput</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><img src="`+c+`" alt="one minus dot result"></p><p>虽然可观察到边缘光效果，但是光照太强，并且不方便调整，可在着色器的 CCEffect 段内增加一个可调整的参数 rimIntensity。由于之前 rimColor 的 alpha 分量没有被使用到，因此借用该分量进行绑定可节约额外的 Uniform。</p><blockquote><p><strong>注意</strong>：写着色器时，需要避免 implict padding，关于这点可以参考: <a href="./effect-syntax.html">UBO 内存布局</a>，这里使用未被使用的 alpha 通道来存储边缘光的强度可以最大限度的利用 <code>rimColor</code> 的字段。</p></blockquote><p>在 CCEffect 内增加如下代码：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">rimInstensity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 默认值为 1 </span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rimColor.a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 绑定到 rimColor 的 alpha 通道</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">editor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">           </span><span style="color:#676E95;font-style:italic;"># 属性检查器的样式</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">slide</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># 使用滑动条来作为显示样式</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">range</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;"># 滑动条的值范围</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#F07178;">step</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 每次点击调整按钮时，数值的变化值</span></span></code></pre></div><p>此时的 CCEffect 代码：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C3E88D;">CCEffect %{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">techniques</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">opaque</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">passes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">vert</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">general-vs:vert</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># builtin header</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">frag</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rimlight-fs:frag</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">properties</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">&amp;</span><span style="color:#FFCB6B;">props</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">mainTexture</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">white</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">mainColor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">editor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">color</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;"># Rim Light 的颜色，只依赖 rgb 三个通道的分量</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">rimLightColor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rimColor.rgb</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">editor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">displayName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Rim Color</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">color</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;"># rimLightColor 的 alpha 通道没有被用到，复用该通道用来描述 rimLightColor 的强度。</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">rimInstensity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rimColor.a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">editor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">slide</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">range</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">step</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">}}</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">}%</span></span></code></pre></div><p>增加此属性后，材质 <strong>属性检查器</strong> 上会增加可调整的 RimIntensity：</p><p><img src="`+r+`" alt="intensity"></p><p>通过 <code>pow</code> 函数调整边缘光，使其范围不是线性变化，可体现更好的效果，删除如下代码：</p><p><s><code>col.rgb += rimPower * rimColor.rgb;</code></s></p><p>新增下列代码：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">float</span><span style="color:#A6ACCD;"> rimInstensity </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> rimColor.a</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // alpha 通道为亮度的指数</span></span>
<span class="line"><span style="color:#A6ACCD;">col.rgb </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pow</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">rimPower</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> rimInstensity</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> rimColor.rgb</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // 使用 ‘pow’ 函数对点积进行指数级修改</span></span></code></pre></div><p><code>pow</code> 是 GLSL 的内置函数，其形式为：<code>pow(x, p)</code>，代表以 <code>x</code> 为底数，<code>p</code> 为指数的指数函数。</p><p>最终片元着色器代码：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">vec4</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">frag</span><span style="color:#89DDFF;">(){</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    vec3 normal </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">v_normal</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 重新归一化法线。</span></span>
<span class="line"><span style="color:#F07178;">    vec3 viewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cc_cameraPos</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xyz</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 计算视线的方向</span></span>
<span class="line"><span style="color:#F07178;">    vec3 normalizedViewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">viewDirection</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 对视线方向进行归一化</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> rimPower </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">normal</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> normalizedViewDirection</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">// 计算 RimLight 的亮度</span></span>
<span class="line"><span style="color:#F07178;">    vec4 col </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> mainColor </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">texture</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mainTexture</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_uv</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 计算最终的颜色</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> rimInstensity </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rimColor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // alpha 通道为亮度的指数</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">col</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rgb</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">pow</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">rimPower</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> rimInstensity</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rimColor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rgb</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 增加边缘光</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">CC_APPLY_FOG</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CCFragOutput</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>之后将材质 <strong>属性检查器</strong> 上的 <strong>rimIntensity</strong> 的值修改为 3：</p><p><img src="`+y+'" alt="设置 intensity"></p><p>此时可观察到边缘光照更自然：</p><p><img src="'+F+'" alt="增加亮度调整后"></p><p>通过 <strong>Rim Color</strong> 和 <strong>rimIntensity</strong> 可方便的调整边缘光的颜色和强度：</p><p><img src="'+D+'" alt="调整颜色值"></p><p><img src="'+i+`" alt="调整颜色结果"></p><p>完整的着色器代码：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">CCEffect </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#F07178;">  techniques:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> name: opaque</span></span>
<span class="line"><span style="color:#F07178;">    passes:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> vert: legacy</span><span style="color:#89DDFF;">/</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">-</span><span style="color:#F07178;">functions</span><span style="color:#89DDFF;">/</span><span style="color:#F07178;">general</span><span style="color:#89DDFF;">-</span><span style="color:#F07178;">vs:vert # builtin header</span></span>
<span class="line"><span style="color:#F07178;">      frag: rimlight</span><span style="color:#89DDFF;">-</span><span style="color:#F07178;">fs:frag</span></span>
<span class="line"><span style="color:#F07178;">      properties: </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">props</span></span>
<span class="line"><span style="color:#F07178;">        mainTexture:    </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> value: white </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">        mainColor:      </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> value: </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">],</span><span style="color:#F07178;"> editor: </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> type: color </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">        # Rim Light 的颜色，只依赖 rgb 三个通道的分量</span></span>
<span class="line"><span style="color:#F07178;">        rimLightColor:  </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> value: </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">],</span><span style="color:#F07178;"> target: </span><span style="color:#A6ACCD;">rimColor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rgb</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> editor: </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> displayName: Rim Color</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> type: color </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        # rimLightColor 的 alpha 通道没有被用到，复用该通道用来描述 rimLightColor 的强度。</span></span>
<span class="line"><span style="color:#F07178;">        rimInstensity:  </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> value: </span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> target: </span><span style="color:#A6ACCD;">rimColor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> editor: </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">slide: </span><span style="color:#89DDFF;">true,</span><span style="color:#F07178;"> range: </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">],</span><span style="color:#F07178;"> step: </span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">}}</span><span style="color:#F07178;">   </span></span>
<span class="line"><span style="color:#89DDFF;">}%</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">CCProgram rimlight</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">fs </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#F07178;">  precision highp </span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">builtin/uniforms/cc-global</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">legacy/output</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">legacy/fog-fs</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  in vec2 v_uv</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  in vec3 v_normal</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  in vec3 v_position</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  uniform sampler2D mainTexture</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  uniform Constant </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    vec4 mainColor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    vec4 rimColor</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">};</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  vec4 </span><span style="color:#82AAFF;">frag</span><span style="color:#89DDFF;">(){</span><span style="color:#F07178;">     </span></span>
<span class="line"><span style="color:#F07178;">    vec3 normal </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">v_normal</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 重新归一化法线。</span></span>
<span class="line"><span style="color:#F07178;">    vec3 viewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cc_cameraPos</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">xyz</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 计算视线的方向</span></span>
<span class="line"><span style="color:#F07178;">    vec3 normalizedViewDirection </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">normalize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">viewDirection</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // 对视线方向进行归一化</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> rimPower </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">normal</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> normalizedViewDirection</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">// 计算 RimLight 的亮度</span></span>
<span class="line"><span style="color:#F07178;">    vec4 col </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> mainColor </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">texture</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">mainTexture</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_uv</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 计算最终的颜色</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> rimInstensity </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rimColor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // alpha 通道为亮度的指数</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">col</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rgb</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">pow</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">rimPower</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> rimInstensity</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">rimColor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rgb</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 增加边缘光</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">CC_APPLY_FOG</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v_position</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CCFragOutput</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}%</span></span></code></pre></div><p>若要让边缘光的颜色受纹理颜色的影响，可将下列代码：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">col.rgb </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pow</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">rimPower</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> rimInstensity</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> rimColor.rgb</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 增加边缘光</span></span></code></pre></div><p>改为：</p><div class="language-glsl"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">col.rgb </span><span style="color:#89DDFF;">*=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pow</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">rimPower</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> rimInstensity</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> rimColor.rgb</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 边缘光受物体着色的影响</span></span></code></pre></div><p>此时的边缘光则会受到最终纹理和顶点颜色的影响：</p><p><img src="`+C+'" alt="color"></p><p>[^1]: 菲涅尔现象：奥古斯丁·让·菲涅耳是 18 世纪法国著名的物理学家，他提出的菲涅尔方程很好的解释了光线的反射和折射的关系。如果去观察阳光照射下的平静水面可以发现，距离观察点越远的水面反射越强烈，这种光线强度随着观察角度变化而变化的现象，被称为菲涅尔现象。<img src="'+A+'" alt="fresnel"></p>',107),d=[m];function u(h,f,v,E,b,_){return a(),n("div",null,d)}const x=s(g,[["render",u]]);export{P as __pageData,x as default};
