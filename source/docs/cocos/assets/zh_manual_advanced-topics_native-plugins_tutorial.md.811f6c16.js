import{_ as s,v as n,b as a,R as l}from"./chunks/framework.5ffcbaff.js";const o="/docs/cocos/assets/1_create_empty_project.cf2640db.png",p="/docs/cocos/assets/1_2_save_emtpy_scene.536b8c9e.png",e="/docs/cocos/assets/1_3_create_windows_build.b6c221dd.png",c="/docs/cocos/assets/2_1_vs_project.d6597c5b.png",t="/docs/cocos/assets/2_1_link_error.a120a747.png",r="/docs/cocos/assets/2_3_empty_window.920e2741.png",D="/docs/cocos/assets/2_3_debug_url.452337f8.png",y="/docs/cocos/assets/2_5_devtool.917bd598.png",C="/docs/cocos/assets/3_1_android_build.f8dcc842.png",b=JSON.parse('{"title":"原生插件创建范例","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/advanced-topics/native-plugins/tutorial.md","filePath":"zh/manual/advanced-topics/native-plugins/tutorial.md"}'),i={name:"zh/manual/advanced-topics/native-plugins/tutorial.md"},F=l('<h1 id="原生插件创建范例" tabindex="-1">原生插件创建范例 <a class="header-anchor" href="#原生插件创建范例" aria-label="Permalink to &quot;原生插件创建范例&quot;">​</a></h1><p>如果想在原生项目中使用第三方原生库，则可以按照本文的步骤进行。</p><p>本文需要对原生工程的编译生成有一定了解，开发者可以通过 <a href="https://cmake.org/" target="_blank" rel="noreferrer">CMake 官网</a> 了解。 我们也准备了范例工程 <a href="https://github.com/PatriceJiang/ccplugin_tutorial" target="_blank" rel="noreferrer">GitHub</a> 以供参考。</p><h2 id="创建原生插件" tabindex="-1">创建原生插件 <a class="header-anchor" href="#创建原生插件" aria-label="Permalink to &quot;创建原生插件&quot;">​</a></h2><h3 id="插件开发工程-windows-配置" tabindex="-1">插件开发工程 Windows 配置 <a class="header-anchor" href="#插件开发工程-windows-配置" aria-label="Permalink to &quot;插件开发工程 Windows 配置&quot;">​</a></h3><p>示例中，我们将引入 hello_cocos.lib 作为 windows 平台上的插件，引入引擎并使其支持在 TS/JS 中使用。其他平台将使用 hello_cocos.a 为例，如果要使用其他库，请提前编译到对应平台。</p><ul><li><p>使用 Cocos Creator 3.6+ 创建一个工程</p><p>启动 CocosCreator，在指定目录执行 <code>创建空工程</code>。</p><p><img src="'+o+'" alt="create"></p></li><li><p>创建并保存一个空的场景</p><p><img src="'+p+'" alt="save scene"></p></li><li><p>通过 <strong>构建发布</strong> 面板导出原生工程并构建，生成 <code>native/</code> 目录</p><p>这里在 Windows 上新建构建任务。</p><p><img src="'+e+`" alt="build windows"></p><p>执行 <strong>构建</strong>，同时生成 <code>native/</code> 目录。</p><p>通过控制台（Windows CMD 或 PowerShell 等类似软件）查看目录的内容：</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tree</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#FFCB6B;">native/</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">engine</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">common</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">win64</span></span></code></pre></div></li><li><p>在 <code>native/</code> 中创建插件存放的目录</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos</span></span></code></pre></div></li></ul><h3 id="添加原生插件对-windows-的支持" tabindex="-1">添加原生插件对 Windows 的支持 <a class="header-anchor" href="#添加原生插件对-windows-的支持" aria-label="Permalink to &quot;添加原生插件对 Windows 的支持&quot;">​</a></h3><ul><li><p>添加 Windows 平台相关的子目录：</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/windows/</span></span></code></pre></div></li><li><p>把预先编译好的依赖库 <code>hello_cocos.lib</code> 和头文件拷贝到对应的目录：</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tree</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/</span></span>
<span class="line"><span style="color:#FFCB6B;">native/plugins/</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">include</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">│  </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos.h</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">windows</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lib</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos.lib</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocosd.lib</span></span></code></pre></div></li><li><p>添加文件 <code>hello_cocos_glue.cpp</code>，<code>CMakeLists.txt</code> 和 <code>hello_cocos_glue-config.cmake</code>：</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/src</span></span>
<span class="line"><span style="color:#FFCB6B;">touch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/src/hello_cocos_glue.cpp</span></span>
<span class="line"><span style="color:#FFCB6B;">touch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/src/CMakeLists.txt</span></span>
<span class="line"><span style="color:#FFCB6B;">touch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/windows/hello_cocos_glue-config.cmake</span></span></code></pre></div><p>当前插件目录的内容：</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tree</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/</span></span>
<span class="line"><span style="color:#FFCB6B;">native/plugins/hello_cocos/</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">include</span></span>
<span class="line"><span style="color:#FFCB6B;">│  </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos.h</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src</span></span>
<span class="line"><span style="color:#FFCB6B;">│  </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">CMakeLists.txt</span></span>
<span class="line"><span style="color:#FFCB6B;">│  </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos_glue.cpp</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">windows</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lib</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos.lib</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocosd.lib</span></span></code></pre></div></li><li><p>编辑 <code>hello_cocos_glue-config.cmake</code> 中添加声明 <code>hello_cocos.lib</code> 和导入的内容：</p><div class="language-cmake"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;">(_hello_cocos_GLUE_DIR \${CMAKE_CURRENT_LIST_DIR})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">add_library</span><span style="color:#A6ACCD;">(hello_cocos STATIC IMPORTED GLOBAL)</span></span>
<span class="line"><span style="color:#89DDFF;">set_target_properties</span><span style="color:#A6ACCD;">(hello_cocos PROPERTIES</span></span>
<span class="line"><span style="color:#A6ACCD;">    IMPORTED_LOCATION \${_hello_cocos_GLUE_DIR}/lib/hello_cocos.lib</span></span>
<span class="line"><span style="color:#A6ACCD;">    IMPORTED_LOCATION_DEBUG \${_hello_cocos_GLUE_DIR}/lib/hello_cocosd.lib</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">include</span><span style="color:#A6ACCD;">(\${_hello_cocos_GLUE_DIR}/../src/CMakeLists.txt)</span></span></code></pre></div></li><li><p>编辑 <code>native/plugins/hello_cocos/src/CMakeLists.txt</code>，并添加如下内容：</p><div class="language-cmake"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;">(_hello_cocos_GLUE_SRC_DIR \${CMAKE_CURRENT_LIST_DIR})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">add_library</span><span style="color:#A6ACCD;">(hello_cocos_glue \${_hello_cocos_GLUE_SRC_DIR}/hello_cocos_glue.cpp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">target_link_libraries</span><span style="color:#A6ACCD;">(hello_cocos_glue</span></span>
<span class="line"><span style="color:#A6ACCD;">    hello_cocos</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${ENGINE_NAME} </span><span style="color:#676E95;font-style:italic;"># cocos_engine</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">target_include_directories</span><span style="color:#A6ACCD;">(hello_cocos_glue PRIVATE</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${_hello_cocos_GLUE_SRC_DIR}/../include</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div></li><li><p>在目录 <code>native/plugins/hello_cocos/</code> 中创建配置文件 <code>cc_plugin.json</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello-cocos-demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">author</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocosdemo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">engine-version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&gt;=3.6.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">modules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello_cocos_glue</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">platforms</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windows</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>现在原生插件所需的文件已经创建，但还不能编译。文件 <code>hello_cocos_glue.cpp</code> 需要注册插件的初始化函数。</p><p>再次执行 <strong>构建</strong> 触发 Visual Studio 工程的更新。</p></li><li><p>使用 Visual Studio 打开目录 <code>build/windows/proj/</code> 中的 sln 文件</p><ul><li><p>自动生成一个 <code>plugin_registry</code> 目标，用于初始化所有启用的插件：</p><p><img src="`+c+'" alt="Solution Explorer"></p></li><li><p>直接运行目标会导致类似的报错：</p><p><img src="'+t+`" alt="link error"></p></li></ul></li><li><p>编辑 <code>hello_cocos_glue.cpp</code></p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello_cocos.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/sebind/sebind.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugins/bus/EventBus.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">plugins/Plugins.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// export c++ methods to JS</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">register_demo</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;font-style:italic;">ns</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">sebind</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">class_</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Demo</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">klass</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">klass</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">constructor</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">    .</span><span style="color:#82AAFF;">function</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">Demo</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">hello</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">klass</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">install</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ns</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add_demo_class</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">cc</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">plugin</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> Listener </span><span style="color:#82AAFF;">listener</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">BusType</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">SCRIPT_ENGINE</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">listener</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">receive</span><span style="color:#89DDFF;">([](</span><span style="color:#FFCB6B;">ScriptEngineEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ScriptEngineEvent</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">POST_INIT</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ScriptEngine</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getInstance</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">addRegisterCallback</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">register_demo</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* Regist a new cc plugin entry function</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* first  param: should match the name in cc_plugin.json</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* second param: callback when engine initialized</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#82AAFF;">CC_PLUGIN_ENTRY</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">hello_cocos_glue</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> add_demo_class</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>再次编译后不在报错，此时可正确的编译和运行工程。</p></li><li><p>运行目标工程：</p><p><img src="`+r+'" alt="empty window"></p></li><li><p>为了验证我们的原生插件是否已经加载，我们需要连接 devtools：</p><p>从 <code>Output</code> 面板，获取调试连接。</p><p><img src="'+D+'" alt="debug url"></p><p>打开浏览器，输入上图中的调试链接地址，在控制台（Console）中键入下面的代码：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Demo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hello</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cocos</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p><img src="'+y+`" alt="devtools"></p><p>根据输出可以确认，我们的接口已经成功通过原生插件导出。</p></li></ul><h3 id="添加原生插件对-android-的支持" tabindex="-1">添加原生插件对 Android 的支持 <a class="header-anchor" href="#添加原生插件对-android-的支持" aria-label="Permalink to &quot;添加原生插件对 Android 的支持&quot;">​</a></h3><ul><li><p>添加 Android 的构建任务</p></li><li><p>创建 Android 相关的原生插件目录</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/android</span></span></code></pre></div></li><li><p>将预先编译好的依赖库和头文件拷贝到对应的目录，创建 <code>hello_cocos_glue-config.cmake</code></p><p>Android 目录的状态：</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tree</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/android/</span></span>
<span class="line"><span style="color:#FFCB6B;">native/plugins/hello_cocos/android/</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">arm64-v8a</span></span>
<span class="line"><span style="color:#FFCB6B;">│  </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lib</span></span>
<span class="line"><span style="color:#FFCB6B;">│  </span><span style="color:#A6ACCD;">     </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">libhello_cocos.a</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">armeabi-v7a</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lib</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">libhello_cocos.a</span></span></code></pre></div></li><li><p>编辑 <code>hello_cocos_glue-config.cmake</code></p><div class="language-cmake"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;">(_hello_cocos_GLUE_DIR \${CMAKE_CURRENT_LIST_DIR})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">add_library</span><span style="color:#A6ACCD;">(hello_cocos STATIC IMPORTED GLOBAL)</span></span>
<span class="line"><span style="color:#89DDFF;">set_target_properties</span><span style="color:#A6ACCD;">(hello_cocos PROPERTIES</span></span>
<span class="line"><span style="color:#A6ACCD;">    IMPORTED_LOCATION \${_hello_cocos_GLUE_DIR}/\${ANDROID_ABI}/lib/libhello_cocos.a</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">include</span><span style="color:#A6ACCD;">(\${_hello_cocos_GLUE_DIR}/../src/CMakeLists.txt)</span></span></code></pre></div></li><li><p>更新 <code>cc_plugin.json</code>，添加 <code>android</code> 到 <code>platforms</code> 字段</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello-cocos-demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">author</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocosdemo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">engine-version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&gt;=3.6.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">modules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello_cocos_glue</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">platforms</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windows</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">android</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li><li><p>新增 Android 的构建任务</p><p><img src="`+C+`" alt="Android build"></p></li></ul><p>构建后可使用 Android Studio 打开工程，并使用 devtool 调试验证。</p><h3 id="添加原生插件对-ios-的支持" tabindex="-1">添加原生插件对 iOS 的支持 <a class="header-anchor" href="#添加原生插件对-ios-的支持" aria-label="Permalink to &quot;添加原生插件对 iOS 的支持&quot;">​</a></h3><ul><li><p>添加 iOS 的构建任务</p></li><li><p>创建 iOS 相关的原生插件目录</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mkdir -p native/plugins/hello_cocos/ios/lib</span></span></code></pre></div></li><li><p>将预先编译好的依赖库和头文件拷贝到对应的目录，创建 <code>hello_cocos_glue-config.cmake</code>，如根据下列示例编辑：</p><div class="language-cmake"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;">(_hello_cocos_GLUE_DIR \${CMAKE_CURRENT_LIST_DIR})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">add_library</span><span style="color:#A6ACCD;">(hello_cocos STATIC IMPORTED GLOBAL)</span></span>
<span class="line"><span style="color:#89DDFF;">set_target_properties</span><span style="color:#A6ACCD;">(hello_cocos PROPERTIES</span></span>
<span class="line"><span style="color:#A6ACCD;">    IMPORTED_LOCATION \${_hello_cocos_GLUE_DIR}/lib/libhello_cocos.a</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">include</span><span style="color:#A6ACCD;">(\${_hello_cocos_GLUE_DIR}/../src/CMakeLists.txt)</span></span></code></pre></div></li></ul><h3 id="添加原生插件对-macos-的支持" tabindex="-1">添加原生插件对 MacOS 的支持 <a class="header-anchor" href="#添加原生插件对-macos-的支持" aria-label="Permalink to &quot;添加原生插件对 MacOS 的支持&quot;">​</a></h3><ul><li><p>添加 MacOS 的构建任务</p></li><li><p>创建 MacOS 相关的原生插件目录</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/mac/lib</span></span></code></pre></div></li><li><p>将预先编译好的依赖库和头文件拷贝到对应的目录，创建<code>hello_cocos_glue-config.cmake</code></p><div class="language-cmake"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">set</span><span style="color:#A6ACCD;">(_hello_cocos_GLUE_DIR \${CMAKE_CURRENT_LIST_DIR})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">add_library</span><span style="color:#A6ACCD;">(hello_cocos STATIC IMPORTED GLOBAL)</span></span>
<span class="line"><span style="color:#89DDFF;">set_target_properties</span><span style="color:#A6ACCD;">(hello_cocos PROPERTIES</span></span>
<span class="line"><span style="color:#A6ACCD;">    IMPORTED_LOCATION \${_hello_cocos_GLUE_DIR}/lib/libhello_cocos.a</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">include</span><span style="color:#A6ACCD;">(\${_hello_cocos_GLUE_DIR}/../src/CMakeLists.txt)</span></span></code></pre></div></li><li><p>更新 <code>cc_plugin.json</code>，添加 <code>iOS</code> 和 <code>mac</code> 到 <code>platforms</code> 字段</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello-cocos-demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">author</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocosdemo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">engine-version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&gt;=3.6.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">modules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello_cocos_glue</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">platforms</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">windows</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">android</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">iOS</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mac</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ul><p>至此，一个支持 Android、Windows、MacOS 以及 iOS 的原生插件就开发完成了。</p><p>原生插件目录的最终内容如下：</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tree</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">native/plugins/hello_cocos/</span></span>
<span class="line"><span style="color:#FFCB6B;">native/plugins/hello_cocos</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cc_plugin.json</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">include</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos.h</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">src</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">CMakeLists.txt</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos_glue.cpp</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">android</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">arm64-v8a</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lib</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">libhello_cocos.a</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">armeabi-v7a</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lib</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">           </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">libhello_cocos.a</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ios</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lib</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">libhello_cocos.a</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mac</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lib</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">       </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">libhello_cocos.a</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">windows</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lib</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocos.lib</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_cocosd.lib</span></span></code></pre></div><p>下一步即可通过 <strong>构建发布</strong> 面板进行发布。</p><h2 id="使用编辑器扩展机制发布" tabindex="-1">使用编辑器扩展机制发布 <a class="header-anchor" href="#使用编辑器扩展机制发布" aria-label="Permalink to &quot;使用编辑器扩展机制发布&quot;">​</a></h2><p>根据 <a href="./../../editor/extension/readme.html">扩展编辑器</a> 创建编辑器扩展，在 <a href="./../..//editor/extension/store/upload-store.html#packaging-the-extension">打包扩展</a> 前把目录 <code>native/plugins/hello_cocos</code> 一并打包到扩展中，再发布。开发者在下载扩展后，原生插件就会启用。</p><p>关于升级：目前编辑器扩展系统不支持升级检测，用户需要到 Cocos 商城手动更新。</p>`,23),A=[F];function d(u,_,h,g,E,B){return n(),a("div",null,A)}const q=s(i,[["render",d]]);export{b as __pageData,q as default};
