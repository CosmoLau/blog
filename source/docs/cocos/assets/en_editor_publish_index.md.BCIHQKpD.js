import{_ as e,c as a,o as i,a4 as o}from"./chunks/framework.uQk9_EO2.js";const f=JSON.parse('{"title":"Publish to Multiple Platforms","description":"","frontmatter":{},"headers":[],"relativePath":"en/editor/publish/index.md","filePath":"en/editor/publish/index.md","lastUpdated":1712305443000}'),l={name:"en/editor/publish/index.md"},t=o('<h1 id="publish-to-multiple-platforms" tabindex="-1">Publish to Multiple Platforms <a class="header-anchor" href="#publish-to-multiple-platforms" aria-label="Permalink to &quot;Publish to Multiple Platforms&quot;">​</a></h1><p>Thanks to the Cocos Creator&#39;s dual-core engine architecture (the C++ core is for native platforms and the TS core is for web and mini-game platform), projects created with Cocos Creator can run smoothly on native, web, and mini-game platforms. This truly achieves the goal of developing once, run everywhere.</p><h2 id="supported-platforms" tabindex="-1">Supported Platforms <a class="header-anchor" href="#supported-platforms" aria-label="Permalink to &quot;Supported Platforms&quot;">​</a></h2><ul><li><a href="./ios/">iOS</a></li><li><a href="./android/">Android</a></li><li><a href="./publish-huawei-ohos">Huawei HarmonyOS</a></li><li><a href="./publish-openharmony">Open HarmonyOS</a></li><li><a href="./publish-web">Web Mobile - H5</a></li><li><a href="./publish-wechatgame">WeChat Mini Games</a></li><li><a href="./publish-bytedance-mini-game">Douyin Mini Games</a></li><li><a href="./publish-fb-instant-games">Facebook Instant Games</a></li><li><a href="./publish-oppo-mini-game">OPPO Mini Games</a></li><li><a href="./publish-huawei-quick-game">Huawei Quick Games</a></li><li><a href="./publish-vivo-mini-game">vivo Mini Games</a></li><li><a href="./publish-xiaomi-quick-game">Xiaomi Quick Games</a></li><li><a href="./publish-web">Web Web Desktop</a></li><li><a href="./windows/">Windows</a></li><li><a href="./ios/">macOS</a></li></ul><h2 id="preparation" tabindex="-1">Preparation <a class="header-anchor" href="#preparation" aria-label="Permalink to &quot;Preparation&quot;">​</a></h2><p>The preparation that needs to be done before publishing includes getting familiar with following concepts:</p><ul><li><a href="./build-panel">Build Panel</a></li><li><a href="./build-options">Build Options</a></li></ul><p>Developers can also publish projects via the command line. For details, please refer to the <a href="./publish-in-command-line">Publish from the Command Line</a> documentation.</p><h2 id="advanced" tabindex="-1">Advanced <a class="header-anchor" href="#advanced" aria-label="Permalink to &quot;Advanced&quot;">​</a></h2><p>If you have a certain degree of familiarity and understanding of the build process, it is possible customize the build template and extend the build process. For details, please refer to the following documents:</p><ul><li><a href="./build-guide">Introduction to the Build Process and FAQ</a></li><li><a href="./custom-project-build-template">Custom Project Build Process</a></li><li><a href="./custom-build-plugin">Extended Build Process</a></li></ul><h2 id="additional-resources" tabindex="-1">Additional Resources <a class="header-anchor" href="#additional-resources" aria-label="Permalink to &quot;Additional Resources&quot;">​</a></h2><ul><li><a href="https://www.cocos.com/en/assistant" target="_blank" rel="noreferrer">Cocos Technical Support</a></li><li><a href="https://discuss.cocos2d-x.org/" target="_blank" rel="noreferrer">Cocos Official Forum</a></li></ul>',13),r=[t];function s(n,h,d,u,p,c){return i(),a("div",null,r)}const b=e(l,[["render",s]]);export{f as __pageData,b as default};
