import{_ as e,c as t,o as s,a5 as a}from"./chunks/framework.CqnjdYks.js";const i="/docs/cocos/assets/morph.Qr9ZM1vL.gif",h="/docs/cocos/assets/import.CrzerToQ.png",y=JSON.parse('{"title":"变形动画（Morph）","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/animation/morph.md","filePath":"zh/manual/animation/morph.md"}'),r={name:"zh/manual/animation/morph.md"},n=a('<h1 id="变形动画-morph" tabindex="-1">变形动画（Morph） <a class="header-anchor" href="#变形动画-morph" aria-label="Permalink to &quot;变形动画（Morph）&quot;">​</a></h1><p><img src="'+i+'" alt="result">[^1]</p><p>变形动画是一种通过对模型顶点进行变形，从而实现动画效果的技术。通常在处理角色面部表情变化时，会使用变形动画。</p><h2 id="资源导入" tabindex="-1">资源导入 <a class="header-anchor" href="#资源导入" aria-label="Permalink to &quot;资源导入&quot;">​</a></h2><p>通常变形动画由外部工具（3DMax、Blender、Maya 等）制作，并导入引擎使用。导入方式请参考 <a href="./../asset/model/mesh.html#模型导入">模型资源 - 模型导入</a>。</p><p><img src="'+h+`" alt="import"></p><h2 id="接口和说明" tabindex="-1">接口和说明 <a class="header-anchor" href="#接口和说明" aria-label="Permalink to &quot;接口和说明&quot;">​</a></h2><p>如要使用变形动画，请确保导入的资源拥有中变形动画数据。这些数据存储在网格数据中，可通过下列代码获取：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> meshRenderer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MeshRenderer)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> morph</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meshRenderer.mesh.struct.morph;</span></span></code></pre></div><p>如果要改变变形动画的状态，可通过 <a href="./__APIDOC__/zh/class/MeshRenderer.html?id=setWeight">setWeight</a> 可以修改动画的权重。代码示例如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> meshRenderer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MeshRenderer);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">meshRenderer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setWeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(weight, subMeshIndex, shapIndex);</span></span></code></pre></div><p>其接口和参数说明如下：</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">weight</td><td style="text-align:left;">number</td><td style="text-align:left;">变形的权重</td></tr><tr><td style="text-align:left;">subMeshIndex</td><td style="text-align:left;">number</td><td style="text-align:left;">子网格的索引</td></tr><tr><td style="text-align:left;">shapIndex</td><td style="text-align:left;">number</td><td style="text-align:left;">子网格的变形索引</td></tr></tbody></table><p>通过 <a href="./__APIDOC__/zh/class/MeshRenderer.html?id=getWeight">getWeight</a> 可以获取外形的权重，以及通过 <a href="./__APIDOC__/zh/class/MeshRenderer.html?id=setWeights">setWeights</a> 可以同时改变多个子网格的权重。</p><p>更多接口说明请参考 <a href="./__APIDOC__/zh/class/MeshRenderer.html?id=setWeight">MeshRenderer</a>。</p><h2 id="着色器" tabindex="-1">着色器 <a class="header-anchor" href="#着色器" aria-label="Permalink to &quot;着色器&quot;">​</a></h2><p>当检测到网格资源内持有变形数据时，引擎会重设着色器 <code>CC_USE_MORPH</code> 的值为 <code>true</code>。如需自定义着色器，请确保着色持有 <code>CC_USE_MORPH</code> 预编译宏定义。</p><h2 id="程序化使用范例" tabindex="-1">程序化使用范例 <a class="header-anchor" href="#程序化使用范例" aria-label="Permalink to &quot;程序化使用范例&quot;">​</a></h2><p>使用方式可参考范例 <strong>Morph</strong>（<a href="https://github.com/cocos/cocos-test-projects/tree/v3.7/assets/cases/animation/morph" target="_blank" rel="noreferrer">GitHub</a> | <a href="https://gitee.com/mirrors_cocos-creator/test-cases-3d/tree/v3.7/assets/cases/animation/morph" target="_blank" rel="noreferrer">Gitee</a>）。</p><p>[^1]: 模型来自 <a href="https://sketchfab.com/3d-models/head-expressions-86e58ee1bda5406480e30c796e1a2df4" target="_blank" rel="noreferrer">https://sketchfab.com/</a></p>`,20),l=[n];function p(o,d,c,k,g,m){return s(),t("div",null,l)}const f=e(r,[["render",p]]);export{y as __pageData,f as default};
