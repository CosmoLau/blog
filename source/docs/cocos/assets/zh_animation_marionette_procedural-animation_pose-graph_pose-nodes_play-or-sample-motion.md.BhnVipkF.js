import{_ as t,c as a,o as e,a4 as o}from"./chunks/framework.uQk9_EO2.js";const d="/docs/cocos/assets/play-animation-clip.B_02MiPp.png",r="/docs/cocos/assets/play-animation-clip-inspector.Cu8yTeVk.png",n="/docs/cocos/assets/sample-animation.BPd-Xxg5.png",s="/docs/cocos/assets/sample-animation-inspector.CZJMqTde.png",f=JSON.parse('{"title":"播放或采样动画","description":"","frontmatter":{},"headers":[],"relativePath":"zh/animation/marionette/procedural-animation/pose-graph/pose-nodes/play-or-sample-motion.md","filePath":"zh/animation/marionette/procedural-animation/pose-graph/pose-nodes/play-or-sample-motion.md","lastUpdated":1712305443000}'),p={name:"zh/animation/marionette/procedural-animation/pose-graph/pose-nodes/play-or-sample-motion.md"},i=o('<h1 id="播放或采样动画" tabindex="-1">播放或采样动画 <a class="header-anchor" href="#播放或采样动画" aria-label="Permalink to &quot;播放或采样动画&quot;">​</a></h1><p>姿态图提供了两种从动画中读取姿态的结点：播放动画结点和采样动画结点。</p><p>在下文，“动作”是指动画剪辑或动画混合。</p><h2 id="播放动画" tabindex="-1">播放动画 <a class="header-anchor" href="#播放动画" aria-label="Permalink to &quot;播放动画&quot;">​</a></h2><p><img src="'+d+'" alt="play-animation-clip.png"></p><p><strong>播放动画结点</strong> 播放指定动作，每一帧对其进行更新，并获取动画当帧的姿态作为输出。</p><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td><code>起始时间</code></td><td>每当重入此结点时，从何时开始播放动作。单位为秒。</td></tr><tr><td><code>速度乘数</code></td><td>动作的播放速率。</td></tr></tbody></table><p><img src="'+r+'" alt="play-animation-clip-inspector"></p><table><thead><tr><th>对象属性</th><th>含义</th></tr></thead><tbody><tr><td><code>动作</code></td><td>要采样的动作。</td></tr><tr><td><code>同步</code></td><td>动画同步选项。见下。</td></tr></tbody></table><h3 id="同步" tabindex="-1">同步 <a class="header-anchor" href="#同步" aria-label="Permalink to &quot;同步&quot;">​</a></h3><p>在有些情形下，我们可能希望多个动作的播放是同步的。所谓同步，即是指当多个动画都需要播放时，它们在某些时间点上是对齐的。例如，当同时混合走、跑动作时，角色的步态应该一致——两个动作的四肢应该有相同的动画趋势。</p><p>动画图目前仅支持时间上的同步。也即，被同步的动作永远会处在相同的百分比进度。</p><p>如果仅使用了状态机中的动画混合，那么无需考虑同步。因为动画混合中的每一项动作都是同步的——它们会一直处于相同的百分比进度。然而在姿态图中情况变得不大一样。</p><p>想象两个动作 <em>A</em>、<em>B</em>，我们希望它们总是同步播放的。但如果 <em>A</em> 和 <em>B</em> 分别处于状态机的两个状态中。当 <em>A</em> 播放了一段时间后，<em>B</em> 所属状态才进入，然后 <em>B</em> 开始从 0 播放。这就导致了它们时间上的不同步。</p><p>为了解决这个问题，我们可以将需要同步的动作指定为为同一个 <strong>同步组</strong>。而后，同一同步组中的所有动作都将得到同步。具体地，<strong>播放动作结点</strong> 的 <code>同步</code> 属性下，有如下选项：</p><table><thead><tr><th>对象属性</th><th>含义</th></tr></thead><tbody><tr><td><code>组</code></td><td>动作所属的同步组。</td></tr></tbody></table><h2 id="采样动画" tabindex="-1">采样动画 <a class="header-anchor" href="#采样动画" aria-label="Permalink to &quot;采样动画&quot;">​</a></h2><p><img src="'+n+'" alt="sample-animation.png"></p><p><strong>采样动画结点</strong> 采样指定动作某一时刻的姿态作为输出。</p><table><thead><tr><th>输入</th><th>含义</th></tr></thead><tbody><tr><td><code>时刻</code></td><td>要采样的时刻。</td></tr></tbody></table><p><img src="'+s+'" alt="sample-animation-inspector.png"></p><table><thead><tr><th>对象属性</th><th>含义</th></tr></thead><tbody><tr><td><code>动作</code></td><td>要采样的动作。</td></tr><tr><td><code>使用标准化时间</code></td><td>结点输入<code>时刻</code>是否指定的是标准化时间。标准化时间是指在 [0, 1] 范围内的动作进度。例如 1 表示动作的最后一帧， 0.5 表示 50% 的动作进度。</td></tr></tbody></table>',22),c=[i];function l(m,h,_,b,g,y){return e(),a("div",null,c)}const P=t(p,[["render",l]]);export{f as __pageData,P as default};
