import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.uQk9_EO2.js";const l="/docs/cocos/assets/1_create_empty_project.DVev0rJy.png",e="/docs/cocos/assets/1_2_save_emtpy_scene.BHtxT1-s.png",p="/docs/cocos/assets/1_3_create_windows_build.ZcdHqL56.png",t="/docs/cocos/assets/2_1_vs_project.D2rJfnM7.png",h="/docs/cocos/assets/2_1_link_error.7AA2IMN1.png",k="/docs/cocos/assets/2_3_empty_window.Cr22IklE.png",o="/docs/cocos/assets/2_3_debug_url.DoI0vPTv.png",c="/docs/cocos/assets/2_5_devtool.CzDhjmoh.png",d="/docs/cocos/assets/3_1_android_build.DLlbOLaf.png",B=JSON.parse('{"title":"Cocos Native Plugin Quick Tutorial","description":"","frontmatter":{},"headers":[],"relativePath":"en/advanced-topics/native-plugins/tutorial.md","filePath":"en/advanced-topics/native-plugins/tutorial.md","lastUpdated":1712336288000}'),r={name:"en/advanced-topics/native-plugins/tutorial.md"},E=n('<h1 id="cocos-native-plugin-quick-tutorial" tabindex="-1">Cocos Native Plugin Quick Tutorial <a class="header-anchor" href="#cocos-native-plugin-quick-tutorial" aria-label="Permalink to &quot;Cocos Native Plugin Quick Tutorial&quot;">​</a></h1><p>If you want to use third-party native libraries in a native project, you can follow the steps in this article.</p><p>This article requires some understanding of native project compilation and generation, which developers can learn about through <a href="https://cmake.org/" target="_blank" rel="noreferrer">CMake official website</a>. We have also prepared a sample project <a href="https://github.com/PatriceJiang/ccplugin_tutorial" target="_blank" rel="noreferrer">GitHub</a> for reference.</p><h2 id="create-a-native-plugin" tabindex="-1">Create a native plugin <a class="header-anchor" href="#create-a-native-plugin" aria-label="Permalink to &quot;Create a native plugin&quot;">​</a></h2><h3 id="basic-setup" tabindex="-1">Basic Setup <a class="header-anchor" href="#basic-setup" aria-label="Permalink to &quot;Basic Setup&quot;">​</a></h3><ul><li><p>Create a cocos project with Cocos Creator 3.6+</p><p>Start the CocosCreator application, and run <code>Create an empty project</code> in the chosen folder.</p><p><img src="'+l+'" alt="create "></p></li><li><p>Create and save an empty scene</p><p><img src="'+e+'" alt="save scene"></p></li><li><p>A native build is needed to be created first to generate the <code>native/</code> directory.</p><p>Create a build task for any native platform, for example Windows</p><p><img src="'+p+`" alt="build windows"></p><p>Run <strong>Build</strong>, <code>native/</code> folder should be created after that.</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ tree native/ -L 2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">native/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">└── engine</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ├── common</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    └── win64</span></span></code></pre></div></li><li><p>Create a folder for the plugin</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir -p native/plugins/hello_cocos</span></span></code></pre></div></li></ul><h3 id="add-support-for-windows" tabindex="-1">Add support for Windows <a class="header-anchor" href="#add-support-for-windows" aria-label="Permalink to &quot;Add support for Windows&quot;">​</a></h3><ul><li><p>Prepare the folder for Windows</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir -p native/plugins/hello_cocos/windows/</span></span></code></pre></div></li><li><p>Copy precompiled <code>hello_cocos</code> library and header files into the plugin directory</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ tree native/plugins/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">native/plugins/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">└── hello_cocos</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ├── include</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    │   └── hello_cocos.h</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    └── windows</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        └── lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            ├── hello_cocos.lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            └── hello_cocosd.lib</span></span></code></pre></div></li><li><p>Add files <code>hello_cocos_glue.cpp</code>, <code>CMakeLists.txt</code> and <code>hello_cocos_glue-config.cmake</code></p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir native/plugins/hello_cocos/src</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">touch native/plugins/hello_cocos/src/hello_cocos_glue.cpp</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">touch native/plugins/hello_cocos/src/CMakeLists.txt</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">touch native/plugins/hello_cocos/windows/hello_cocos_glue-config.cmake</span></span></code></pre></div><p>Now the plugin directory should look like this:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ tree native/plugins/hello_cocos/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">native/plugins/hello_cocos/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── include</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   └── hello_cocos.h</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── src</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   ├── CMakeLists.txt</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   └── hello_cocos_glue.cpp</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">└── windows</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ├── hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    └── lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ├── hello_cocos.lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        └── hello_cocosd.lib</span></span></code></pre></div></li><li><p>Edit <code>hello_cocos_glue-config.cmake</code> with following content</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_hello_cocos_GLUE_DIR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${CMAKE_CURRENT_LIST_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add_library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos STATIC </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IMPORTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GLOBAL)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set_target_properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos PROPERTIES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    IMPORTED_LOCATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \${_hello_cocos_GLUE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/lib/hello_cocos.lib</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    IMPORTED_LOCATION_DEBUG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \${_hello_cocos_GLUE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/lib/hello_cocosd.lib</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${_hello_cocos_GLUE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/../src/CMakeLists.txt)</span></span></code></pre></div><p>Declare an existing library <code>hello_cocos</code> add import it.</p></li><li><p>Edit <code>native/plugins/hello_cocos/src/CMakeLists.txt</code> with following content</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_hello_cocos_GLUE_SRC_DIR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${CMAKE_CURRENT_LIST_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add_library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos_glue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${_hello_cocos_GLUE_SRC_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/hello_cocos_glue.cpp)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">target_link_libraries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos_glue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hello_cocos</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    \${ENGINE_NAME}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # cocos_engine</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">target_include_directories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos_glue </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PRIVATE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    \${_hello_cocos_GLUE_SRC_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/../include</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>Create <code>cc_plugin.json</code> in <code>native/plugins/hello_cocos/</code></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello-cocos-demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cocosdemo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;engine-version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&gt;=3.6.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello_cocos_glue&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;platforms&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;windows&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><p>Now the plugin is created and enabled in this project. But it won&#39;t compile, since there is no code in <code>hello_cocos_glue.cpp</code></p><p>Let&#39;s <strong>Build</strong> again in the build panel to refresh the Visual Studio project.</p><ul><li>Open the Visual Studio project under <code>build/windows/proj/</code></li></ul><p>Two additional targets are generated</p><p><img src="`+t+'" alt="Solution Explorer"></p><p>If you run the target directly, you will fail with the following link error:</p><p><img src="'+h+`" alt="link error"></p><ul><li><p>Edit <code>hello_cocos_glue.cpp</code></p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello_cocos.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bindings/sebind/sebind.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;plugins/bus/EventBus.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;plugins/Plugins.h&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// export c++ methods to JS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> register_demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sebind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::class_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Demo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> klass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">klass.constructor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::hello);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">klass.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ns);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> add_demo_class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Listener </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BusType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::SCRIPT_ENGINE);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">listener.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">receive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([](</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ScriptEngineEvent</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ScriptEngineEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::POST_INIT) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ScriptEngine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addRegisterCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(register_demo);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* Regist a new cc plugin entry function</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* first  param: should match the name in cc_plugin.json</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* second param: callback when engine initialized</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CC_PLUGIN_ENTRY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos_glue, add_demo_class);</span></span></code></pre></div></li></ul><p>Start the project in debug mode, a new window should launch.</p><p><img src="`+k+'" alt="empty window"></p><p>Until now, we are not sure if the plugin is enabled or not.</p><p>In the output window, we can the debug URL of the devtools</p><p><img src="'+o+'" alt="debug url"></p><p>Open the URL with chrome and type following code in Console</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;World&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hello</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Cocos&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="'+c+`" alt="devtools"></p><p>The class <code>hello_cocos</code> and its methods are exported successfully!</p><h3 id="add-support-for-android" tabindex="-1">Add support for Android <a class="header-anchor" href="#add-support-for-android" aria-label="Permalink to &quot;Add support for Android&quot;">​</a></h3><ul><li><p>Add a build task for Android</p></li><li><p>Create a folder for android</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir native/plugins/hello_cocos/android</span></span></code></pre></div></li><li><p>Copy precompiled libraries and headers and create <code>hello_cocos_glue-config.cmake</code></p><p>The folder should look like this:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ tree native/plugins/hello_cocos/android/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">native/plugins/hello_cocos/android/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── arm64-v8a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   └── lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│       └── libhello_cocos.a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">└── armeabi-v7a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    └── lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        └── libhello_cocos.a</span></span></code></pre></div></li><li><p>Edit <code>hello_cocos_glue-config.cmake</code></p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_hello_cocos_GLUE_DIR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${CMAKE_CURRENT_LIST_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add_library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos STATIC </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IMPORTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GLOBAL)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set_target_properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos PROPERTIES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    IMPORTED_LOCATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \${_hello_cocos_GLUE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${ANDROID_ABI}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/lib/libhello_cocos.a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${_hello_cocos_GLUE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/../src/CMakeLists.txt)</span></span></code></pre></div></li><li><p>Update <code>cc_plugin.json</code></p><p>Add <code>android</code> to <code>platforms</code> field</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello-cocos-demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cocosdemo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;engine-version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&gt;=3.6.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello_cocos_glue&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;platforms&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;windows&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>Create an android build task</strong></p><p><img src="`+d+`" alt="Android build"></p></li></ul><p>Run <strong>Build</strong> and debug with Android Studio.</p><h3 id="add-support-for-ios" tabindex="-1">Add support for iOS <a class="header-anchor" href="#add-support-for-ios" aria-label="Permalink to &quot;Add support for iOS&quot;">​</a></h3><ul><li><p>Add a build task for iOS</p><p>Prepare a folder for iOS</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mkdir -p native/plugins/hello_cocos/ios/lib</span></span></code></pre></div><p>Copy precompiled libraries and edit <code>native/plugins/hello_cocos/ios/hello_cocos_glue-config.cmake</code></p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_hello_cocos_GLUE_DIR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${CMAKE_CURRENT_LIST_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add_library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos STATIC </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IMPORTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GLOBAL)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set_target_properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos PROPERTIES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    IMPORTED_LOCATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \${_hello_cocos_GLUE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/lib/libhello_cocos.a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${_hello_cocos_GLUE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/../src/CMakeLists.txt)</span></span></code></pre></div></li></ul><h3 id="add-support-for-mac" tabindex="-1">Add support for Mac <a class="header-anchor" href="#add-support-for-mac" aria-label="Permalink to &quot;Add support for Mac&quot;">​</a></h3><ul><li><p>Add a build task for MacOS</p></li><li><p>Prepare a folder for MacOS</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir -p native/plugins/hello_cocos/mac/lib</span></span></code></pre></div></li><li><p>Copy precompiled libraries and edit <code>native/plugins/hello_cocos/ios/hello_cocos_glue-config.cmake</code></p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_hello_cocos_GLUE_DIR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${CMAKE_CURRENT_LIST_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add_library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos STATIC </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IMPORTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GLOBAL)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set_target_properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hello_cocos PROPERTIES</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    IMPORTED_LOCATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \${_hello_cocos_GLUE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/lib/libhello_cocos.a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${_hello_cocos_GLUE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/../src/CMakeLists.txt)</span></span></code></pre></div></li><li><p>Update <code>cc_plugin.json</code> again**, Add <code>iOS</code> &amp; <code>mac</code> to <code>platforms</code> field</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello-cocos-demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cocosdemo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;engine-version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&gt;=3.6.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;modules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello_cocos_glue&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;platforms&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;windows&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;iOS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mac&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><p>Now a plugin supporting Android, Windows, MacOS &amp; iOS is done.</p><p>The final content of the plugins is:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ tree native/plugins/hello_cocos/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">native/plugins/hello_cocos</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── cc_plugin.json</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── include</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   └── hello_cocos.h</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── src</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   ├── CMakeLists.txt</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   └── hello_cocos_glue.cpp</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── android</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   ├── hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   ├── arm64-v8a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   │   └── lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   │       └── libhello_cocos.a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   └── armeabi-v7a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│       └── lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│           └── libhello_cocos.a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── ios</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   ├── hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   └── lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│       └── libhello_cocos.a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">├── mac</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   ├── hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│   └── lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">│       └── libhello_cocos.a</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">└── windows</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ├── hello_cocos_glue-config.cmake</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    └── lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ├── hello_cocos.lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        └── hello_cocosd.lib</span></span></code></pre></div><p>It&#39;s ready to ship.</p><h2 id="distribute-with-editor-extension" tabindex="-1">Distribute with Editor Extension <a class="header-anchor" href="#distribute-with-editor-extension" aria-label="Permalink to &quot;Distribute with Editor Extension&quot;">​</a></h2><p>Follow the steps in <a href="./../..//editor/extension/readme">Editor Extension</a> to create an Editor Extension, you need to copy the directory <code>native/plugins/hello_cocos</code> into the extension package when <a href="./../../editor/extension/store/upload-store#packaging-the-extension">Packaging the Extension</a>, then submit.</p><p>About upgrade: The editor extension system does not support update detection at the moment. Plugin users need to check in Cocos Store or Dashboard and manually upgrade to the latest version. Of course, developers can still implement their version management based on the existing extension system.</p>`,39),g=[E];function u(y,F,C,_,b,v){return a(),i("div",null,g)}const A=s(r,[["render",u]]);export{B as __pageData,A as default};
