import{_ as d,E as r,c as o,m as e,a as t,J as a,w as i,a4 as n,o as s}from"./chunks/framework.uQk9_EO2.js";const f="/docs/cocos/assets/debug-view.DZwElqV5.jpg",P=JSON.parse('{"title":"Rendering Debug View","description":"","frontmatter":{},"headers":[],"relativePath":"en/shader/surface-shader/rendering-debug-view.md","filePath":"en/shader/surface-shader/rendering-debug-view.md","lastUpdated":1712336288000}'),g={name:"en/shader/surface-shader/rendering-debug-view.md"},h=e("h1",{id:"rendering-debug-view",tabindex:"-1"},[t("Rendering Debug View "),e("a",{class:"header-anchor",href:"#rendering-debug-view","aria-label":'Permalink to "Rendering Debug View"'},"â€‹")],-1),c=e("blockquote",null,[e("p",null,[e("strong",null,"Note"),t(": The built-in rendering debugging feature is only available for materials using the Surface Shader framework**.")])],-1),u=e("p",null,"By selecting the corresponding debug mode in the upper-right corner of the scene preview window in the editor, you can view the model, materials, lighting and other computational data on the same screen, and quickly locate the problem when the rendering effect is abnormal.",-1),y=e("p",null,[e("img",{src:f,alt:"debug-view"})],-1),m=e("p",null,"To facilitate pixel-by-pixel comparison, we use full-screen debugging instead of picture-in-picture display, which allows us to quickly switch between different data in the same screen to locate rendering errors, and to use the color picker to explore the pixel-specific values.",-1),p=e("strong",null,"Irrational Number Visualization",-1),x=n("",5),b=n("",10),_=n("",9);function w(D,S,k,v,I,A){const l=r("font");return s(),o("div",null,[h,c,u,y,m,e("p",null,[t("In addition, Surface Shader has a built-in "),p,t(" feature, so once some pixels appear to have abnormal "),a(l,{color:"#ff0033"},{default:i(()=>[t("Red(255, 0, 51)")]),_:1}),t(" and "),a(l,{color:"#00ff33"},{default:i(()=>[t("Green(0, 255, 51)")]),_:1}),t(" alternately blink, then the rendering calculation of these pixels appears irrational, please use the single debug mode to check the model tangent or other related data.")]),x,e("p",null,[t("The debugging focus "),a(l,{color:"#ff8000"},{default:i(()=>[t("is on a particular piece of data that needs to be tested")]),_:1}),t(", and the entire scenario visualizes this data output.")]),b,e("p",null,[t("The debugging focus "),a(l,{color:"#ff8000"},{default:i(()=>[t("is on the overall rendering performance")]),_:1}),t(", and each module can be blocked or turned on, with modules unrelated to each other, to see how different modules affect each other's rendering effects.")]),e("p",null,[t("Single mode has higher priority than the composite mode, "),a(l,{color:"#ff0000"},{default:i(()=>[t("If you want to use the composite mode, you must check No single mode.")]),_:1})]),_])}const L=d(g,[["render",w]]);export{P as __pageData,L as default};
