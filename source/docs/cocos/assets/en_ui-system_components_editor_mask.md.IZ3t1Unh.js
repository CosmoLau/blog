import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.uQk9_EO2.js";const e="/docs/cocos/assets/mask.CI1JXxRG.png",n="/docs/cocos/assets/mask-rect.DebEsgjJ.png",h="/docs/cocos/assets/mask-ellipse.VFajHrGP.png",l="/docs/cocos/assets/mask-graphics.b8L8iMHe.png",p="/docs/cocos/assets/mask-image.B2D5qGyb.png",u=JSON.parse('{"title":"Mask Component Reference","description":"","frontmatter":{},"headers":[],"relativePath":"en/ui-system/components/editor/mask.md","filePath":"en/ui-system/components/editor/mask.md","lastUpdated":1712305443000}'),k={name:"en/ui-system/components/editor/mask.md"},r=t('<h1 id="mask-component-reference" tabindex="-1">Mask Component Reference <a class="header-anchor" href="#mask-component-reference" aria-label="Permalink to &quot;Mask Component Reference&quot;">​</a></h1><p><strong>Mask</strong> is used to specify the range which clip the render results of the children. A node with a <strong>Mask</strong> component will use a bounding box (which is specified by the <code>contentSize</code> of the <strong>UITransform</strong> component in the <strong>Inspector</strong>) to create a rectangular rendered mask. All child nodes of this node will only appear inside the mask&#39;s boundary.</p><p><img src="'+e+'" alt="mask"></p><p>Select a node in the <strong>Hierarchy</strong> panel, then click the <strong>Add Component</strong> button at the bottom of the <strong>Inspector</strong> panel and select <strong>Mask</strong> from <strong>UI -&gt; Render</strong>. Then you can add the Mask component to the node.</p><p>After adding a Mask component, a <a href="./graphics">Graphics</a> component will be automatically added on the same node. Please do not delete the graphics component. When the <strong>Type</strong> property is <strong>SPRITE_STENCIL</strong>，the graphics component will be removed, and a new sprite component will be added. Please also do not delete the sprite component because it provides the shape information for the stencil.</p><blockquote><p><strong>Note</strong>: the Mask component cannot be added to a node with other renderer components such as <strong>Sprite</strong>, <strong>Label</strong>, etc.</p></blockquote><p>To use <code>Mask</code>, please refer to the <a href="./__APIDOC__/en/class/Mask">Mask API</a> documentation and the <a href="https://github.com/cocos/cocos-test-projects/tree/v3.8/assets/cases/ui/08.mask" target="_blank" rel="noreferrer">Mask</a> scene of the test-cases-3d project.</p><h2 id="mask-properties" tabindex="-1">Mask Properties <a class="header-anchor" href="#mask-properties" aria-label="Permalink to &quot;Mask Properties&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Function Explanation</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Type</strong></td><td style="text-align:left;">Mask type, including <code>RECT</code>, <code>ELLIPSE</code>, <code>GRAPHICS_STENCIL</code>, <code>SPRITE_STENCIL</code>.</td></tr><tr><td style="text-align:left;"><strong>Segments</strong></td><td style="text-align:left;">The segments for ellipse mask, which takes effect only when the Mask type is set to <code>ELLIPSE</code>.</td></tr><tr><td style="text-align:left;"><strong>Inverted</strong></td><td style="text-align:left;">The Reverse mask.</td></tr></tbody></table><h3 id="type" tabindex="-1">Type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;Type&quot;">​</a></h3><h4 id="rect" tabindex="-1">RECT <a class="header-anchor" href="#rect" aria-label="Permalink to &quot;RECT&quot;">​</a></h4><p><img src="'+n+'" alt="mask"></p><h4 id="ellipse" tabindex="-1">ELLIPSE <a class="header-anchor" href="#ellipse" aria-label="Permalink to &quot;ELLIPSE&quot;">​</a></h4><p><img src="'+h+`" alt="mask"></p><p>It can also be set by code at runtime. Example:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mask</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Mask);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mask.type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mask.Type.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ELLIPSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mask.segments </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="graphics-stencil" tabindex="-1">GRAPHICS_STENCIL <a class="header-anchor" href="#graphics-stencil" aria-label="Permalink to &quot;GRAPHICS_STENCIL&quot;">​</a></h4><p><img src="`+l+`" alt="mask"></p><p>It can also be set by code at runtime. Example:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.mask.node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Graphics);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//const g = this.mask.graphics;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.lineWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.fillColor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromHEX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#ff0000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">moveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stroke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="sprite-stencil" tabindex="-1">SPRITE_STENCIL <a class="header-anchor" href="#sprite-stencil" aria-label="Permalink to &quot;SPRITE_STENCIL&quot;">​</a></h4><p><img src="`+p+`" alt="mask"></p><p>It can also be set by code at runtime. Example:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mask</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Mask);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mask.type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Mask.Type.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SPRITE_STENCIL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sprite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Sprite);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sprite.spriteFrame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.stencilSprite;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mask.alphaThreshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><blockquote><p><strong>Notes</strong>:</p><ol><li>After adding the <strong>Mask</strong> component to a node, all nodes in the sub tree of this node will be affected by <strong>Mask</strong> during rendering.</li><li>The <code>GRAPHICS_STENCIL</code> simply provides the <strong>graphics</strong> component, which developers can use graphics property in the <strong>mask</strong> component to draw custom graphics. But the node click events are still calculated based on the size of the node.</li><li>The <code>SPRITE_STENCIL</code> type requires a picture resource by default. If it is not set, it is equivalent to no mask.</li></ol></blockquote>`,25),o=[r];function d(c,E,g,y,m,C){return a(),i("div",null,o)}const b=s(k,[["render",d]]);export{u as __pageData,b as default};
