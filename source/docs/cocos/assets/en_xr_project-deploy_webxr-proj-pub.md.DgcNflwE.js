import{_ as e,c as t,o as r,a4 as o}from"./chunks/framework.uQk9_EO2.js";const a="/docs/cocos/assets/select-web-mobile.BkHkMDVC.png",s="/docs/cocos/assets/enable-webxr.B5M4qc2W.png",n="/docs/cocos/assets/https-license.BpSZmjRD.png",i="/docs/cocos/assets/start-https-server.DfVld0bu.png",w=JSON.parse('{"title":"Building and Publishing WebXR Project","description":"","frontmatter":{},"headers":[],"relativePath":"en/xr/project-deploy/webxr-proj-pub.md","filePath":"en/xr/project-deploy/webxr-proj-pub.md","lastUpdated":1712336288000}'),p={name:"en/xr/project-deploy/webxr-proj-pub.md"},l=o('<h1 id="building-and-publishing-webxr-project" tabindex="-1">Building and Publishing WebXR Project <a class="header-anchor" href="#building-and-publishing-webxr-project" aria-label="Permalink to &quot;Building and Publishing WebXR Project&quot;">​</a></h1><p>After completing the <a href="./webxr-proj-deploy">WebXR Project Setup</a> and finishing the development, you can build and publish the WebXR application by clicking on <strong>Menu Bar -&gt; Project -&gt; Build</strong>.</p><h2 id="setting-up-webxr-build-options" tabindex="-1">Setting up WebXR Build Options <a class="header-anchor" href="#setting-up-webxr-build-options" aria-label="Permalink to &quot;Setting up WebXR Build Options&quot;">​</a></h2><p>Choose <strong>Web-Mobile</strong> as the target build platform.</p><p><img src="'+a+'" alt="webxr-proj-pub/select-web-mobile"></p><p>Enable the <code>WebXR</code> option in the <strong>Build</strong> panel.</p><p><img src="'+s+'" alt="webxr-proj-pub/enable-webxr"></p><p>Click on <strong>Build</strong> to proceed.</p><h2 id="configure-https-environment" tabindex="-1">Configure HTTPS Environment <a class="header-anchor" href="#configure-https-environment" aria-label="Permalink to &quot;Configure HTTPS Environment&quot;">​</a></h2><p>The server used to provide web resources for WebXR must be served in a <a href="https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts" target="_blank" rel="noreferrer">Secure Context</a>.</p><p>To start an HTTPS server, a .pem (certificate file) needs to be configured for the domain hosting service.</p><p>Since the current version does not support starting a built-in HTTPS server, users need to start it manually.</p><p>Place the .pem file in the root directory of the build folder.</p><p><img src="'+n+'" alt="webxr-proj-pub/https-license.png"></p><p>In the command terminal, navigate to this directory and enter the command: <code>https-server -S</code>. This will start the HTTPS server.</p><p><img src="'+i+'" alt="webxr-proj-pub/start-https-server"></p><h2 id="select-compatible-devices-and-browsers" tabindex="-1">Select Compatible Devices and Browsers <a class="header-anchor" href="#select-compatible-devices-and-browsers" aria-label="Permalink to &quot;Select Compatible Devices and Browsers&quot;">​</a></h2><p>Refer to the <a href="https://developers.google.com/ar/devices" target="_blank" rel="noreferrer">ARCore official documentation</a> for a list of devices that support ARCore.</p><p>Refer to <a href="./(https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API#browser_compatibility)">WEBXR browser_compatibility - mozilla.org</a> for a list of browsers that support WebXR.</p><h2 id="enable-the-webxr-feature-of-the-browser" tabindex="-1">Enable the WebXR Feature of the Browser <a class="header-anchor" href="#enable-the-webxr-feature-of-the-browser" aria-label="Permalink to &quot;Enable the WebXR Feature of the Browser&quot;">​</a></h2><p>Before accessing a WebXR application using the Chrome browser, it&#39;s necessary to ensure that the WebXR feature is enabled.</p><p>Go to <strong><a href="chrome://flags" target="_blank" rel="noreferrer">chrome://flags</a></strong> and set the <code>webxr incubations</code> to <code>Enable</code>.</p>',22),c=[l];function b(d,h,u,g,m,f){return r(),t("div",null,c)}const x=e(p,[["render",b]]);export{w as __pageData,x as default};
