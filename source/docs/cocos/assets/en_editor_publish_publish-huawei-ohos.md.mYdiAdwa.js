import{_ as e,c as o,o as t,a4 as r}from"./chunks/framework.uQk9_EO2.js";const n="/docs/cocos/assets/app-info.BmJwvSRJ.png",i="/docs/cocos/assets/dev-setting.DIDh5G8F.png",a="/docs/cocos/assets/preferences.BfvEInGf.png",s="/docs/cocos/assets/build.DuRxpxX-.png",c="/docs/cocos/assets/package-ohos.BmndiRSI.png",l="/docs/cocos/assets/open-project.BjhG08hR.png",p="/docs/cocos/assets/sign-configs-debug.BicdzoxS.png",d="/docs/cocos/assets/build-variants.scEsxQJs.png",h="/docs/cocos/assets/build-hap.BuHEolSP.png",g="/docs/cocos/assets/output.Chpy9tIh.png",u="/docs/cocos/assets/debug-output.DRshMjty.png",f="/docs/cocos/assets/run-project.C_FBpUN-.png",m="/docs/cocos/assets/cer-file.DD4IpIdw.png",b="/docs/cocos/assets/new-cer-file._JnRiX-b.png",y="/docs/cocos/assets/provision-profile.4o_LFM_u.png",_="/docs/cocos/assets/new-provision-profile.CDtc9twv.png",E=JSON.parse('{"title":"Publish for the Huawei HarmonyOS","description":"","frontmatter":{},"headers":[],"relativePath":"en/editor/publish/publish-huawei-ohos.md","filePath":"en/editor/publish/publish-huawei-ohos.md","lastUpdated":1712305443000}'),v={name:"en/editor/publish/publish-huawei-ohos.md"},w=r('<h1 id="publish-for-the-huawei-harmonyos" tabindex="-1">Publish for the Huawei HarmonyOS <a class="header-anchor" href="#publish-for-the-huawei-harmonyos" aria-label="Permalink to &quot;Publish for the Huawei HarmonyOS&quot;">​</a></h1><p>Starting with v3.2, Cocos Creator supports packaging games as Huawei <strong>HarmonyOS</strong> (<code>.hap</code>) applications.</p><h2 id="preparations" tabindex="-1">Preparations <a class="header-anchor" href="#preparations" aria-label="Permalink to &quot;Preparations&quot;">​</a></h2><ul><li><p>Enter <a href="https://developer.huawei.com/consumer/en/service/josp/agc/index.html#/" target="_blank" rel="noreferrer">AppGallery Connect website</a> to register for a <a href="https://developer.huawei.com/consumer/en/doc/start/registration-and-verification-0000001053628148" target="_blank" rel="noreferrer">HUAWEI ID</a>.</p></li><li><p>After logging in, select <a href="https://developer.huawei.com/consumer/en/doc/distribution/app/agc-harmonyapp-createproject" target="_blank" rel="noreferrer">Create Project</a> and <a href="https://developer.huawei.com/consumer/en/doc/distribution/app/agc-harmonyapp-createharmonyapp" target="_blank" rel="noreferrer">Add HarmonyOS App</a>, select the <strong>Platform</strong> as <strong>HarmonyOS</strong>.</p><p><img src="'+n+'" alt="app info"></p><blockquote><p><strong>Note</strong>: the <strong>Package name</strong> needs to be consistent with the <strong>Game Package Name</strong> in the <strong>Build</strong> panel of Cocos Creator.</p></blockquote></li><li><p>Download and install <a href="https://developer.harmonyos.com/en/develop/deveco-studio#download" target="_blank" rel="noreferrer">HUAWEI DevEco Studio</a>. After the installation is complete <a href="https://developer.harmonyos.com/en/docs/documentation/doc-guides/environment_config-0000001052902427" target="_blank" rel="noreferrer">Configure Development Environment</a>, download the HarmonyOS SDK, please check <strong>Java</strong> and <strong>Native</strong> for the SDK packages in the <strong>SDK Platforms</strong> page.</p><p><img src="'+i+'" alt="dev setting"></p><p>Remember the directory indicated by <strong>HarmonyOS SDK Location</strong> shown at the top of the window, fill in the path of this SDK in the <strong>Preferences</strong> panel of Cocos Creator later.</p></li></ul><h2 id="release-process" tabindex="-1">Release process <a class="header-anchor" href="#release-process" aria-label="Permalink to &quot;Release process&quot;">​</a></h2><h3 id="building-with-cocos-creator" tabindex="-1">Building with Cocos Creator <a class="header-anchor" href="#building-with-cocos-creator" aria-label="Permalink to &quot;Building with Cocos Creator&quot;">​</a></h3><ol><li><p>Use Cocos Creator to open the project, click <strong>Cocos Creator/File -&gt; Preferences -&gt; External Programs</strong> in the upper menu bar, configure <strong>HarmonyOS NDK</strong> and <strong>HarmonyOS SDK</strong> path:</p><p><img src="'+a+'" alt="preferences"></p></li><li><p>Open the <strong>Build</strong> panel from <strong>Project -&gt; Build</strong> in the menu bar. Select <strong>HarmonyOS</strong> in <strong>Platform</strong> in the <strong>Build</strong> panel, and configure <a href="./native-options#build-options">Build Options</a> as needed. Next, click the <strong>Build</strong> button at the bottom right.</p><p><img src="'+s+'" alt="build"></p><blockquote><p><strong>Notes</strong>:</p><ol><li><strong>Game Package Name</strong> in the expanded option of <strong>HarmonyOS</strong> needs to be consistent with the <strong>Package name</strong> when adding the HarmonyOS application in the AppGallery Connect.</li><li>We deprecated the <strong>Render BackEnd</strong> in the expanded option of <strong>HarmonyOS</strong> since v3.4.2 due to <strong>HarmonyOS</strong> offering full support to GLES3.</li></ol></blockquote></li><li><p>Open the project directory after the build is complete, notice that the <code>ohos</code> folder is generated under the <code>native\\engine</code> directory, which contains the HarmonyOS project generated by the build.</p><p><img src="'+c+'" alt="package"></p><blockquote><p><strong>Note</strong>: currently, HarmonyOS does not support multi-directory builds, so the generated HarmonyOS project is in the <code>native\\engine</code> directory, unlike other platforms that generate in the <code>build</code> directory of the project.</p></blockquote><p>Next, open the <code>ohos</code> folder with HUAWEI DevEco Studio to perform further compilation, as described below.</p></li></ol><h3 id="compile-and-run-through-huawei-deveco-studio" tabindex="-1">Compile and run through HUAWEI DevEco Studio <a class="header-anchor" href="#compile-and-run-through-huawei-deveco-studio" aria-label="Permalink to &quot;Compile and run through HUAWEI DevEco Studio&quot;">​</a></h3><ol><li><p>Open HUAWEI DevEco Studio, click <strong>Open Project</strong> and select the HarmonyOS project (<code>ohos</code> folder) generated after the build in the previous step.</p><p><img src="'+l+'" alt="open-project"></p></li><li><p>Prepare the signature file. For the method of obtaining the signature file, please refer to the contents of the <strong>Signature File</strong> section below.</p></li><li><p>Configure the signature file. Click <strong>File -&gt; Project Structure</strong> in the DevEco Studio menu bar, then select <strong>Modules -&gt; entry -&gt; Signing Configs</strong> and configure the signature information. For details, please refer to the <a href="https://developer.harmonyos.com/en/docs/documentation/doc-guides/ide_debug_device-0000001053822404#EN-US_TOPIC_0000001154985555__section19238119191816" target="_blank" rel="noreferrer">Configure Signature Information</a> documentation.</p><p><img src="'+p+'" alt="sign configs"></p><p>Then proceed to configure the signature information in <strong>Project -&gt; Signing Configs</strong>.</p><p>After setting and saving, the configured signature information can be viewed in the project directory in the <code>native\\engine\\ohos\\entry\\build.gradle</code> file in the project directory.</p><p>Depending on the build type (Debug/Release) and whether the generated <code>.hap</code> contains signature information, the developer can configure in combination as needed, please refer to the <a href="https://developer.harmonyos.com/en/docs/documentation/doc-guides/build_hap-0000001053342418" target="_blank" rel="noreferrer">Building and Creating HAPs</a> documentation for details.</p><p><img src="'+d+'" alt="build variants"></p></li><li><p>Then click on the <strong>Build -&gt; Build Hap(s)/APP(s) -&gt; Build Hap(s)</strong> in the menu bar to execute the compilation process and generate the <code>.hap</code> file.</p><p><img src="'+h+'" alt="build hap"></p><p>After compiling, the <code>.hap</code> file with signature information is generated in the <code>native\\engine\\ohos\\build\\outputs\\hap</code> directory of the project directory.</p><p><img src="'+g+'" alt="output"></p><p>All <code>.hap</code> files with/without signature information are generated in the <code>native\\engine\\ohos\\entry\\build\\outputs\\hap</code> directory of the project directory.</p><p><img src="'+u+'" alt="output"></p></li><li><p>Connect Huawei devices with HarmonyOS system using USB, then click <strong>Run -&gt; Run ‘entry’</strong> in the menu bar or click the Run button above to run the HarmonyOS app to your device. Please refer to the <a href="https://developer.harmonyos.com/en/docs/documentation/doc-guides/run_phone_tablat-0000001064774652" target="_blank" rel="noreferrer">Running Your App</a> documentation for details.</p><p><img src="'+f+'" alt="run project"></p><blockquote><p><strong>Note</strong>: if the app icon is not found when running on the device, check if there is an <code>installationFree</code> field with <code>true</code> in the <code>native\\engine\\ohos\\entry\\src\\main\\config.json</code> file in the project directory, change it to <code>false</code>.</p></blockquote></li><li><p>If need to upload and publish HarmonyOS apps to Huawei AppGallery Connect, please refer to the official <a href="https://developer.huawei.com/consumer/en/doc/distribution/app/agc-harmonyapp-releaseharmonyapp" target="_blank" rel="noreferrer">Release HarmonyOS Application Guide</a> documentation for the specific process.</p></li></ol><h3 id="signature-file" tabindex="-1">Signature file <a class="header-anchor" href="#signature-file" aria-label="Permalink to &quot;Signature file&quot;">​</a></h3><p>HarmonyOS applications use digital certificates (<code>.cer</code> files) and HarmonyAppProvision files (<code>.p7b</code> files) to ensure the integrity of the application. First, use <strong>DevEco Studio</strong> to generate a key and certificate request file, and then use the certificate request file to apply for a digital certificate and profile file for publishing/debugging in AppGallery Connect.</p><h4 id="generate-key-and-certificate-request-file" tabindex="-1">Generate key and certificate request file <a class="header-anchor" href="#generate-key-and-certificate-request-file" aria-label="Permalink to &quot;Generate key and certificate request file&quot;">​</a></h4><p>In <strong>DevEco Studio</strong>, click <strong>Build -&gt; Generate Key and CSR</strong> in the upper menu bar to generate a key (<code>.p12</code> file), and then generate a certificate request file (<code>.csr</code>). For details, please refer to the <a href="https://developer.harmonyos.com/en/docs/documentation/doc-guides/publish_app-0000001053223745#EN-US_TOPIC_0000001154985553__section7209054153620" target="_blank" rel="noreferrer">Generating a Key Store and CSR</a> documentation.</p><h4 id="generate-and-download-a-digital-certificate-cer-file" tabindex="-1">Generate and download a digital certificate (<code>.cer</code> file) <a class="header-anchor" href="#generate-and-download-a-digital-certificate-cer-file" aria-label="Permalink to &quot;Generate and download a digital certificate (`.cer` file)&quot;">​</a></h4><ul><li><p>Visit the <a href="https://developer.huawei.com/consumer/en/service/josp/agc/index.html" target="_blank" rel="noreferrer">AppGallery Connect website</a>, select <strong>Users and permissions -&gt; Certificate management</strong>, click the <strong>New certificate</strong> button in the upper right corner.</p><p><img src="'+m+'" alt="cer profile"></p></li><li><p>Enter the required certificate information in the New certificate dialog box that is displayed. <strong>Certificate type</strong> Choose <strong>Release certificate</strong>/<strong>Debug certificate</strong> as required. The certificate request file is the <code>.csr</code> file generated in <strong>DevEco Studio</strong> in the previous step.</p><p><img src="'+b+'" alt="cer profile"></p><ul><li><strong>Certificate name</strong>: Enter up to 100 characters.</li><li><strong>Certificate type</strong>: Select <strong>Release certificate</strong>/<strong>Debug certificate</strong> as required.</li><li><strong>CSR certificate request file</strong>: Select the <code>.csr</code> file generated in <strong>DevEco Studio</strong> in the previous step.</li></ul></li><li><p>After filling in the information, click <strong>Submit</strong>, a release/debugging certificate (<code>.cer</code> file) will be generated, and click the <strong>Download</strong> button behind the certificate to download it to the local.</p></li></ul><p>For more information, please refer to the <a href="https://developer.huawei.com/consumer/en/doc/distribution/app/agc-harmonyapp-debugharmonyapp#h1-1598336089667" target="_blank" rel="noreferrer">Apply for Digital Certificate</a> documentation.</p><h4 id="generate-and-download-harmonyappprovision-profile-file-p7b-file" tabindex="-1">Generate and download HarmonyAppProvision Profile file (<code>.p7b</code> file) <a class="header-anchor" href="#generate-and-download-harmonyappprovision-profile-file-p7b-file" aria-label="Permalink to &quot;Generate and download HarmonyAppProvision Profile file (`.p7b` file)&quot;">​</a></h4><ul><li><p>Enter <a href="https://developer.huawei.com/consumer/en/service/josp/agc/index.html" target="_blank" rel="noreferrer">AppGallery Connect website</a>, select <strong>My Project</strong>, select the HarmonyOS project and application created before.</p></li><li><p>Click the <strong>HarmonyOS app services -&gt; HAP Provision Profile management</strong> item on the left, and then click the <strong>Add</strong> button at the top right of the page to create a <code>.p7b</code> file.</p><p><img src="'+y+'" alt="provision profile"></p></li><li><p>Enter the required information in the HarmonyAppProvision information dialog box that is displayed.</p><p><img src="'+_+'" alt="new provision profile"></p><ul><li><strong>HarmonyAppProvision file</strong>: Enter the file name, which contains up to 100 characters.</li><li><strong>Type</strong>: Select <strong>Release</strong> or <strong>certificate</strong> as required.</li><li><strong>Certificate</strong>: Select the <code>.cer</code> file generated in the previous step.</li><li><strong>Device</strong>: Please refer to the <a href="https://developer.huawei.com/consumer/en/doc/distribution/app/agc-harmonyapp-debugharmonyapp#h1-1598520099105" target="_blank" rel="noreferrer">Registering Debugging Devices</a> documentation for configuration. It is not necessary to configure this item when the <strong>Type</strong> is set to <strong>Release</strong>.</li></ul></li><li><p>After setting, click <strong>Submit</strong> to download the generated <code>.p7b</code> file to the local.</p></li></ul><p>For more information, please refer to the <a href="https://developer.huawei.com/consumer/en/doc/distribution/app/agc-harmonyapp-debugharmonyapp#h1-1598336409517" target="_blank" rel="noreferrer">Application Profile</a> documentation.</p><h2 id="known-issues" tabindex="-1">Known issues <a class="header-anchor" href="#known-issues" aria-label="Permalink to &quot;Known issues&quot;">​</a></h2><ul><li>WebView does not support <code>touch</code> events, touch is not responsive.</li><li>VideoPlayer does not support dragging video when playing remote video.</li><li>EditBox is not zoomed out when full screen, and does not re-layout after keyboard retraction.</li><li>Gravity/acceleration sensor delay around 500ms, poor followability.</li></ul><h2 id="reference-documentation" tabindex="-1">Reference documentation <a class="header-anchor" href="#reference-documentation" aria-label="Permalink to &quot;Reference documentation&quot;">​</a></h2><ul><li><a href="https://developer.huawei.com/consumer/en/service/josp/agc/index.html#/" target="_blank" rel="noreferrer">AppGallery Connect Website</a></li><li><a href="https://developer.harmonyos.com/en/docs/documentation/doc-guides/tools_overview-0000001053582387" target="_blank" rel="noreferrer">HUAWEI DevEco Studio User Guide</a></li><li><a href="https://developer.harmonyos.com/en/docs/documentation/doc-guides/ide_debug_device-0000001053822404" target="_blank" rel="noreferrer">Debugging the HarmonyOS App</a></li><li><a href="https://developer.harmonyos.com/en/docs/documentation/doc-guides/publish_app-0000001053223745" target="_blank" rel="noreferrer">Releasing the HarmonyOS App</a></li></ul>',23),S=[w];function k(P,H,C,q,A,D){return t(),o("div",null,S)}const x=e(v,[["render",k]]);export{E as __pageData,x as default};
