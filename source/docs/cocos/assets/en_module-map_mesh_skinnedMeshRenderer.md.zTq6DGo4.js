import{_ as e,c as t,o as n,a4 as s}from"./chunks/framework.uQk9_EO2.js";const r="/docs/cocos/assets/skinned-mesh-renderer.D6hnkTkJ.png",y=JSON.parse('{"title":"SkinnedMeshRenderer","description":"","frontmatter":{},"headers":[],"relativePath":"en/module-map/mesh/skinnedMeshRenderer.md","filePath":"en/module-map/mesh/skinnedMeshRenderer.md","lastUpdated":1712305443000}'),o={name:"en/module-map/mesh/skinnedMeshRenderer.md"},a=s('<h1 id="skinnedmeshrenderer" tabindex="-1">SkinnedMeshRenderer <a class="header-anchor" href="#skinnedmeshrenderer" aria-label="Permalink to &quot;SkinnedMeshRenderer&quot;">​</a></h1><p>The SkinnedMeshRenderer component is mainly used for rendering skinned model meshes.</p><p>After <a href="./../../asset/model/mesh">Import Model Assets</a>, the SkinnedMeshRenderer component will be automatically added to the model nodes when the model is used if the model mesh has skinning information.</p><p><img src="'+r+'" alt="SkinnedMeshRenderer"></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Properties</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Materials</strong></td><td style="text-align:left;">Mesh assets allow multiple materials, all of which are in the <code>materials</code> array.<br> If the mesh asset has more than one sub-mesh, then the Mesh Renderer will get the corresponding material from the <code>materials</code> array to render this sub-mesh.</td></tr><tr><td style="text-align:left;"><strong>LightmapSettings</strong></td><td style="text-align:left;">For baking Lightmap, please refer to <a href="./../../concepts/scene/light/lightmap">Lightmap</a> for details</td></tr><tr><td style="text-align:left;"><strong>ShadowCastingMode</strong></td><td style="text-align:left;">Specify whether the current model will cast shadows, you need to <a href="./../../concepts/scene/light/shadow#Enable Shadow Effect">Enable Shadow Effect</a> in the scene first</td></tr><tr><td style="text-align:left;"><strong>ReceiveShadow</strong></td><td style="text-align:left;">Specify whether the current model will receive and display shadow effects generated by other objects, you need to <a href="./../../concepts/scene/light/shadow#Enable Shadow Effect">Enable Shadow Effect</a> in the scene first. This property only takes effect when the shadow type is <strong>ShadowMap</strong>.</td></tr><tr><td style="text-align:left;"><strong>Mesh</strong></td><td style="text-align:left;">Specify the mesh asset used for rendering, <a href="./../../engine/renderable/model-component#Mesh Assets">Mesh Assets</a> in the mesh renderer component section.</td></tr><tr><td style="text-align:left;"><strong>Skeleton</strong></td><td style="text-align:left;">The skeletal data of the current model, usually directly from the imported glTF or FBX model file</td></tr><tr><td style="text-align:left;"><strong>SkinningRoot</strong></td><td style="text-align:left;">Reference to the skeleton root node, corresponding to the node that controls the animation component of the model</td></tr></tbody></table><p>Please refer to <a href="./__APIDOC__/en/class/SkinnedMeshRenderer">SkinnedMeshRenderer API</a> for API reference.</p><p>The difference between SkinnedMeshRenderer component and MeshRenderer component are as follows:</p><ul><li>The MeshRenderer component renders a static model, consisting of 3D model data</li><li>The SkinnedMeshRenderer component renders not only the model but also the bones, so in addition to the 3D model data, it also includes data such as bone data and vertex weights. <br>However, if there is no skeleton data mounted on the SkinnedMeshRenderer, it is no different from a normal MeshRenderer component.</li></ul>',9),d=[a];function l(i,h,c,m,f,p){return n(),t("div",null,d)}const k=e(o,[["render",l]]);export{y as __pageData,k as default};
