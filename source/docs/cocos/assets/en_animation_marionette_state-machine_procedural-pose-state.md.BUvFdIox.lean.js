import{_ as a,c as s,o,m as e,a as t}from"./chunks/framework.uQk9_EO2.js";const r="/docs/cocos/assets/state-machine.BS5KIMsx.png",x=JSON.parse('{"title":"Procedural Poses (states)","description":"","frontmatter":{},"headers":[],"relativePath":"en/animation/marionette/state-machine/procedural-pose-state.md","filePath":"en/animation/marionette/state-machine/procedural-pose-state.md","lastUpdated":1712305443000}'),n={name:"en/animation/marionette/state-machine/procedural-pose-state.md"},c=e("h1",{id:"procedural-poses-states",tabindex:"-1"},[t("Procedural Poses (states) "),e("a",{class:"header-anchor",href:"#procedural-poses-states","aria-label":'Permalink to "Procedural Poses (states)"'},"â€‹")],-1),i=e("p",null,[e("img",{src:r,alt:"state-machine.png"})],-1),d=e("p",null,[t("A "),e("strong",null,"Procedural Poses"),t(" (state) is a state in a state machine. The state holds a pose graph, and when the state machine runs into this state, the pose it produces is the output gesture of the pose graph.")],-1),p=[c,i,d];function l(h,m,u,_,P,f){return o(),s("div",null,p)}const B=a(n,[["render",l]]);export{x as __pageData,B as default};
