import{_ as s,v as t,b as o,R as a}from"./chunks/framework.5ffcbaff.js";const C=JSON.parse('{"title":"Network","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/editor/extension/api/network.md","filePath":"zh/manual/editor/extension/api/network.md"}'),e={name:"zh/manual/editor/extension/api/network.md"},n=a(`<h1 id="network" tabindex="-1">Network <a class="header-anchor" href="#network" aria-label="Permalink to &quot;Network&quot;">​</a></h1><p>Creator 网络工具函数</p><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h2><h3 id="get" tabindex="-1">get <a class="header-anchor" href="#get" aria-label="Permalink to &quot;get&quot;">​</a></h3><p>▸ <strong>get</strong>(url: <code>string</code>, data?: <code>Object</code>): Promise&lt;<code>Buffer</code>&gt;</p><p>Get 方式请求某个服务器数据</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;"><code>string</code></td><td>请求的 url</td></tr><tr><td style="text-align:left;"><code>data?</code></td><td style="text-align:left;"><code>Object</code></td><td>请求时带上的数据</td></tr></tbody></table><p><strong>返回结果</strong></p><p>Promise&lt;<code>Buffer</code>&gt;</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">network</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(RUNTIME_REQUEST_URL)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">ret</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ret</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ret</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="post" tabindex="-1">post <a class="header-anchor" href="#post" aria-label="Permalink to &quot;post&quot;">​</a></h3><p>▸ <strong>post</strong>(url: <code>string</code>, data?: <code>Object</code>): Promise&lt;<code>Buffer</code>&gt;</p><p>Post 方式请求某个服务器数据</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;"><code>string</code></td><td>请求的 url</td></tr><tr><td style="text-align:left;"><code>data?</code></td><td style="text-align:left;"><code>Object</code></td><td>请求时带上的数据</td></tr></tbody></table><p><strong>返回结果</strong></p><p>Promise&lt;<code>Buffer</code>&gt;</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Buffer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Network</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">post</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://creator-api.cocos.com/api/session/token</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ip</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">client_type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="portisoccupied" tabindex="-1">portIsOccupied <a class="header-anchor" href="#portisoccupied" aria-label="Permalink to &quot;portIsOccupied&quot;">​</a></h3><p>▸ <strong>portIsOccupied</strong>(port: <code>number</code>): Promise&lt;<code>boolean</code>&gt;</p><p>检查一个端口是否被占用</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>port</code></td><td style="text-align:left;"><code>number</code></td><td>端口号</td></tr></tbody></table><p><strong>返回结果</strong></p><p>Promise&lt;<code>boolean</code>&gt;</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> isOccupied </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Network</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">portIsOccupied</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">8000</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// false</span></span></code></pre></div><h3 id="queryiplist" tabindex="-1">queryIPList <a class="header-anchor" href="#queryiplist" aria-label="Permalink to &quot;queryIPList&quot;">​</a></h3><p>▸ <strong>queryIPList</strong>(): <code>string[]</code></p><p>查询当前电脑的 ip 列表</p><p><strong>返回结果</strong></p><p><code>string[]</code></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ipList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Network</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">queryIPList</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// [&quot;127.0.0.1&quot;, &quot;192.168.52.154&quot;]</span></span></code></pre></div><h3 id="testconnectserver" tabindex="-1">testConnectServer <a class="header-anchor" href="#testconnectserver" aria-label="Permalink to &quot;testConnectServer&quot;">​</a></h3><p>▸ <strong>testConnectServer</strong>(): Promise&lt;<code>boolean</code>&gt;</p><p>测试是否可以联通 passport.cocos.com 服务器</p><p><strong>返回结果</strong></p><p>Promise&lt;<code>boolean</code>&gt;</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Network</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">testConnectServer</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><h3 id="testhost" tabindex="-1">testHost <a class="header-anchor" href="#testhost" aria-label="Permalink to &quot;testHost&quot;">​</a></h3><p>▸ <strong>testHost</strong>(ip: <code>string</code>): Promise&lt;<code>boolean</code>&gt;</p><p>测试是否可以联通某一台主机</p><p><strong>请求参数</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ip</code></td><td style="text-align:left;"><code>string</code></td><td>ip 地址</td></tr></tbody></table><p><strong>返回结果</strong></p><p>Promise&lt;<code>boolean</code>&gt;</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> Editor</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Network</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">testHost</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">127.0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div>`,47),l=[n];function p(r,c,y,i,d,D){return t(),o("div",null,l)}const A=s(e,[["render",p]]);export{C as __pageData,A as default};
