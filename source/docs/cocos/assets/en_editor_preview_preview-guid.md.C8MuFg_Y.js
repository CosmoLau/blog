import{_ as e,c as o,o as t,a4 as s}from"./chunks/framework.uQk9_EO2.js";const m=JSON.parse('{"title":"Introduction to the Preview Process and Common Error Handling","description":"","frontmatter":{},"headers":[],"relativePath":"en/editor/preview/preview-guid.md","filePath":"en/editor/preview/preview-guid.md","lastUpdated":1712305443000}'),r={name:"en/editor/preview/preview-guid.md"},n=s('<h1 id="introduction-to-the-preview-process-and-common-error-handling" tabindex="-1">Introduction to the Preview Process and Common Error Handling <a class="header-anchor" href="#introduction-to-the-preview-process-and-common-error-handling" aria-label="Permalink to &quot;Introduction to the Preview Process and Common Error Handling&quot;">​</a></h1><p>This section introduces the browser preview process.</p><h2 id="process-introduction" tabindex="-1">Process Introduction <a class="header-anchor" href="#process-introduction" aria-label="Permalink to &quot;Process Introduction&quot;">​</a></h2><p>The browser preview is essentially the editor opening an express server that opens the user&#39;s default browser to access the preview URL when the &quot;Preview&quot; button is clicked. the preview template has some simple logic written in it for loading the engine and initializing the scene, while the loading of user assets relies heavily on the generation of <code>settings.json</code>, as <code>settings.json</code> contains the The current project&#39;s assets, scripts, and project settings are documented in <code>settings.json</code>. The preview <code>settings.json</code> is generated by calling the interface of the build extension, so if <code>settings.json</code> is not generated properly, select <strong>Developers -&gt; Open Build DevTools</strong> to see it.</p><h2 id="common-error-handling" tabindex="-1">Common Error Handling <a class="header-anchor" href="#common-error-handling" aria-label="Permalink to &quot;Common Error Handling&quot;">​</a></h2><p>When encountering a preview that does not display properly, first, open NetWork in DevTools to see if there are assets or scripts that failed to load at this time.</p><h3 id="settings-json-failed-to-load" tabindex="-1"><code>settings.json</code> failed to load <a class="header-anchor" href="#settings-json-failed-to-load" aria-label="Permalink to &quot;`settings.json` failed to load&quot;">​</a></h3><p>Before looking for the cause of this issue, make sure there are no error messages in the editor before previewing.</p><p>Under normal circumstances, <code>settings.json</code> load failure means <code>settings.json</code> generation fails, there will be error messages in console. Most common is a script error, because when generating <code>settings.json</code>, all scripts in the project are loaded in the build process. If any script contains illegal writing, an unexpected error will be thrown during the loading process and <code>settings.json</code> will fail to be generated. For specific error message information, you can refer to the hint in the error message. Usually the error content here is the UUID of the asset. The corresponding <strong>UUID</strong> can be copied to the <strong>Assets</strong> panel to search and locate the script.</p><p>For more information about the specific generation process of <code>settings.json</code>, please refer to the <a href="./../publish/build-guide">Introduction to the Build process and FAQ</a> documentation. The preview <code>settings.json</code> generation rules are basically the same as the generation rules with only debug mode checked, the difference is that the preview only sorts out asset information and does not package the assets.</p><h3 id="asset-loading-404" tabindex="-1">Asset loading 404 <a class="header-anchor" href="#asset-loading-404" aria-label="Permalink to &quot;Asset loading 404&quot;">​</a></h3><p>Usually, this is caused by asset loss or import failure. Please <strong>use the missing asset UUID to search in the editor&#39;s assets panel</strong>. If no assets are found, usually the asset is lost. You need to modify the scene or other assets that use this lost asset. If assets are found, you can try to re-import.</p>',12),i=[n];function a(d,c,l,h,p,g){return t(),o("div",null,i)}const f=e(r,[["render",a]]);export{m as __pageData,f as default};
