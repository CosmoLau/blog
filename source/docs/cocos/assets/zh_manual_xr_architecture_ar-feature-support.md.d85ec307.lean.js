import{_ as t,v as e,b as l,R as d}from"./chunks/framework.5ffcbaff.js";const c=JSON.parse('{"title":"支持的平台 AR 特性","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/xr/architecture/ar-feature-support.md","filePath":"zh/manual/xr/architecture/ar-feature-support.md"}'),a={name:"zh/manual/xr/architecture/ar-feature-support.md"},s=d('<h1 id="支持的平台-ar-特性" tabindex="-1">支持的平台 AR 特性 <a class="header-anchor" href="#支持的平台-ar-特性" aria-label="Permalink to &quot;支持的平台 AR 特性&quot;">​</a></h1><p>当前版本 AR 插件支持以下几种 AR 特性。</p><table><thead><tr><th style="text-align:left;">AR 特性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">AR Session</td><td style="text-align:left;">在目标平台上启用、禁用和配置 AR Session，以控制 AR 应用的生命周期。</td></tr><tr><td style="text-align:left;">Device Tracking</td><td style="text-align:left;">跟踪设备在物理空间中的位移和旋转。</td></tr><tr><td style="text-align:left;">AR Camera</td><td style="text-align:left;">渲染设备相机传输的视频流背景图像并可以根据环境进行光照估计。</td></tr><tr><td style="text-align:left;">Plane Tracking</td><td style="text-align:left;">检测和跟踪物理世界中的平面。</td></tr><tr><td style="text-align:left;">Image Tracking</td><td style="text-align:left;">检测和跟踪物理世界中的图像。</td></tr><tr><td style="text-align:left;">Hit Detection</td><td style="text-align:left;">支持使用射线（Ray cast）与跟踪实体进行命中检测。</td></tr><tr><td style="text-align:left;">Anchors</td><td style="text-align:left;">跟踪场景空间中的固定点。</td></tr><tr><td style="text-align:left;">Meshing</td><td style="text-align:left;">将物理世界网格化。</td></tr><tr><td style="text-align:left;">Light Estimate</td><td style="text-align:left;">光照估计。</td></tr></tbody></table><p>Cocos CreatorXR v1.1.0 对各平台的AR特性支持如下：</p><table><thead><tr><th style="text-align:left;">AR 特性\\平台</th><th style="text-align:left;">ARKit</th><th style="text-align:left;">ARCore</th><th style="text-align:left;">AREngine</th><th style="text-align:left;">Spaces</th></tr></thead><tbody><tr><td style="text-align:left;">AR Session</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td></tr><tr><td style="text-align:left;">Device Tracking</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td></tr><tr><td style="text-align:left;">AR Camera</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td></tr><tr><td style="text-align:left;">Plane Tracking</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td></tr><tr><td style="text-align:left;">Image Tracking</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td></tr><tr><td style="text-align:left;">Hit Detection</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Anchors</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Meshing</td><td style="text-align:left;">✓</td><td style="text-align:left;"></td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Light Estimate</td><td style="text-align:left;"></td><td style="text-align:left;">✓</td><td style="text-align:left;">✓</td><td style="text-align:left;"></td></tr></tbody></table>',5),i=[s];function n(r,g,f,x,y,h){return e(),l("div",null,i)}const p=t(a,[["render",n]]);export{c as __pageData,p as default};
