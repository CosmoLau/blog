import{_ as t,c as e,o as a,a5 as d}from"./chunks/framework.CqnjdYks.js";const u=JSON.parse('{"title":"光照模型","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/shader/surface-shader/lighting-mode.md","filePath":"zh/manual/shader/surface-shader/lighting-mode.md"}'),r={name:"zh/manual/shader/surface-shader/lighting-mode.md"},s=d('<h1 id="光照模型" tabindex="-1">光照模型 <a class="header-anchor" href="#光照模型" aria-label="Permalink to &quot;光照模型&quot;">​</a></h1><p>光照模型用于说明物体表面与是如何对光线产生影响和作用的。</p><p>目前支持的光照模型如下：</p><table><thead><tr><th>光照模型名称</th><th>说明</th></tr></thead><tbody><tr><td>standard</td><td>PBR 光照，支持 GGX BRDF 分布的各向同性与各向异性光照，支持卷积环境光照</td></tr><tr><td>toon</td><td>简单的卡通光照，阶梯状的光照效果</td></tr></tbody></table><p>与光照模型相关的内置 Shader 函数放在了 internal/chunks/lighting-models/includes/ 目录下，在 <a href="./shader-assembly.html">Surface Shader 组装</a> 时，通过 include 引入对应文件，就能完成光照计算。</p>',5),h=[s];function n(o,i,l,c,_,m){return a(),e("div",null,h)}const f=t(r,[["render",n]]);export{u as __pageData,f as default};
