import{_ as s,v as l,b as a,R as o}from"./chunks/framework.5ffcbaff.js";const n="/docs/cocos/assets/profiler.df88252e.png",e="/docs/cocos/assets/enable-profiler.cf95cfdd.png",p="/docs/cocos/assets/add-stats.41e76fa8.png",_=JSON.parse('{"title":"性能剖析器（Profiler）","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/advanced-topics/profiler.md","filePath":"zh/manual/advanced-topics/profiler.md"}'),t={name:"zh/manual/advanced-topics/profiler.md"},c=o('<h1 id="性能剖析器-profiler" tabindex="-1">性能剖析器（Profiler） <a class="header-anchor" href="#性能剖析器-profiler" aria-label="Permalink to &quot;性能剖析器（Profiler）&quot;">​</a></h1><p>性能剖析器是用于性能分析和统计的工具，目前仅限原生平台。</p><h2 id="默认统计数据" tabindex="-1">默认统计数据 <a class="header-anchor" href="#默认统计数据" aria-label="Permalink to &quot;默认统计数据&quot;">​</a></h2><ul><li><p>性能剖析器的效果展示如图：</p><p><img src="'+n+'" alt="profiler"></p></li><li><p>与左下角旧版的 <code>Profiler</code> 不同，新版的 <code>Profiler</code> 提供更详细的游戏性能与内存统计数据，并支持扩展，开发者可自由添加关心的性能及内存数据，默认的数据如下：</p><ol><li><p>核心数据统计 <code>CoreStats</code> ，包括：</p><ul><li>帧数</li><li>每帧渲染时间</li><li>GFX 后端</li><li>是否开启多线程</li><li>是否开启遮挡查询</li><li>是否开启阴影贴图</li><li>屏幕分辨率</li></ul></li><li><p>对象个数统计 <code>ObjectStats</code> ，包括：</p><ul><li>渲染调用次数</li><li>实例化个数</li><li>三角面个数</li><li>2D渲染批次个数</li><li>渲染模型个数</li><li>摄像机个数</li></ul></li><li><p>内存使用统计 <code>MemoryStats</code> ，包括：</p><ul><li>DebugRenderer 的顶点缓冲区大小</li><li>原生字体内存大小</li><li>贴图占用的显存</li><li>Buffer占用的显存</li><li>GeometryRenderer 顶点缓冲区大小</li></ul></li><li><p>性能数据统计 <code>PerformanceStats</code> ，显示逻辑线程调用堆栈，包含每个剖析代码段的：</p><ul><li>每帧执行总时间</li><li>每帧单次执行最大时间</li><li>每帧执行总次数</li><li>每帧单次执行平均时间</li><li>历史执行总时间</li><li>历史单次执行最大时间</li><li>历史执行总次数</li><li>历史单次执行平均时间</li></ul></li></ol></li></ul><h2 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h2><ul><li><p>在编辑器的主菜单：<strong>项目</strong> -&gt; <strong>项目设置</strong> -&gt; <strong>功能裁剪</strong> 里勾选 <strong>调试文字渲染器</strong>，此选项默认关闭，需要打开才能显示调试信息：</p><p><img src="'+e+`" alt="enable profiler"></p></li><li><p>在 <code>native/cocos/base/Config.h</code> 中把 <code>CC_USE_PROFILER</code> 宏定义改为 <code>1</code>，等性能及内存优化完成后，再改回 <code>0</code>，此时性能剖析器完全关闭，不会对代码造成任何副作用：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#ifndef</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CC_USE_PROFILER</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CC_USE_PROFILER</span><span style="color:#A6ACCD;"> 0</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span></span></code></pre></div></li><li><p>如果想要添加 <code>ObjectStats</code> 的统计信息， 比如统计每帧渲染模型的个数（需在每帧调用的函数如update中）：</p><p>下述宏都定义在 <a href="https://github.com/cocos/cocos-engine/blob/v3.7.0/native/cocos/profiler/Profiler.h" target="_blank" rel="noreferrer">native/cocos/profiler/Profiler.h</a> 内。开发者可根据需求使用。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RenderScene</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">update</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">uint32_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">stamp</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    ... </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">CC_PROFILE_OBJECT_UPDATE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Models</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li><code>CC_PROFILE_OBJECT_UPDATE</code> 用于更新统计数量</li><li><code>CC_PROFILE_OBJECT_INC</code> 用于递增统计数量</li><li><code>CC_PROFILE_OBJECT_DEC</code> 用于递减统计数量</li></ul></li><li><p>如果想要添加 <code>MemoryStats</code> 的统计信息， 比如统计 <code>GeometryRenderer</code> 顶点缓冲区的内存使用量：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GeometryVertexBuffer</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">gfx</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Device</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;font-style:italic;">device</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">uint32_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">maxVertices</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gfx</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">AttributeList</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">attributes</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">CC_PROFILE_MEMORY_INC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">GeometryVertexBuffer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">static_cast&lt;</span><span style="color:#C792EA;">uint32_t</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">_maxVertices </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li><code>CC_PROFILE_MEMORY_UPDATE</code> 用于更新内存使用量（字节）</li><li><code>CC_PROFILE_MEMORY_INC</code> 用于递增内存使用量（字节）</li><li><code>CC_PROFILE_MEMORY_DEC</code> 用于递减内存使用量（字节）</li></ul></li><li><p>如果想要添加 <code>PerformanceStats</code> 的统计信息， 比如统计 <code>ForwardPipeline::render</code> 函数的执行时间（毫秒）：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ForwardPipeline</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">render</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ccstd</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">vector</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">scene</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Camera</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">cameras</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">CC_PROFILE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ForwardPipelineRender</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li><li><p>通过以上修改后，编译，运行，屏幕上就可以看到新增的统计数据：</p><p><img src="`+p+'" alt="add-stats"></p></li></ul>',6),r=[c];function i(C,F,y,D,d,A){return l(),a("div",null,r)}const u=s(t,[["render",i]]);export{_ as __pageData,u as default};
