import{_ as t,c as e,o as l,a4 as s}from"./chunks/framework.uQk9_EO2.js";const a="/docs/cocos/assets/layer-gizmo.iTyTFZGj.png",r="/docs/cocos/assets/layer-edit.BK63qPIq.png",x=JSON.parse('{"title":"Layer","description":"","frontmatter":{},"headers":[],"relativePath":"en/concepts/scene/layer.md","filePath":"en/concepts/scene/layer.md","lastUpdated":1712305443000}'),o={name:"en/concepts/scene/layer.md"},i=s('<h1 id="layer" tabindex="-1">Layer <a class="header-anchor" href="#layer" aria-label="Permalink to &quot;Layer&quot;">​</a></h1><p>The <code>Layer</code> property of the Node is an unsigned 32-bit integer, supporting up to 32 different types of <code>Layer</code>, which can be set in <strong>Project -&gt; Project Settings -&gt; <a href="./../../editor/project/#layers">Layers</a></strong> in the menu bar above the editor. The developer can customize the Layer <strong>0 ~ 19</strong>, and the remaining 12 Layers are the engine&#39;s built-in ones.</p><p>The <code>Visibility</code> property of the Camera and the <code>Layer</code> property of the Node are both used to control the visibility of nodes. However, a node can only be seen by the camera if the <code>Layer</code> property set in the node is included in the <code>Visibility</code> of the camera. The <code>Visibility</code> property of the camera uses bitwise operators (such as <code>|</code> and <code>&amp;</code>) to determine whether a node&#39;s <code>Layer</code> should be visible, and supports selecting multiple Layers at the same time. See the <a href="./../../editor/components/camera-component">Camera — Set the Visibility property</a> documentation for details.</p><h2 id="the-engine-s-built-in-layers" tabindex="-1">The engine&#39;s built-in Layers <a class="header-anchor" href="#the-engine-s-built-in-layers" aria-label="Permalink to &quot;The engine&#39;s built-in Layers&quot;">​</a></h2><p><img src="'+a+'" alt="layer gizmo"></p><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Description</th><th style="text-align:left;">Property Value</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>NONE</strong></td><td style="text-align:left;">Set all invisible</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;"><strong>IGNORE_RAYCAST</strong></td><td style="text-align:left;">Setting to ignore ray detection</td><td style="text-align:left;">1 &lt;&lt; 20</td></tr><tr><td style="text-align:left;"><strong>GIZMOS</strong></td><td style="text-align:left;">Set gizmo information visible</td><td style="text-align:left;">1 &lt;&lt; 21</td></tr><tr><td style="text-align:left;"><strong>EDITOR</strong></td><td style="text-align:left;">Set editor visible</td><td style="text-align:left;">1 &lt;&lt; 22</td></tr><tr><td style="text-align:left;"><strong>UI_3D</strong></td><td style="text-align:left;">Set the <code>3D UI</code> node to be visible</td><td style="text-align:left;">1 &lt;&lt; 23</td></tr><tr><td style="text-align:left;"><strong>SCENE_GIZMO</strong></td><td style="text-align:left;">Set scene gizmo visible</td><td style="text-align:left;">1 &lt;&lt; 24</td></tr><tr><td style="text-align:left;"><strong>UI_2D</strong></td><td style="text-align:left;">Set <code>2D UI</code> nodes visible</td><td style="text-align:left;">1 &lt;&lt; 25</td></tr><tr><td style="text-align:left;"><strong>PROFILER</strong></td><td style="text-align:left;">Set the profiler node to be visible</td><td style="text-align:left;">1 &lt;&lt; 28</td></tr><tr><td style="text-align:left;"><strong>DEFAULT</strong></td><td style="text-align:left;">Set the default node to be visible</td><td style="text-align:left;">1 &lt;&lt; 30</td></tr><tr><td style="text-align:left;"><strong>ALL</strong></td><td style="text-align:left;">Set all nodes to be visible</td><td style="text-align:left;">0xffffffff</td></tr></tbody></table><h2 id="user-defined-layers" tabindex="-1">User-defined Layers <a class="header-anchor" href="#user-defined-layers" aria-label="Permalink to &quot;User-defined Layers&quot;">​</a></h2><p><img src="'+r+'" alt="layer gizmo"></p>',8),n=[i];function d(c,y,g,f,h,p){return l(),e("div",null,n)}const m=t(o,[["render",d]]);export{x as __pageData,m as default};
