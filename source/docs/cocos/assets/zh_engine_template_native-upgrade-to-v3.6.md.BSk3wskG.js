import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.uQk9_EO2.js";const g=JSON.parse('{"title":"v3.5 已构建工程升级 v3.6 指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh/engine/template/native-upgrade-to-v3.6.md","filePath":"zh/engine/template/native-upgrade-to-v3.6.md","lastUpdated":1712305443000}'),e={name:"zh/engine/template/native-upgrade-to-v3.6.md"},t=n(`<h1 id="v3-5-已构建工程升级-v3-6-指南" tabindex="-1">v3.5 已构建工程升级 v3.6 指南 <a class="header-anchor" href="#v3-5-已构建工程升级-v3-6-指南" aria-label="Permalink to &quot;v3.5 已构建工程升级 v3.6 指南&quot;">​</a></h1><p>本文将详细介绍 Cocos Creator 原生构建工程从 3.5.0 ~ 3.5.x 升级到 3.6 的注意事项。修改仅针对项目工程下的 native 目录。</p><h2 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h2><p>使用新版本的引擎打开旧版本的工程，待升级完成之后，构建目标平台。为避免升级失败，请先备份好工程，然后依据下列步骤进行升级。</p><h2 id="android-平台" tabindex="-1">Android 平台 <a class="header-anchor" href="#android-平台" aria-label="Permalink to &quot;Android 平台&quot;">​</a></h2><h3 id="文件修改" tabindex="-1">文件修改 <a class="header-anchor" href="#文件修改" aria-label="Permalink to &quot;文件修改&quot;">​</a></h3><ul><li>删除文件：jni/main.cpp</li><li>android/CMakeLists.txt：删除 <code>\${CMAKE_CURRENT_LIST_DIR}/jni/main.cpp</code></li></ul><h3 id="编译修改" tabindex="-1">编译修改 <a class="header-anchor" href="#编译修改" aria-label="Permalink to &quot;编译修改&quot;">​</a></h3><p>为减少包体大小，更改了 <code>CMAKE_C_FLAGS_RELEASE</code>、<code>CMAKE_CXX_FLAGS_RELEASE</code> 编译参数 <code>visibility</code> 的默认值：从 <code>default</code> 改成了 <code>hidden</code>。改完后 arm64-v8a 下的引擎动态库可以减少约 3.5M。针对这个修改，若 release 版本 <code>jni</code> 出现接口找不到，请先检查接口是否有添加 <code>JNIEXPORT</code> 的声明。例如：</p><ul><li><p>旧代码</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Java_com_google_android_games_paddleboat_GameControllerManager_onMouseConnected</span></span></code></pre></div></li><li><p>修改后的代码</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JNIEXPORT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JNICALL Java_com_google_android_games_paddleboat_GameControllerManager_onMouseConnected</span></span></code></pre></div></li></ul><h2 id="代码修改" tabindex="-1">代码修改 <a class="header-anchor" href="#代码修改" aria-label="Permalink to &quot;代码修改&quot;">​</a></h2><ul><li><p>有自定义 jsb 接口的工程：须删除与 <code>NonRefNativePtrCreatedByCtorMap</code> 相关的代码</p></li><li><p>JSB 手动绑定的代码需要置空 <code>_finalize</code> 函数, 可参考<a href="./../../advanced-topics/JSB2.0-learning#cpp-命名空间namespace">JSB 2.0 绑定教程 C++ 对象的生命周期管理</a>。</p><p>代码示例如下：</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> js_cc_gfx_Size_finalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // NOLINT(readability-identifier-naming)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NonRefNativePtrCreatedByCtorMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SE_THIS_OBJECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gfx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(s));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (iter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NonRefNativePtrCreatedByCtorMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NonRefNativePtrCreatedByCtorMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">erase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(iter);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        auto*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cobj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SE_THIS_OBJECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gfx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(s);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        JSB_FREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cobj);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SE_BIND_FINALIZE_FUNC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(js_cc_gfx_Size_finalize)</span></span></code></pre></div><p>改为</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> js_cc_gfx_Size_finalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">se</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // NOLINT(readability-identifier-naming)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SE_BIND_FINALIZE_FUNC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(js_cc_gfx_Size_finalize)</span></span></code></pre></div></li></ul><h2 id="脚本编写注意事项" tabindex="-1">脚本编写注意事项 <a class="header-anchor" href="#脚本编写注意事项" aria-label="Permalink to &quot;脚本编写注意事项&quot;">​</a></h2><p>由于 Native 引擎的实现和非 Native 的引擎在实现上略有差异，开发者须了解这些差异，现整理如下：</p><ul><li><p><code>Readonly</code>：在 Native 平台上，为减少内存使用，获取到的属性是新创建的对象。</p><p>关于 <code>Readonly</code> 的说明可参考 <a href="./../../scripting/readonly#readonly">开发注意事项 - ReaOnly</a></p></li></ul>`,15),h=[t];function l(p,k,d,r,E,o){return a(),i("div",null,h)}const y=s(e,[["render",l]]);export{g as __pageData,y as default};
