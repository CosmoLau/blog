import{_ as t,v as a,b as s,R as e}from"./chunks/framework.5ffcbaff.js";const o="/docs/cocos/assets/create-asset.b565ec0c.png",r="/docs/cocos/assets/variant-asset.5a78c7d8.png",n="/docs/cocos/assets/empty-varint.ef74d5cb.png",i="/docs/cocos/assets/select.e0148677.png",c="/docs/cocos/assets/overrides.103cf0f3.png",l="/docs/cocos/assets/controller.cb7c7389.png",y=JSON.parse('{"title":"动画图变体","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/animation/marionette/animation-variant.md","filePath":"zh/manual/animation/marionette/animation-variant.md"}'),d={name:"zh/manual/animation/marionette/animation-variant.md"},p=e('<h1 id="动画图变体" tabindex="-1">动画图变体 <a class="header-anchor" href="#动画图变体" aria-label="Permalink to &quot;动画图变体&quot;">​</a></h1><p>如果两个动画图他们的动画逻辑相同但对应的动画剪辑不同，重新制作一个动画图会带来额外的维护负担。通过使用动画图变体，可以更好的解决此问题。</p><p>动画图变体是一种资源，在 <strong>资源管理器</strong> 内右键创建一个新的动画图变体资源：</p><p><img src="'+o+'" alt="create"></p><p>创建后的变体如下图所示：</p><p><img src="'+r+'" alt="default"></p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><p><img src="'+n+'" alt="default"></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Animation Graph</strong></td><td style="text-align:left;">需要变体的动画图，通过下拉或者从 <strong>资源管理器</strong> 内选择 <br> <img src="'+i+'" alt="select"></td></tr><tr><td style="text-align:left;"><strong>Clip Overrides</strong></td><td style="text-align:left;">需要覆盖的动画剪辑 <br> <img src="'+c+'" alt="override"> <br> 通过右侧 Overrides 列，从 <strong>资源管理器</strong> 内选择需要替换的动画剪辑</td></tr></tbody></table><h2 id="使用变体" tabindex="-1">使用变体 <a class="header-anchor" href="#使用变体" aria-label="Permalink to &quot;使用变体&quot;">​</a></h2><p>在 Animation Controller 组件上下拉其 <strong>Animation Graph</strong> 属性即可选择不同的变体。</p><p><img src="'+l+'" alt="controller"></p>',12),m=[p];function h(g,_,f,b,u,v){return a(),s("div",null,m)}const q=t(d,[["render",h]]);export{y as __pageData,q as default};
