import{_ as e,c as t,o as a,a4 as s}from"./chunks/framework.uQk9_EO2.js";const o="/docs/cocos/assets/dynamic-mesh.BxExBpfE.gif",f=JSON.parse('{"title":"程序化创建网格","description":"","frontmatter":{},"headers":[],"relativePath":"zh/asset/model/scripting-mesh.md","filePath":"zh/asset/model/scripting-mesh.md","lastUpdated":1712305443000}'),r={name:"zh/asset/model/scripting-mesh.md"},i=s('<h1 id="程序化创建网格" tabindex="-1">程序化创建网格 <a class="header-anchor" href="#程序化创建网格" aria-label="Permalink to &quot;程序化创建网格&quot;">​</a></h1><p>当由 DCC（Digital Content Creation）软件制作或引擎内的地形编辑器制作的模型无法满足需求时，可以通过 API 来创建网格。如需要在运行时创建某种可以生长的蛇、动态编辑模型或实现某些曲面，都可以通过程序化来创建网格。</p><h2 id="创建网格" tabindex="-1">创建网格 <a class="header-anchor" href="#创建网格" aria-label="Permalink to &quot;创建网格&quot;">​</a></h2><p>引擎支持两种网格：<strong>静态网格</strong> 和 <strong>动态网格</strong>，适用于不同的场景，开发者可按需使用。</p><ul><li>静态网格，通过 <code>utils.MeshUtils.createMesh</code> 创建，一旦创建成功，网格内的几何体不可编辑的。</li><li>动态网格：通过 <code>utils.MeshUtils.createDynamicMesh</code> 创建，创建成功后，网格内的几何体仍然可以修改。</li></ul><p>返回值为 <code>Mesh</code> 组件，因此我们方便的将其赋值给 <code>MeshRenderer</code> 的 <code>mesh</code> 属性，如此即可将其显示在屏幕上。</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><p>API 请参考 <a href="./__APIDOC__/zh/class/utils.MeshUtils">MeshUtils</a>。</p><h2 id="范例" tabindex="-1">范例 <a class="header-anchor" href="#范例" aria-label="Permalink to &quot;范例&quot;">​</a></h2><p><img src="'+o+'" alt="dynamic mesh"></p><p>动态网格的范例请参考 <a href="https://github.com/cocos/cocos-test-projects/tree/v3.8" target="_blank" rel="noreferrer">GitHub</a>。</p>',11),c=[i];function h(n,l,d,p,_,m){return a(),t("div",null,c)}const g=e(r,[["render",h]]);export{f as __pageData,g as default};
