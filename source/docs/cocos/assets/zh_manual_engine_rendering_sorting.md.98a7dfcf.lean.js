import{_ as s,v as n,b as a,R as o}from"./chunks/framework.5ffcbaff.js";const t="/docs/cocos/assets/sorting.54e0f2f1.png",r="/docs/cocos/assets/sorting-layer.ecf8b40e.png",l="/docs/cocos/assets/project-settings.1d31ed1c.png",p="/docs/cocos/assets/default-sort.dc2a611a.png",e="/docs/cocos/assets/tech.9555ccb6.png",c="/docs/cocos/assets/sprite-renderer-layer.bc146740.png",i="/docs/cocos/assets/sorting-layer1.9b960e24.png",y="/docs/cocos/assets/result-sorting-layer.6ae6785a.png",g="/docs/cocos/assets/sorting-order1.ce9c190b.png",D="/docs/cocos/assets/sorting-order1-result.87d672f9.png",q=JSON.parse('{"title":"渲染排序组件","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/engine/rendering/sorting.md","filePath":"zh/manual/engine/rendering/sorting.md"}'),F={name:"zh/manual/engine/rendering/sorting.md"},d=o('<h1 id="渲染排序组件" tabindex="-1">渲染排序组件 <a class="header-anchor" href="#渲染排序组件" aria-label="Permalink to &quot;渲染排序组件&quot;">​</a></h1><p>对于大部分渲染情况来说，默认的排序已经满足需求。但是实际上由于半透明物体的特殊性，我们可能需要手动对这些物体进行排序。对于这种情况，可以使用 <strong>渲染排序组件</strong>。</p><p>在 <strong>属性检查器</strong> 内点击 <strong>添加组件</strong> 按钮选择 <strong>Sorting</strong> 即可添加。</p><p><img src="'+t+'" alt="sorting"></p><blockquote><p><strong>注意</strong>：该组件只对持有 <strong>MeshRenderer</strong> 和 <strong>SpriteRenderer</strong> 组件的节点生效。</p></blockquote><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Sorting Layer</strong></td><td style="text-align:left;">选择 <strong>排序图层</strong> <br> 通过下拉框选择不同的排序图层，这些图层需要在 <strong>项目设置</strong> -&gt; <strong>排序图层</strong> 内设置后才可以选择 <br> <img src="'+r+'" alt="sortring-layer"></td></tr><tr><td style="text-align:left;"><strong>Sorting Order</strong></td><td style="text-align:left;">在相同图层内的排序优先级</td></tr></tbody></table><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><ul><li><p>在 <strong>项目设置</strong> -&gt; <strong>排序图层</strong> 内添加排序图层 Sorting Layer 1。</p><p><img src="'+l+'" alt="setting"></p></li><li><p>按照示例中搭建如下的场景：</p><p><img src="'+p+'" alt="default"></p></li><li><p>立方体和球体的材质需要选择使用半透明渲染队列：</p><p><img src="'+e+'" alt="technique"></p><p>添加 Sorting 组件且属性保持默认。</p></li><li><p>图片需要使用 <strong>SpriteRenderer</strong> 组件（注意不是 Sprite 组件），着色器需要使用 <strong>builtin-sprite-renderer</strong>，并添加 Sorting 组件，保持属性默认：</p><p><img src="'+c+'" alt="layer1"></p></li></ul><p>此时可观察到这些节点的排序方式是按照默认顺序排序。</p><h3 id="sorting-layer-示例" tabindex="-1">Sorting Layer 示例 <a class="header-anchor" href="#sorting-layer-示例" aria-label="Permalink to &quot;Sorting Layer 示例&quot;">​</a></h3><p>调整后方 SpriteRenderer 节点的 Sorting Layer 如下图：</p><p><img src="'+i+'" alt="layer 2"></p><p>由于自定义的层级是高于立方体和球体的层级 default 的，因此可以观察到下图的结果：</p><p><img src="'+y+'" alt="result"></p><h3 id="sorting-order-示例" tabindex="-1">Sorting Order 示例 <a class="header-anchor" href="#sorting-order-示例" aria-label="Permalink to &quot;Sorting Order 示例&quot;">​</a></h3><p>Sorting Order 属性可以调整同一个排序图层内物体渲染的优先级。</p><p>场景和上述的示例类似，但是将立方体的 Sorting 组件内的 Sorting Order 属性调整为 1：</p><p><img src="'+g+'" alt="order 1"></p><p>此时，立方体在渲染队列内的优先级是高于球体的，因此可以观察下图的结果：</p><p><img src="'+D+`" alt="result"></p><h2 id="脚本示例" tabindex="-1">脚本示例 <a class="header-anchor" href="#脚本示例" aria-label="Permalink to &quot;脚本示例&quot;">​</a></h2><p>下面的代码演示了如何在运行时修改 Sorting Order 以及 Sorting Layer。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_decorator</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Component</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Sorting</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SortingLayers</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> ccclass</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> property </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _decorator</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ccclass</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">SortingSample</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SortingSample</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">property</span><span style="color:#A6ACCD;">(Sorting)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">sorting</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Sorting</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">sorting</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sortingLayer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SortingLayers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLayerIndexByName</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Sorting Layer 1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">sorting</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sortingOrder</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><strong>排序层管理器（SortingLayers）</strong> 可以在运行时获取排序图层的名称和索引，但无法在运行时修改。</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><p>渲染排序组件的 API 可以参考 <a href="./__APIDOC__/zh/class/Sorting.html">Sorting</a> 以及 <a href="./__APIDOC__/zh/class/SortingLayers.html">排序层管理器 SortingLayers</a> 。</p>`,27),C=[d];function A(h,m,_,u,S,f){return n(),a("div",null,C)}const x=s(F,[["render",A]]);export{q as __pageData,x as default};
