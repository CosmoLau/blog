import{_ as e,c as t,o as i,a4 as a}from"./chunks/framework.uQk9_EO2.js";const _=JSON.parse('{"title":"Lighting Models","description":"","frontmatter":{},"headers":[],"relativePath":"en/shader/surface-shader/lighting-mode.md","filePath":"en/shader/surface-shader/lighting-mode.md","lastUpdated":1712305443000}'),o={name:"en/shader/surface-shader/lighting-mode.md"},n=a('<h1 id="lighting-models" tabindex="-1">Lighting Models <a class="header-anchor" href="#lighting-models" aria-label="Permalink to &quot;Lighting Models&quot;">â€‹</a></h1><p>The lighting models are used to describe how the surface of an object affects and interacts with light.</p><p>The currently supported lighting models are as follows.</p><table><thead><tr><th>Light Model Name</th><th>Description</th></tr></thead><tbody><tr><td>standard</td><td>PBR lighting, supporting GGX BRDF distribution of isotropic and anisotropic lighting, supporting convoluted ambient lighting.</td></tr><tr><td>toon</td><td>Simple cartoon lighting, step-like lighting effect.</td></tr></tbody></table><p>The built-in shader functions related to the lighting models are placed in the internal/chunks/lighting-models/includes/ folder, During the <a href="./shader-assembly">Surface Shader Assembly</a> phase, using <code>include</code> to import the corresponding code, the lighting calculation can be completed.</p>',5),d=[n];function s(r,h,l,c,g,p){return i(),t("div",null,d)}const m=e(o,[["render",s]]);export{_ as __pageData,m as default};
