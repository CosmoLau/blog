import{_ as e,c as o,o as t,a4 as a}from"./chunks/framework.uQk9_EO2.js";const n="/docs/cocos/assets/select-android-platform.DW1D42uF.png",r="/docs/cocos/assets/build-android-platform.BzHwSHor.png",i="/docs/cocos/assets/select-ios-platform.B-2hTJgq.png",p="/docs/cocos/assets/build-ios-platform.CYGuoUTI.png",c="/docs/cocos/assets/open-ios-build-folder.2Z_EA6jo.png",s="/docs/cocos/assets/select-xcodeproj.DYdXMMj-.png",l="/docs/cocos/assets/compile-with-xcode.B-FwDXwn.png",d="/docs/cocos/assets/select-spaces-platform.D6VGi1Qq.png",P=JSON.parse('{"title":"Building And Publishing AR Project","description":"","frontmatter":{},"headers":[],"relativePath":"en/xr/project-deploy/ar-proj-pub.md","filePath":"en/xr/project-deploy/ar-proj-pub.md","lastUpdated":1712336288000}'),u={name:"en/xr/project-deploy/ar-proj-pub.md"},g=a('<h1 id="building-and-publishing-ar-project" tabindex="-1">Building And Publishing AR Project <a class="header-anchor" href="#building-and-publishing-ar-project" aria-label="Permalink to &quot;Building And Publishing AR Project&quot;">​</a></h1><p>After completing the project development, you can build and publish the AR application by clicking on <strong>Menu -&gt; Project -&gt; Build</strong>.</p><h2 id="arcore、arengine" tabindex="-1">ARCore、AREngine <a class="header-anchor" href="#arcore、arengine" aria-label="Permalink to &quot;ARCore、AREngine&quot;">​</a></h2><p>To publish an AR application for Android and Huawei platforms, create a new build task and select the <code>Android</code> platform.</p><p><img src="'+n+'" alt="ar-proj-pub/select-android-platform.png"></p><p>Enter the application ID and check <strong>Enable AR</strong>. Connect your mobile device and click <strong>Build -&gt; Make -&gt; Run</strong> to publish the AR application.</p><p><img src="'+r+'" alt="ar-proj-pub/build-android-platform.png"></p><blockquote><p><strong>Note</strong>：The rendering backend for AR applications on the Android platform does not support VULKAN.</p></blockquote><h2 id="arkit" tabindex="-1">ARKit <a class="header-anchor" href="#arkit" aria-label="Permalink to &quot;ARKit&quot;">​</a></h2><p>For iOS publishing, please refer to the <a href="./../../editor/publish/ios/build-options-ios">Build Options - iOS</a>. Make sure to configure your developer account in Xcode.</p><p>To publish an AR application for the iOS platform, create a new build task and select the <code>iOS</code> platform.</p><p><img src="'+i+'" alt="ar-proj-pub/select-ios-platform.png"></p><p>For the Application Bundle name, it is recommended to use the same name as the developer account configured in Xcode. Select iPhone OS Application as the target platform and check <strong>Enable AR</strong>.</p><p>Click <strong>Build</strong> to generate the Xcode project.</p><p><img src="'+p+'" alt="ar-proj-pub/build-ios-platform.png"></p><blockquote><p><strong>Note</strong>: Currently, Cocos Creator only supports building the iOS project. Compilation and running need to be done in Xcode.</p></blockquote><p>After the build is complete, locate the generated <code>xcodeproj</code> file and open it with Xcode. Configure the signing and developer team, connect the device, and click Run to run the application.</p><p><img src="'+c+'" alt="ar-proj-pub/open-ios-build-folder.png"></p><p><img src="'+s+'" alt="ar-proj-pub/select-xcodeproj.png"></p><p><img src="'+l+'" alt="compile-with-xcode"></p><h2 id="spaces" tabindex="-1">Spaces <a class="header-anchor" href="#spaces" aria-label="Permalink to &quot;Spaces&quot;">​</a></h2><p>To publish an AR application for Qualcomm Spaces devices, create a new build task and select the <code>XR Spaces</code> platform.</p><p><img src="'+d+'" alt="select-spaces-platform"></p><p>Enter the application ID, connect the Spaces device (or mobile device for standalone devices), and click <strong>Build -&gt; Make -&gt; Run</strong> to publish the AR application.</p>',24),h=[g];function m(b,f,_,A,j,k){return t(),o("div",null,h)}const S=e(u,[["render",m]]);export{P as __pageData,S as default};
