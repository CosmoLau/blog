import{_ as e,c as t,o,a4 as n}from"./chunks/framework.uQk9_EO2.js";const i="/docs/cocos/assets/appid.YUUg94kT.png",a="/docs/cocos/assets/build.DkCxZoVt.png",s="/docs/cocos/assets/build-options.DgrLzqCn.png",r="/docs/cocos/assets/package.BmisIoQt.png",l="/docs/cocos/assets/tool.DiZ19x0J.jpg",d="/docs/cocos/assets/performance.CFSrnpLo.png",p="/docs/cocos/assets/physx-options.CVXCGkgE.png",x=JSON.parse('{"title":"Publish to Douyin Mini Games","description":"","frontmatter":{},"headers":[],"relativePath":"en/editor/publish/publish-bytedance-mini-game.md","filePath":"en/editor/publish/publish-bytedance-mini-game.md","lastUpdated":1712305443000}'),c={name:"en/editor/publish/publish-bytedance-mini-game.md"},h=n('<h1 id="publish-to-douyin-mini-games" tabindex="-1">Publish to Douyin Mini Games <a class="header-anchor" href="#publish-to-douyin-mini-games" aria-label="Permalink to &quot;Publish to Douyin Mini Games&quot;">​</a></h1><blockquote><p><strong>Note</strong>: some platforms only have Chinese documentation available when visiting the platform&#39;s website. It may be necessary to use Google Translate in-order to review the documentation.</p></blockquote><p><strong>Douyin Mini Games</strong> are developed based on Douyin full products, which do not require users to download. This is a brand-new game type that can be played on tap.</p><p>The game submission, review and release process of a mini-game needs to comply with the requirements and standard processes of the Douyin official specification. For specific information, please refer to the links at the end of this document.</p><h2 id="preparation" tabindex="-1">Preparation <a class="header-anchor" href="#preparation" aria-label="Permalink to &quot;Preparation&quot;">​</a></h2><ol><li><p>Download the <a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/developer-instrument/developer-instrument-update-and-download" target="_blank" rel="noreferrer">Douyin DevTools [cn]</a> and install it..</p></li><li><p>Refer to the <a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/guide/minigame/introduction" target="_blank" rel="noreferrer">Douyin Mini Game Access Guide [cn]</a> to register, login and apply for mini games on the <a href="https://microapp.bytedance.com" target="_blank" rel="noreferrer">Douyin Developer Platform [cn]</a>.</p></li><li><p>After the application is approved, find the appid in <strong>Development Management -&gt; Development Settings</strong> of the developer platform.</p><p><img src="'+i+'" alt="appid"></p></li></ol><h2 id="publishing-process" tabindex="-1">Publishing Process <a class="header-anchor" href="#publishing-process" aria-label="Permalink to &quot;Publishing Process&quot;">​</a></h2><ol><li><p>Use Cocos Creator to open the project to be published, open the <strong>Build</strong> panel from <strong>Menu Bar -&gt; Project</strong>, select <strong>Douyin Mini Game</strong> in <strong>Platform</strong>, fill in the <strong>appid</strong>, and click <strong>Build</strong>.</p><p><img src="'+a+'" alt="build"></p><p>Click on the <strong>Douyin Mini Game</strong> below to expand the build options configuration of Douyin Mini Game:</p><p><img src="'+s+'" alt="Douyin options"></p><p>For the general build options settings, please refer to <a href="./build-options">General Build Options</a> for details. The Douyin Mini Games specific build options are shown below, please refer to the <strong>Build Options</strong> section below for the filling rules.</p></li><li><p>After the relevant parameters of the <strong>Build</strong> panel are set, click <strong>Build</strong> button.<br>When the build is complete, click the folder icon button below the corresponding build task to open the build release path, notice that a directory <code>bytedance-mini-game</code> (with the same name as the Build Task Name) is generated in the default release path <code>build</code> directory, which already contains the configuration files <code>game.json</code> and <code>project.config.json</code> of the ByteDance Mini Games environment.</p><p><img src="'+r+'" alt="package"></p></li><li><p>Use the <strong>Douyin DevTools</strong> to open the <code>bytedance-mini-game</code> folder generated by the build, open the Douyin game project and preview the debugging game content. Please refer to the <a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/developer-instrument/development-assistance/mini-app-developer-instrument" target="_blank" rel="noreferrer">Introduction to Douyin DevTools [cn]</a> for details on how to use the developer tools.</p><p><img src="'+l+'" alt="tool"></p></li></ol><h3 id="build-options" tabindex="-1">Build Options <a class="header-anchor" href="#build-options" aria-label="Permalink to &quot;Build Options&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Options</th><th style="text-align:left;">Description</th><th style="text-align:left;">Field name (for publishing with command line)</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Start Scene Asset Bundle</strong></td><td style="text-align:left;">If set, the start scene and its related dependent resources are built into the built-in Asset Bundle — <a href="./../../asset/bundle#内置-asset-bundle">start-scene</a> to speed up the resource loading of the start scene.</td><td style="text-align:left;"><code>startSceneAssetBundle</code></td></tr><tr><td style="text-align:left;"><strong>Orientation</strong></td><td style="text-align:left;">Device orientation, it will be written to <code>game.json</code> file.</td><td style="text-align:left;"><code>orientation</code></td></tr><tr><td style="text-align:left;"><strong>AppID</strong></td><td style="text-align:left;">The appid of the Douyin Mini Games, it will be written to <code>project.config.json</code> file.</td><td style="text-align:left;"><code>appid</code></td></tr><tr><td style="text-align:left;"><strong>Remote server address</strong></td><td style="text-align:left;">This option is used to fill in the address of the remote server where the resources are stored. Developers need to manually upload the <code>remote</code> folder from the release package directory to the filled resource server after build.</td><td style="text-align:left;"><code>remoteServerAddress</code></td></tr><tr><td style="text-align:left;"><strong>Open data context root</strong></td><td style="text-align:left;">For access to Open Data Context, please refer to the <a href="./build-open-data-context">Open Data Context</a> documentation for details.</td><td style="text-align:left;"><code>buildOpenDataContextTemplate</code></td></tr><tr><td style="text-align:left;"><strong>Native PhysX Physics System</strong></td><td style="text-align:left;">This option is used to set whether to use the PhysX physics system, please see the <strong>Native Physics</strong> section below for more details.</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="native-physics" tabindex="-1">Native Physics <a class="header-anchor" href="#native-physics" aria-label="Permalink to &quot;Native Physics&quot;">​</a></h2><p>The Douyin platform has always been committed to providing developers with the more powerful performance and basic capabilities. TikTok will provide PhysX native physics interfaces for Douyin mini games in v16.3 and later versions.</p><p>Cocos Creator and the Douyin platform have conducted in-depth collaboration, with the experimental feature in <strong>v3.2</strong> to support the use of PhysX physics capabilities provided by the Douyin platform in Douyin Mini Games, optimizing the performance of physics calculations, and having a nearly 100% performance improvement compared to Bullet physics:</p><p><img src="'+d+'" alt="compare performance"></p><p>The prerequisite for using native physics is to set <strong>Physics System</strong> to <strong>PhysX</strong> in <strong>Project -&gt; Project Settings -&gt; Feature Cropping</strong> in the Creator main menu bar. Then open the <strong>Build</strong> panel with the <strong>Platform</strong> option set to <strong>Douyin Mini Game</strong>, and see the native physics related configuration options as follows:</p><p><img src="'+p+'" alt="PhysX options"></p><table><thead><tr><th style="text-align:left;">Options</th><th style="text-align:left;">Description</th><th style="text-align:left;">Field name (for publishing with command line)</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Not to pack the built-in PhysX library</strong></td><td style="text-align:left;">If checked, the built-in PhysX library files will not be packaged when building, which helps to reduce the package size, but does not support PhysX running on some application platforms of Douyin, such as TikTok (iOS version) and DevTools.<br>If unchecked, Creator supports PhysX running on the full application platform of Douyin.</td><td style="text-align:left;"><code>physX.notPackPhysXLibs</code></td></tr><tr><td style="text-align:left;"><strong>Multithreading mode</strong></td><td style="text-align:left;">If checked, multithreading mode is enabled.</td><td style="text-align:left;"><code>physX.multiThread</code></td></tr><tr><td style="text-align:left;"><strong>Number of sub-threads</strong></td><td style="text-align:left;">The number of sub-threads when multithreading mode is enabled.</td><td style="text-align:left;"><code>physX.subThreadCount</code></td></tr><tr><td style="text-align:left;"><strong>Tolerance of errors</strong></td><td style="text-align:left;">If this option is enabled, the precision will be lower when using multithreading than single threading.</td><td style="text-align:left;"><code>physX.epsilon</code></td></tr></tbody></table><h2 id="subpackage-loading" tabindex="-1">Subpackage Loading <a class="header-anchor" href="#subpackage-loading" aria-label="Permalink to &quot;Subpackage Loading&quot;">​</a></h2><p>The Douyin Mini Game requires a specific version to support the subpackage feature, and the version requirements for the Douyin product are as follows:</p><table><thead><tr><th style="text-align:left;">Product</th><th style="text-align:left;">Android</th><th style="text-align:left;">iOS</th></tr></thead><tbody><tr><td style="text-align:left;">TikTok</td><td style="text-align:left;">v13.6.0</td><td style="text-align:left;">v13.7.0</td></tr><tr><td style="text-align:left;">TouTiao</td><td style="text-align:left;">v7.9.9</td><td style="text-align:left;">v7.9.8</td></tr></tbody></table><p>For Douyin DevTools, please use <strong>v2.0.6</strong> or above, but below <strong>v3.0.0</strong>. After updating the DevTools, don&#39;t forget to modify the <strong>Debug Base library</strong> to <strong>1.88.0</strong> or above in the Douyin DevTools.</p><blockquote><p><strong>Note</strong>: if the product version does not support subpackage loading, the engine will load the subpackage as a normal asset bundle.</p></blockquote><h3 id="ordinary-game-packages" tabindex="-1">Ordinary game packages <a class="header-anchor" href="#ordinary-game-packages" aria-label="Permalink to &quot;Ordinary game packages&quot;">​</a></h3><p>In the scenario of not configuring sub-packaging, the total size of code packages allowed to be uploaded for each mini-game is capped at 20MB.</p><h3 id="packages-after-packetization" tabindex="-1">Packages after packetization <a class="header-anchor" href="#packages-after-packetization" aria-label="Permalink to &quot;Packages after packetization&quot;">​</a></h3><p>For games with subpackaging configured, the default limit is:</p><ul><li>The size of the whole game package (the entire directory of the game package) should not exceed 20MB.</li><li>The size of a single main package should not exceed 4MB.</li><li>The size of a single sub-package should not exceed 20MB.</li></ul><p>For details, please refer to the <a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/framework/subpackages/introduction/" target="_blank" rel="noreferrer">Douyin Subpackage Loading Official Documentation [cn]</a></p><h2 id="asset-management-for-douyin-mini-game-environment" tabindex="-1">Asset Management for Douyin Mini Game Environment <a class="header-anchor" href="#asset-management-for-douyin-mini-game-environment" aria-label="Permalink to &quot;Asset Management for Douyin Mini Game Environment&quot;">​</a></h2><p>In a <strong>Douyin Mini Game</strong> environment, asset management is the most special part. It differs from the browser in the following four points:</p><ol><li><p>The size of the <strong>Douyin Mini Game</strong> package cannot exceed <strong>4MB</strong>, including all the code and assets. Additional assets must be downloaded via web request.</p></li><li><p>For files downloaded from a remote server, the <strong>Douyin Mini Game</strong> environment does not have the browser&#39;s caching and outdated update mechanism.</p></li><li><p>For the assets in the <strong>Douyin Mini Game</strong> package, they are not loaded on demand in the mini game environment, but rather all the assets in the package are loaded at once, and then the game page is launched.</p></li><li><p>You cannot download script files from a remote server.</p></li></ol><p>This brings up two key issues, home page loading speed and remote asset caching and version management. For the home page loading speed, we recommend that developers only save the script file in the <strong>Douyin Mini Game</strong> package, and all other assets are downloaded from the remote server. As for downloading, caching and version management of remote assets, Cocos Creator has done the job for developers.</p><p>Specifically, developers need to do the following:</p><ol><li>When building, enable the <strong>MD5 Cache</strong> in the <strong>Build</strong> config panel.</li><li>Set the <strong>Remote service address</strong>, and then click <strong>Build</strong>.</li><li>When the build is complete, upload the <strong>res</strong> folder in the mini game release package to the server.</li><li>Delete the <strong>res</strong> folder inside the local release package.</li><li>For the test phase, you may not be able to deploy to the official server, you need to use the local server to test, then open the details page in the WeChat DevTools, check the <code>Does not verify valid domain names, web-view (business domain names), TLS versions and HTTPS certificates</code> option in the <strong>Local Settings</strong>.</li></ol><h2 id="reference-documentation" tabindex="-1">Reference documentation <a class="header-anchor" href="#reference-documentation" aria-label="Permalink to &quot;Reference documentation&quot;">​</a></h2><blockquote><p><strong>Note</strong>: some platforms only have Chinese documentation available when visiting the platforms website. It may be necessary to use Google Translate in-order to review the documentation.</p></blockquote><ul><li><a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/guide/minigame/introduction/" target="_blank" rel="noreferrer">Douyin Mini Game Developer Document Guide [cn]</a></li><li><a href="https://microapp.bytedance.com/" target="_blank" rel="noreferrer">Douyin Developer Platform [cn]</a></li><li><a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/api/mini-game/bytedance-mini-game" target="_blank" rel="noreferrer">Douyin Mini Game API Documentation [cn]</a></li><li><a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/developer-instrument/developer-instrument-update-and-download" target="_blank" rel="noreferrer">Douyin DevTools Download [cn]</a></li><li><a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/developer-instrument/development-assistance/developer-instrument-introduction" target="_blank" rel="noreferrer">Douyin DevTools Documentation [cn]</a></li></ul>',37),g=[h];function u(m,f,y,b,v,k){return o(),t("div",null,g)}const w=e(c,[["render",u]]);export{x as __pageData,w as default};
