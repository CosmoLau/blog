import{_ as t,c as s,o as i,a4 as a}from"./chunks/framework.uQk9_EO2.js";const e="/docs/cocos/assets/graphics.BjkUw8el.png",y=JSON.parse('{"title":"Graphics Component Reference","description":"","frontmatter":{},"headers":[],"relativePath":"en/ui-system/components/editor/graphics.md","filePath":"en/ui-system/components/editor/graphics.md","lastUpdated":1712305443000}'),n={name:"en/ui-system/components/editor/graphics.md"},l=a('<h1 id="graphics-component-reference" tabindex="-1">Graphics Component Reference <a class="header-anchor" href="#graphics-component-reference" aria-label="Permalink to &quot;Graphics Component Reference&quot;">​</a></h1><p>The <strong>Graphics</strong> component provides a series of drawing functions that reference the Web canvas&#39;s drawing APIs.</p><p><img src="'+e+`" alt="graphics"></p><p>Select a node in the <strong>Hierarchy</strong> panel, then click the <strong>Add Component</strong> button at the bottom of the <strong>Inspector</strong> panel and select <strong>Graphics</strong> from <strong>UI -&gt; Render</strong>. Then you can add the <strong>Graphics</strong> component to the node.</p><p>To use graphics, please refer to the <a href="./__APIDOC__/en/class/Graphics">graphics API</a> documentation and the <a href="https://github.com/cocos/cocos-test-projects/tree/v3.8/assets/cases/ui/14.graphics" target="_blank" rel="noreferrer">graphics</a> scene of the test-cases-3d project.</p><h2 id="graphic-properties" tabindex="-1">Graphic Properties <a class="header-anchor" href="#graphic-properties" aria-label="Permalink to &quot;Graphic Properties&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Function Explanation</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./../engine/ui-material"><strong>CustomMaterial</strong></a></td><td style="text-align:left;">Custom materials that can be used to achieve rendering effects such as dissolve, external glow, etc.</td></tr><tr><td style="text-align:left;"><a href="./graphics/lineWidth"><strong>LineWidth</strong></a></td><td style="text-align:left;">Current line width.</td></tr><tr><td style="text-align:left;"><a href="./graphics/lineJoin"><strong>LineJoin</strong></a></td><td style="text-align:left;">LineJoin determines how two connecting segments (of lines, arcs or curves) with non-zero lengths in a shape are joined together.</td></tr><tr><td style="text-align:left;"><a href="./graphics/lineCap"><strong>LineCap</strong></a></td><td style="text-align:left;">LineCap determines how the end points of every line are drawn.</td></tr><tr><td style="text-align:left;"><a href="./graphics/strokeColor"><strong>StrokeColor</strong></a></td><td style="text-align:left;">Stroke color. Sets or returns the color used for the stroke.</td></tr><tr><td style="text-align:left;"><a href="./graphics/fillColor"><strong>FillColor</strong></a></td><td style="text-align:left;">Sets or returns the color used for the <code>fill</code> function.</td></tr><tr><td style="text-align:left;"><a href="./graphics/miterLimit"><strong>MiterLimit</strong></a></td><td style="text-align:left;">Sets or returns the maximum miter length.</td></tr></tbody></table><h2 id="graphics-api" tabindex="-1">Graphics API <a class="header-anchor" href="#graphics-api" aria-label="Permalink to &quot;Graphics API&quot;">​</a></h2><h3 id="path" tabindex="-1">Path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;Path&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Function</th><th style="text-align:left;">Function Explanation</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="./graphics/moveTo"><strong>moveTo</strong></a> (x, y)</td><td style="text-align:left;">Move the render cursor to a specified point in the canvas without creating lines.</td></tr><tr><td style="text-align:left;"><a href="./graphics/lineTo"><strong>lineTo</strong></a> (x, y)</td><td style="text-align:left;">Adds a straight line to the path.</td></tr><tr><td style="text-align:left;"><a href="./graphics/bezierCurveTo"><strong>bezierCurveTo</strong></a> (c1x, c1y, c2x, c2y, x, y)</td><td style="text-align:left;">Adds a cubic Bézier curve to the path.</td></tr><tr><td style="text-align:left;"><a href="./graphics/quadraticCurveTo"><strong>quadraticCurveTo</strong></a> (cx, cy, x, y)</td><td style="text-align:left;">Adds a quadratic Bézier curve to the path.</td></tr><tr><td style="text-align:left;"><a href="./graphics/arc"><strong>arc</strong></a> (cx, cy, r, startAngle, endAngle, counterclockwise)</td><td style="text-align:left;">Adds an arc to the path which is centered at (cx, cy) position with radius r starting at startAngle and ending at endAngle going in the given direction by counterclockwise (defaulting to false).</td></tr><tr><td style="text-align:left;"><a href="./graphics/ellipse"><strong>ellipse</strong></a> (cx, cy, rx, ry)</td><td style="text-align:left;">Adds an ellipse to the path.</td></tr><tr><td style="text-align:left;"><a href="./graphics/circle"><strong>circle</strong></a> (cx, cy, r)</td><td style="text-align:left;">Adds a circle to the path.</td></tr><tr><td style="text-align:left;"><a href="./graphics/rect"><strong>rect</strong></a> (x, y, w, h)</td><td style="text-align:left;">Adds a rectangle to the path.</td></tr><tr><td style="text-align:left;"><a href="./graphics/close"><strong>close</strong></a> ()</td><td style="text-align:left;">Close the previous path by connecting the last point and the beginning point.</td></tr><tr><td style="text-align:left;"><a href="./graphics/stroke"><strong>stroke</strong></a> ()</td><td style="text-align:left;">Stroke the path as lines</td></tr><tr><td style="text-align:left;"><a href="./graphics/fill"><strong>fill</strong></a> ()</td><td style="text-align:left;">Close and fill a path&#39;s inner surface</td></tr><tr><td style="text-align:left;"><a href="./graphics/clear"><strong>clear</strong></a> ()</td><td style="text-align:left;">Erase any previously drawn content.</td></tr></tbody></table><h3 id="modify-the-drawing-pattern-through-script-code" tabindex="-1">Modify the drawing pattern through script code <a class="header-anchor" href="#modify-the-drawing-pattern-through-script-code" aria-label="Permalink to &quot;Modify the drawing pattern through script code&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { _decorator, Component, Graphics } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ccclass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">property</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _decorator;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ccclass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Example&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Example</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Graphics);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        g.lineWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        g.fillColor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromHEX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#ff0000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">moveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stroke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12),r=[l];function h(p,o,d,k,g,c){return i(),s("div",null,r)}const f=t(n,[["render",h]]);export{y as __pageData,f as default};
