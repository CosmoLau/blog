import{_ as e,c as s,o as i,a4 as t}from"./chunks/framework.uQk9_EO2.js";const a="/docs/cocos/assets/sweep.DYNaJZVq.jpg",g=JSON.parse('{"title":"Geometry Cast Detection","description":"","frontmatter":{},"headers":[],"relativePath":"en/physics/physics-sweep.md","filePath":"en/physics/physics-sweep.md","lastUpdated":1712305443000}'),l={name:"en/physics/physics-sweep.md"},h=t(`<h1 id="geometry-cast-detection" tabindex="-1">Geometry Cast Detection <a class="header-anchor" href="#geometry-cast-detection" aria-label="Permalink to &quot;Geometry Cast Detection&quot;">​</a></h1><p>Cocos Creator supports the sweep method since v3.8.</p><p>Geometry cast detection, which will emit different geometry along a specified ray, is like using geometry to sweep an area, hence the name <code>sweep</code>. The sweep method will check the colliders in the region of the physics world that the geometry sweeps through and return a specific result.</p><p>Quit different from the <code>rayCast</code> method, the <code>sweep</code> method allow the physics engine to cast different geometries, and return specific collision information.</p><p>The engine now supports <strong>box</strong>, <strong>sphere</strong>, and <strong>capsule</strong> to sweep through.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><ul><li><p>Box sweep</p><ul><li><p><code>sweepBox</code>: cast a box along the specified ray, and returns all colliders it hits as a result.</p></li><li><p><code>sweepBoxClosest</code>: cast a box along the specified ray, and return the closest collider it hits as a result.</p></li><li><p>parameters：</p><ul><li>worldRay: geometry.Ray： ray in world space</li><li>halfExtent: IVec3Like, half size of the box.</li><li>orientation: IQuatLike, the orientation of the box</li><li>mask: number：mask，the default is 0xffffffff，for more, refer to <a href="./physics-group-mask">Group and Mask</a> and <a href="./physics-raycast">Raycast Detection</a></li><li>maxDistance: number Maximum detection distance, the default value is 10000000, please do not use Infinity or Number.MAX_VALUE</li><li>queryTrigger： boolean, check the trigger colliders or not, the default value is true，</li></ul></li></ul></li><li><p>Sphere sweep</p><ul><li><p><code>sweepSphere</code>: cast a sphere along the specified ray, and returns all colliders it hits as a result.</p></li><li><p><code>sweepSphereClosest</code>: cast a sphere along the specified ray, and return the closest collider it hits as a result.</p></li><li><p>parameters：</p><ul><li>worldRay： geometry.Ray： Ray in world space</li><li>radius： number, the sphere radius</li><li>mask: number：mask，the default is 0xffffffff，for more, refer to <a href="./physics-group-mask">Group and Mask</a> and <a href="./physics-raycast">Raycast Detection</a></li><li>maxDistance: number Maximum detection distance, the default value is 10000000, please do not use Infinity or Number.MAX_VALUE</li><li>queryTrigger： boolean, check the trigger colliders or not, the default value is true，</li></ul></li></ul></li><li><p>Capsule sweep</p><ul><li>sweepCapsule: cast a sphere along the specified ray, and returns all colliders it hits as a result.</li><li>sweepCapsuleClosest: cast a sphere along the specified ray, and return the closest collider it hits as a result.</li><li>parameters： <ul><li>worldRay：geometry.Ray: Ray in world space</li><li>radius：number: the radius of the capsule</li><li>height：number： distance between the two hal-sphere centers of the capsule</li><li>orientation：IQuatLike: orientation of the capsule mask，the default is 0xffffffff，for more, refer to <a href="./physics-group-mask">Group and Mask</a> and <a href="./physics-raycast">Raycast Detection</a></li><li>maxDistance: number Maximum detection distance, the default value is 10000000, please do not use Infinity or Number.MAX_VALUE</li><li>queryTrigger： boolean, check the trigger colliders or not, the default value is true，</li></ul></li></ul></li></ul><p>Please refer to <a href="./__APIDOC__/zh/class/PhysicsSystem">API</a> for more information.</p><h2 id="sweep-result" tabindex="-1">Sweep result <a class="header-anchor" href="#sweep-result" aria-label="Permalink to &quot;Sweep result&quot;">​</a></h2><p>All the sweep methods return true when they hit one or more colliders. For optimal reasons, the results are stored in the PhysicsSystem class. To fetch the result, please use <code>sweepCastClosestResult/sweepCastResults</code> or clone it out in case the former result may be invalid after the next sweep.</p><ul><li><p>The result of <code>sweepBoxClosest</code>, <code>sweepSphereClosest</code>, and <code>sweepCapsuleClosest</code> is stored in <code>PhysicsSystem.instance.sweepCastResults</code>, which type is <code>PhysicsRayResult</code>, the code example is as follows</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PhysicsSystem.instance.sweepCastClosestResult;</span></span></code></pre></div></li><li><p>The result of <code>sweepBox</code>、<code>sweepSphere</code> and <code>sweepCapsule</code> is stored in <code>PhysicsSystem.instance.sweepCastResults</code>, which type is an array of <code>PhysicsRayResult</code>, the code example is as follows</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> results</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PhysicsSystem.instance.sweepCastResults;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> results.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> results[i];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul><p>The detail of <code>PhysicsRayResult</code> is as follows:</p><ul><li>hitPoint: vec3, the hit point in world space.</li><li>distance: number, the distance between the hit-point and the ray origin</li><li>collider: Collider, the collider hit by the ray.</li><li>hitNormal: vec3, the normal of the hit plane， in world space.</li></ul><p>For more, please refer to <a href="./__APIDOC__/en/class/physics.PhysicsRayResult">PhysicsRayResult</a>。</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p>Let us take the <code>sweepSphereCloset</code> as an example:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (PhysicsSystem.instance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sweepSphereClosest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._ray, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._sphereRadius </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._scale, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._mask, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._maxDistance, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._queryTrigger)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PhysicsSystem.instance.sweepCastClosestResult;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>When the result of the method is true, you can access the hit result.</p><p>For more examples, please refer to <a href="https://github.com/cocos/cocos-example-projects/tree/master/physics-3d" target="_blank" rel="noreferrer">GIT</a>。</p><p>The sweep result can be seen when running the <strong>case-physics-sweep</strong> scene after downloading the example project.</p><p><img src="`+a+'" alt="sweep.jpg"></p><p>The red point in the previous diaphragm shows the sweep result.</p>',22),n=[h];function r(p,o,c,d,k,u){return i(),s("div",null,n)}const m=e(l,[["render",r]]);export{g as __pageData,m as default};
