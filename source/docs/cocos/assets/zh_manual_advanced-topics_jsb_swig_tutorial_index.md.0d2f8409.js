import{_ as s,v as n,b as a,R as l}from"./chunks/framework.5ffcbaff.js";const p="/docs/cocos/assets/MyRefCompileError.31c1d6d0.jpg",o="/docs/cocos/assets/another-module-compile-error.5696ec40.jpg",u=JSON.parse('{"title":"在 Cocos Creator 中的 Swig 工作流教程","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manual/advanced-topics/jsb/swig/tutorial/index.md","filePath":"zh/manual/advanced-topics/jsb/swig/tutorial/index.md"}'),e={name:"zh/manual/advanced-topics/jsb/swig/tutorial/index.md"},t=l(`<h1 id="在-cocos-creator-中的-swig-工作流教程" tabindex="-1">在 Cocos Creator 中的 Swig 工作流教程 <a class="header-anchor" href="#在-cocos-creator-中的-swig-工作流教程" aria-label="Permalink to &quot;在 Cocos Creator 中的 Swig 工作流教程&quot;">​</a></h1><h2 id="如何为引擎内的新模块添加绑定" tabindex="-1">如何为引擎内的新模块添加绑定 <a class="header-anchor" href="#如何为引擎内的新模块添加绑定" aria-label="Permalink to &quot;如何为引擎内的新模块添加绑定&quot;">​</a></h2><h3 id="添加一个新模块的接口文件" tabindex="-1">添加一个新模块的接口文件 <a class="header-anchor" href="#添加一个新模块的接口文件" aria-label="Permalink to &quot;添加一个新模块的接口文件&quot;">​</a></h3><ul><li><p>添加一个新模块的接口文件到 <code>native/tools/swig-config</code> 目录, 例如： <code>new-engine-module.i</code></p></li><li><p>拷贝 <a href="https://github.com/cocos/cocos-engine/blob/1f928364f4cad22681e7830c53dc7da71a87d11f/native/tools/swig-config/swig-interface-template.i" target="_blank" rel="noreferrer">swig-interface-template.i</a> 文件中的内容到 new-engine-module.i</p></li><li><p>添加必要的配置，可以参考 <code>native/tools/swig-config</code> 目录下现有的 .i 文件配置，或者参考<a href="#如何为开发者的项目绑定一个新模块">下面的章节内容</a>。</p></li></ul><h3 id="修改-swig-config-js-文件" tabindex="-1">修改 swig-config.js 文件 <a class="header-anchor" href="#修改-swig-config-js-文件" aria-label="Permalink to &quot;修改 swig-config.js 文件&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 引擎模块配置</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> configList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    [ </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2d.i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jsb_2d_auto.cpp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#A6ACCD;">    [ </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">renderer.i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jsb_render_auto.cpp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [ </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">new-engine-module.i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jsb_new_engine_module_auto.cpp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 添加此行</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//......</span></span></code></pre></div><h3 id="生成绑定代码" tabindex="-1">生成绑定代码 <a class="header-anchor" href="#生成绑定代码" aria-label="Permalink to &quot;生成绑定代码&quot;">​</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">engine/native/tools/swig-config</span></span>
<span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">genbindings.js</span></span></code></pre></div><h3 id="修改-engine-native-cocos-cmakelists-txt" tabindex="-1">修改 <code>engine/native/cocos/CMakeLists.txt</code> <a class="header-anchor" href="#修改-engine-native-cocos-cmakelists-txt" aria-label="Permalink to &quot;修改 \`engine/native/cocos/CMakeLists.txt\`&quot;">​</a></h3><div class="language-cmake"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">######## auto</span></span>
<span class="line"><span style="color:#A6ACCD;">cocos_source_files(</span></span>
<span class="line"><span style="color:#A6ACCD;">    NO_WERROR   NO_UBUILD   cocos/bindings/auto/jsb_new_engine_module_auto.cpp </span><span style="color:#676E95;font-style:italic;"># 添加此行</span></span>
<span class="line"><span style="color:#A6ACCD;">                            cocos/bindings/auto/jsb_new_engine_module_auto.h </span><span style="color:#676E95;font-style:italic;"># 添加此行</span></span>
<span class="line"><span style="color:#A6ACCD;">    NO_WERROR   NO_UBUILD   cocos/bindings/auto/jsb_cocos_auto.cpp</span></span>
<span class="line"><span style="color:#A6ACCD;">                            cocos/bindings/auto/jsb_cocos_auto.h</span></span>
<span class="line"><span style="color:#A6ACCD;">    ......</span></span></code></pre></div><h3 id="为脚本引擎注册新的模块" tabindex="-1">为脚本引擎注册新的模块 <a class="header-anchor" href="#为脚本引擎注册新的模块" aria-label="Permalink to &quot;为脚本引擎注册新的模块&quot;">​</a></h3><p>打开 <code>jsb_module_register.cpp</code> ，做如下修改</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">......</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#if</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CC_USE_PHYSICS_PHYSX</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocos/bindings/auto/jsb_physics_auto.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocos/bindings/auto/jsb_new_engine_module_auto.h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 添加此行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">jsb_register_all_modules</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">ScriptEngine </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">se </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ScriptEngine</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getInstance</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    ......</span></span>
<span class="line"><span style="color:#A6ACCD;">    se</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">addRegisterCallback</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">register_all_my_new_engine_module</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    se</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">addAfterCleanupHook</span><span style="color:#89DDFF;">([]()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">cc</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">DeferredReleasePool</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">clear</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">JSBClassType</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">cleanup</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="如何为开发者的项目绑定一个新模块" tabindex="-1">如何为开发者的项目绑定一个新模块 <a class="header-anchor" href="#如何为开发者的项目绑定一个新模块" aria-label="Permalink to &quot;如何为开发者的项目绑定一个新模块&quot;">​</a></h2><p>假定我们已经有一个 Cocos Creator 的工程，其位于 <code>/Users/james/NewProject</code> 目录下。</p><p>打开 Cocos Creator 的构建面板，构建出一个原生平台的工程，会生成 <code>/Users/james/NewProject/native</code> 目录。</p><h3 id="绑定一个简单的类" tabindex="-1">绑定一个简单的类 <a class="header-anchor" href="#绑定一个简单的类" aria-label="Permalink to &quot;绑定一个简单的类&quot;">​</a></h3><h4 id="创建一个简单类" tabindex="-1">创建一个简单类 <a class="header-anchor" href="#创建一个简单类" aria-label="Permalink to &quot;创建一个简单类&quot;">​</a></h4><p>创建一个头文件，其位于 <code>/Users/james/NewProject/native/engine/Classes/MyObject.h</code> , 其内容为：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyObject.h</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocos/cocos.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MyObject</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">default</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MyObject</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">~MyObject</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">default</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CC_LOG_DEBUG</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==&gt; a: %d, b: %d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> _a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">_b</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> publicFloatProperty</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">1.23F</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> _a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> _b</span><span style="color:#89DDFF;">{true};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // namespace my_ns {</span></span></code></pre></div><h4 id="编写一个-swig-接口文件" tabindex="-1">编写一个 Swig 接口文件 <a class="header-anchor" href="#编写一个-swig-接口文件" aria-label="Permalink to &quot;编写一个 Swig 接口文件&quot;">​</a></h4><p>创建一个名称为 <code>my-module.i</code> 的接口文件，其位于 <code>/Users/james/NewProject/tools/swig-config</code>目录下。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.i</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#F78C6C;">module</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">target_namespace</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my_ns</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> my_module</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// %insert(header_file) %{ ... }%} 代码块中的内容最终会被原封不动地插入到生成的头文件(.h)开头的地方</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">header_file</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/jswrapper/SeApi.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/manual/jsb_conversions.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject.h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 添加这行，%include 指令表示让 swig 解析此文件，并且为此文件中的类生成绑定代码。</span></span>
<span class="line"><span style="color:#89DDFF;">%}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// %{ ... %} 代码块中的内容最终会被原封不动地插入到生成的源文件(.cpp)开头的地方</span></span>
<span class="line"><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/auto/jsb_my_module_auto.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">%}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">include </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject.h</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h4 id="编写一个-swig-配置文件-swig-config-js" tabindex="-1">编写一个 Swig 配置文件（swig-config.js） <a class="header-anchor" href="#编写一个-swig-配置文件-swig-config-js" aria-label="Permalink to &quot;编写一个 Swig 配置文件（swig-config.js）&quot;">​</a></h4><p>创建一个名为 swig-config.js 的文件，例如： <code>/Users/james/NewProject/tools/swig-config</code>目录下。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// swig-config.js</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> path </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> configList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    [ </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my-module.i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jsb_my_module_auto.cpp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> projectRoot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(__dirname</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">..</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">..</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> interfacesDir </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(projectRoot</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tools</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">swig-config</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> bindingsOutDir </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(projectRoot</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">native</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">engine</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">common</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bindings</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">auto</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// includeDirs 意思是 swig 执行时候使用的头文件搜索路径</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> includeDirs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(projectRoot</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">native</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">engine</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">common</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Classes</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    interfacesDir</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    bindingsOutDir</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    includeDirs</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    configList</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h4 id="为项目生成自动绑定文件" tabindex="-1">为项目生成自动绑定文件 <a class="header-anchor" href="#为项目生成自动绑定文件" aria-label="Permalink to &quot;为项目生成自动绑定文件&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/Users/james/NewProject/tools/swig-config</span></span>
<span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">引擎根目录</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">/native/tools/swig-config/genbindings.js</span></span></code></pre></div><p>如果成功，包含自动绑定代码的 <code>jsb_my_module_auto.cpp/.h</code> 两个文件将被创建到 <code>/Users/james/NewProject/native/engine/bindings/auto</code> 目录下。</p><h4 id="修改项目的-cmakelists-txt-文件" tabindex="-1">修改项目的 CMakeLists.txt 文件 <a class="header-anchor" href="#修改项目的-cmakelists-txt-文件" aria-label="Permalink to &quot;修改项目的 CMakeLists.txt 文件&quot;">​</a></h4><ul><li><p>打开 <code>/Users/james/NewProject/native/engine/common/CMakeLists.txt</code>, 添加 <code>MyObject.h</code> 和自动绑定代码文件</p><div class="language-cmake"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">include</span><span style="color:#A6ACCD;">(\${COCOS_X_PATH}/CMakeLists.txt)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">list</span><span style="color:#A6ACCD;">(APPEND CC_COMMON_SOURCES</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/Classes/Game.h</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/Classes/Game.cpp</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">############### 添加下面几行 ##############</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/Classes/MyObject.h </span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/bindings/auto/jsb_my_module_auto.h</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/bindings/auto/jsb_my_module_auto.cpp</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">########################################################</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div></li><li><p>修改 <code>/Users/james/NewProject/native/engine/mac/CMakeLists.txt</code></p><div class="language-cmake"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">cmake_minimum_required</span><span style="color:#A6ACCD;">(VERSION 3.8)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ......</span></span>
<span class="line"><span style="color:#A6ACCD;">cc_mac_before_target(\${EXECUTABLE_NAME})</span></span>
<span class="line"><span style="color:#89DDFF;">add_executable</span><span style="color:#A6ACCD;">(\${EXECUTABLE_NAME} \${CC_ALL_SOURCES})</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">############### 添加下面几行 ##############</span></span>
<span class="line"><span style="color:#89DDFF;">target_include_directories</span><span style="color:#A6ACCD;">(\${EXECUTABLE_NAME} PRIVATE</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CC_PROJECT_DIR}/../common</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">########################################################</span></span>
<span class="line"><span style="color:#A6ACCD;">cc_mac_after_target(\${EXECUTABLE_NAME})</span></span></code></pre></div></li></ul><h4 id="打开项目工程" tabindex="-1">打开项目工程 <a class="header-anchor" href="#打开项目工程" aria-label="Permalink to &quot;打开项目工程&quot;">​</a></h4><p>macOS: <code>/Users/james/NewProject/build/mac/proj/NewProject.xcodeproj</code></p><p>Windows: <code>&lt; 一个存放项目的目录 &gt;/NewProject/build/win64/proj/NewProject.sln</code></p><h4 id="为脚本引擎注册新的模块-1" tabindex="-1">为脚本引擎注册新的模块 <a class="header-anchor" href="#为脚本引擎注册新的模块-1" aria-label="Permalink to &quot;为脚本引擎注册新的模块&quot;">​</a></h4><p>修改 <code>Game.cpp</code></p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Game.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/auto/jsb_my_module_auto.h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 添加此行</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//......</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Game</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ......</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ScriptEngine</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getInstance</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">addRegisterCallback</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">register_all_my_module</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">BaseGame</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span></code></pre></div><h4 id="测试绑定" tabindex="-1">测试绑定 <a class="header-anchor" href="#测试绑定" aria-label="Permalink to &quot;测试绑定&quot;">​</a></h4><ul><li><p>在项目的根目录下添加一个 <code>my-module.d.ts</code> 文件，使 TS 编译器识别我们的绑定类型</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.d.ts</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    publicFloatProperty </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    print</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li><li><p>修改 <code>/Users/james/NewProject/temp/tsconfig.cocos.json</code> 文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">$schema</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://json.schemastore.org/tsconfig</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ES2015</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ES2015</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">strict</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">types</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./temp/declarations/cc.custom-macro</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./temp/declarations/jsb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./temp/declarations/cc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./temp/declarations/cc.env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./my-module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 添加这行</span></span>
<span class="line"><span style="color:#F07178;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">forceConsistentCasingInFileNames</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li><li><p>在 Cocos Creator 中打开 NewProject 项目, 在场景中添加一个立方体，并且添加一个脚本组件到这个立方体上，脚本的内容是：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_decorator</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Component</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> ccclass </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _decorator</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ccclass</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">MyComponent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">myObj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">my_ns</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MyObject</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">print</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 调用原生的 print 方法</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; myObj.publicFloatProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">publicFloatProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 获取原生中定义的属性值</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li><li><p>在 Xcode 或者 Visual Studio 中运行项目, 如果成功，可以看到如下日志输出</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">17:31:44 [DEBUG]: ==&gt; a: 100, b: 1</span></span>
<span class="line"><span style="color:#A6ACCD;">17:31:44 [DEBUG]: D/ JS: ==&gt; myObj.publicFloatProperty: 1.2300000190734863</span></span></code></pre></div></li></ul><h4 id="本节总结" tabindex="-1">本节总结 <a class="header-anchor" href="#本节总结" aria-label="Permalink to &quot;本节总结&quot;">​</a></h4><p>在此节中，我们学会了如何使用 Swig 工具绑定一个简单的 C++ 类，并把它的公有方法与属性导出到 JS 中。从下一节开始，我们将更多地关注如何使用 Swig 的一些特性来满足各式各样的 JS 绑定需求，例如：</p><ul><li>如何使用 %import 指令导入头文件依赖？</li><li>如何忽略绑定某些特殊的类、方法或属性？</li><li>如何重命名类、方法或属性？</li><li>如何将 C++ 的 getter 和 setter 函数绑定为 JS 属性？</li><li>如何配置 C++ 模块宏</li></ul><h3 id="导入头文件依赖" tabindex="-1">导入头文件依赖 <a class="header-anchor" href="#导入头文件依赖" aria-label="Permalink to &quot;导入头文件依赖&quot;">​</a></h3><p>假定我们让 MyObject 类继承于 MyRef 类。但是我们并不想绑定 MyRef 类型。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyRef.h</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyRef</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MyRef</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">default</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">~MyRef</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">default</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">addRef</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> _ref</span><span style="color:#89DDFF;">++;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">release</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">--</span><span style="color:#F07178;">_ref</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">unsigned</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> _ref</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // namespace my_ns {</span></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyObject.h</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocos/cocos.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// MyObject 继承于 MyRef</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyRef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MyObject</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">default</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MyObject</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">~MyObject</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">default</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CC_LOG_DEBUG</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==&gt; a: %d, b: %d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> _a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">_b</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> publicFloatProperty</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">1.23F</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> _a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> _b</span><span style="color:#89DDFF;">{true};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // namespace my_ns {</span></span></code></pre></div><p>当 Swig 解析 MyObject.h 的时候, 它并不知道 <code>MyRef</code> 是什么, 因此它会在终端输出一个警告信息。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">..</span><span style="color:#A6ACCD;">./Classes/MyObject.h:7: </span><span style="color:#C3E88D;">Warning</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">401</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Nothing</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">known</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">about</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">base</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">MyRef</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Ignored.</span></span></code></pre></div><p>要解决此警告也容易，我们只需要使用 <code>%import</code> 指令让 Swig 知道 MyRef 类的存在即可。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Insert code at the beginning of generated source file (.cpp)</span></span>
<span class="line"><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/auto/jsb_my_module_auto.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">%}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">include </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject.h</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>尽管 Swig 不再报错了，但是生成的代码却无法编译通过，会出现如下报错：</p><p><img src="`+p+`" alt="MyRefCompileError"></p><p>我们将在下一节中使用 <code>%ignore</code> 指令来修复此问题。</p><h3 id="忽略某些类、方法或属性" tabindex="-1">忽略某些类、方法或属性 <a class="header-anchor" href="#忽略某些类、方法或属性" aria-label="Permalink to &quot;忽略某些类、方法或属性&quot;">​</a></h3><h4 id="忽略某些类" tabindex="-1">忽略某些类 <a class="header-anchor" href="#忽略某些类" aria-label="Permalink to &quot;忽略某些类&quot;">​</a></h4><p>在上一节中，我们在 <code>js_register_my_ns_MyObject</code> 函数中碰到了一个编译错误。这是因为 <code>MyRef</code> 类型并不应该被绑定，我们可以用 <code>%ignore</code> 指令来忽略它。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.i</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">ignore </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MyRef</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">include </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject.h</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>重新生成绑定，现在应该可以编译通过了。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jsb_my_module_auto.cpp</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">js_register_my_ns_MyObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> cls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_new_MyObject</span><span style="color:#89DDFF;">));</span><span style="color:#676E95;font-style:italic;"> // parentProto will be set to nullptr</span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">publicFloatProperty</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_publicFloatProperty_get</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_publicFloatProperty_set</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineFunction</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">print</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_print</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ......</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="忽略某些方法和属性" tabindex="-1">忽略某些方法和属性 <a class="header-anchor" href="#忽略某些方法和属性" aria-label="Permalink to &quot;忽略某些方法和属性&quot;">​</a></h4><p>我们为 <code>MyObject</code> 类添加一个名为 <code>methodToBeIgnored</code> 的方法，再添加一个名为 <code>propertyToBeIgnored</code> 的属性。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyObject.h</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocos/cocos.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// MyObject 继承于 MyRef</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyRef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// .....</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">methodToBeIgnored</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> propertyToBeIgnored</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">345.123F</span><span style="color:#89DDFF;">};</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> publicFloatProperty</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">1.23F</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> _a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> _b</span><span style="color:#89DDFF;">{true};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // namespace my_ns {</span></span></code></pre></div><p>重新生成绑定, 我们可以发现 <code>methodToBeIgnored</code> 和 <code>propertyToBeIgnored</code> 的绑定代码已经被自动生成。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jsb_my_module_auto.cpp</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">js_register_my_ns_MyObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> cls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_new_MyObject</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">propertyToBeIgnored</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_propertyToBeIgnored_get</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_propertyToBeIgnored_set</span><span style="color:#89DDFF;">));</span><span style="color:#676E95;font-style:italic;"> // this property should not be bound</span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">publicFloatProperty</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_publicFloatProperty_get</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_publicFloatProperty_set</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineFunction</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">print</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_print</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineFunction</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">methodToBeIgnored</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_methodToBeIgnored</span><span style="color:#89DDFF;">));</span><span style="color:#676E95;font-style:italic;"> // this method should not be bound</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // ......</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>修改 <code>my-module.i</code>以忽略绑定这个方法与属性。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.i</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">ignore </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MyRef</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">ignore </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">MyObject</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">methodToBeIgnored</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">ignore </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">MyObject</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">propertyToBeIgnored</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">include </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject.h</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>重新生成绑定，它们将被忽略。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jsb_my_module_auto.cpp</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">js_register_my_ns_MyObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> cls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_new_MyObject</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">publicFloatProperty</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_publicFloatProperty_get</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_publicFloatProperty_set</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineFunction</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">print</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_print</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="重命名类、方法或属性" tabindex="-1">重命名类、方法或属性 <a class="header-anchor" href="#重命名类、方法或属性" aria-label="Permalink to &quot;重命名类、方法或属性&quot;">​</a></h3><p>Swig 定义了一个名为 <code>%rename</code> 指令用于重命名类、方法或者属性。我们继续使用 <code>MyObject</code> 类来展示。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyObject.h</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocos/cocos.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// MyObject 继承于 MyRef</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyRef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">methodToBeRenamed</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;"> // 添加此方法</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CC_LOG_DEBUG</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==&gt; hello MyObject::methodToBeRenamed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> propertyToBeRenamed</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">1234</span><span style="color:#89DDFF;">};</span><span style="color:#676E95;font-style:italic;"> // 添加此属性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> publicFloatProperty</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">1.23F</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> _a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> _b</span><span style="color:#89DDFF;">{true};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // namespace my_ns {</span></span></code></pre></div><p>重新生成绑定，我们发现 <code>methodToBeRenamed</code> 与 <code>propertyToBeRenamed</code> 的绑定代码已经被生成：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jsb_my_module_auto.cpp</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">js_register_my_ns_MyObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> cls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_new_MyObject</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">propertyToBeRenamed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_propertyToBeRenamed_get</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_propertyToBeRenamed_set</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">publicFloatProperty</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_publicFloatProperty_get</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_publicFloatProperty_set</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineFunction</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">print</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_print</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineFunction</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">methodToBeRenamed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyObject_methodToBeRenamed</span><span style="color:#89DDFF;">));</span></span></code></pre></div><p>如果我们要重命名 <code>propertyToBeRenamed</code> 为 <code>coolProperty</code> ，重命名 <code>methodToBeRenamed</code> 为 <code>coolMethod</code>，那么按照下面的方式修改 <code>my-module.i</code> ：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.i</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">ignore </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MyRef</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">ignore </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">MyObject</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">methodToBeIgnored</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">ignore </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">MyObject</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">propertyToBeIgnored</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">rename</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">MyObject</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">propertyToBeRenamed</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">rename</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">coolMethod</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">MyObject</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">methodToBeRenamed</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">include </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject.h</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>如果我们还想把 <code>MyObject</code> 类重命名为 <code>MyCoolObject</code>，我猜想你已经知道如何做了吧。没错，只要添加这行：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">rename</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MyCoolObject</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MyObject</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>重新生成绑定代码，所有需要被重命名的类、方法与属性都按照我们的意愿被重命名了。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jsb_my_module_auto.cpp</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// MyCoolObject, coolProperty, coolMethod are all what we want now.</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">js_register_my_ns_MyObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> cls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyCoolObject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_new_MyCoolObject</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">coolProperty</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyCoolObject_coolProperty_get</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyCoolObject_coolProperty_set</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">publicFloatProperty</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyCoolObject_publicFloatProperty_get</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyCoolObject_publicFloatProperty_set</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineFunction</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">print</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyCoolObject_print</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineFunction</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">coolMethod</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyCoolObject_coolMethod</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // ......</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>现在测试一下吧，更新如下文件 <code>my-module.d.ts</code> and <code>MyComponent.ts</code></p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.d.ts</span></span>
<span class="line"><span style="color:#A6ACCD;">declare </span><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyCoolObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">constructor</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">a</span><span style="color:#F07178;">: </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">b</span><span style="color:#F07178;">: </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    publicFloatProperty : number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> void;</span></span>
<span class="line"><span style="color:#F07178;">    coolProperty: number;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">coolMethod</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> : void;</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyComponent.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_decorator</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Component</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> ccclass </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _decorator</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ccclass</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">MyComponent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">myObj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">my_ns</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MyCoolObject</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 这里改为 MyCoolObject，因为我们在前面重命名了</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">print</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; myObj.publicFloatProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">publicFloatProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Add the follow lines</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; old: myObj.coolProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">666</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; new: myObj.coolProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">coolMethod</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在 Xcode 或者 Visual Studio 中运行项目，将得到如下日志：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">17:53:28 [DEBUG]: ==&gt; a: 100, b: 1</span></span>
<span class="line"><span style="color:#A6ACCD;">17:53:28 [DEBUG]: D/ JS: ==&gt; myObj.publicFloatProperty: 1.2300000190734863</span></span>
<span class="line"><span style="color:#A6ACCD;">17:53:28 [DEBUG]: D/ JS: ==&gt; old: myObj.coolProperty: 1234</span></span>
<span class="line"><span style="color:#A6ACCD;">17:53:28 [DEBUG]: D/ JS: ==&gt; new: myObj.coolProperty: 666</span></span>
<span class="line"><span style="color:#A6ACCD;">17:53:28 [DEBUG]: ==&gt; hello MyObject::methodToBeRenamed</span></span></code></pre></div><h3 id="定义一个-attribute" tabindex="-1">定义一个 attribute <a class="header-anchor" href="#定义一个-attribute" aria-label="Permalink to &quot;定义一个 attribute&quot;">​</a></h3><p><code>%attribute</code> 指令用于把 C++ 的 <code>getter</code> 和 <code>setter</code> 函数绑定为一个 JS 属性。</p><blockquote><p><strong>注意</strong>：如果 C++ 属性是公有的，那么理论上无需再配置 attribute 了，Swig 会自动绑定类的公有属性。</p></blockquote><h4 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h4><ol><li><p>定义一个没有 <code>setter</code> 函数的 JS 属性，即只读的 JS 属性。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">your_namespace</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">your_class_name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cpp_member_variable_type</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> js_property_name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cpp_getter_function_name</span><span style="color:#89DDFF;">)</span></span></code></pre></div></li><li><p>定义一个有 <code>getter</code> 和 <code>setter</code> 函数的 JS 属性，即可读可写的 JS 属性。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">your_namespace</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">your_class_name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cpp_member_variable_type</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> js_property_name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cpp_getter_function_name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cpp_setter_function_name</span><span style="color:#89DDFF;">)</span></span></code></pre></div></li><li><p>定义一个没有 <code>getter</code> 的 JS 属性，即可写不可读的 JS 属性。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute_writeonly</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">your_namespace</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">your_class_name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cpp_member_variable_type</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> js_property_name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cpp_setter_function_name</span><span style="color:#89DDFF;">)</span></span></code></pre></div></li></ol><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>为了方便演示，我们为 <code>MyObject</code> 添加两个新方法：<code>setType</code> 和 <code>getType</code>。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyObject.h</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocos/cocos.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// MyObject 继承于 MyRef</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyRef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">setType</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">v</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> _type </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> v</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CC_LOG_DEBUG</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==&gt; setType: v: %d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> v</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getType</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> _type</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> publicFloatProperty</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">1.23F</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> _a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> _b</span><span style="color:#89DDFF;">{true};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> _type</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">333</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // namespace my_ns {</span></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.i</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MyObject</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> type</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> getType</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setType</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">include </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject.h</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// jsb_my_module_auto.cpp</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">js_register_my_ns_MyObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#A6ACCD;">    cls</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyCoolObject_type_get</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyCoolObject_type_set</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyComponent.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_decorator</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Component</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> ccclass </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _decorator</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ccclass</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">MyComponent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">myObj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">my_ns</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MyCoolObject</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">print</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; myObj.publicFloatProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">publicFloatProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; old: myObj.coolProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">666</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; new: myObj.coolProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">coolMethod</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; old: myObj.type: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">888</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; new: myObj.type: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在 Xcode 或者 Visual Studio 中运行项目：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">18:09:53 [DEBUG]: ==&gt; a: 100, b: 1</span></span>
<span class="line"><span style="color:#A6ACCD;">18:09:53 [DEBUG]: D/ JS: ==&gt; myObj.publicFloatProperty: 1.2300000190734863</span></span>
<span class="line"><span style="color:#A6ACCD;">18:09:53 [DEBUG]: D/ JS: ==&gt; old: myObj.coolProperty: 1234</span></span>
<span class="line"><span style="color:#A6ACCD;">18:09:53 [DEBUG]: D/ JS: ==&gt; new: myObj.coolProperty: 666</span></span>
<span class="line"><span style="color:#A6ACCD;">18:09:53 [DEBUG]: ==&gt; hello MyObject::methodToBeRenamed</span></span>
<span class="line"><span style="color:#A6ACCD;">18:09:53 [DEBUG]: D/ JS: ==&gt; old: myObj.type: 333</span></span>
<span class="line"><span style="color:#A6ACCD;">18:09:53 [DEBUG]: ==&gt; setType: v: 888 // Cool, C++ setType is invoked</span></span>
<span class="line"><span style="color:#A6ACCD;">18:09:53 [DEBUG]: D/ JS: ==&gt; new: myObj.type: 888 // Cool, C++ getType is invoked, 888 is return from C++</span></span></code></pre></div><h4 id="attribute-writeonly-指令" tabindex="-1">%attribute_writeonly 指令 <a class="header-anchor" href="#attribute-writeonly-指令" aria-label="Permalink to &quot;%attribute_writeonly 指令&quot;">​</a></h4><p><code>%attribute_writeonly</code> 指令是我们为 swig <code>Cocos</code> 后端添加的一个扩展指令，它用于 C++ 只有 <code>setter</code> 函数没有 <code>getter</code> 函数的情况。</p><p>例如在 <code>native/tools/swig-config/cocos.i</code> 中有如下定义：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute_writeonly</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">cc</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">ICanvasRenderingContext2D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> width</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setWidth</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute_writeonly</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">cc</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">ICanvasRenderingContext2D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> height</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setHeight</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute_writeonly</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">cc</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">ICanvasRenderingContext2D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> lineWidth</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setLineWidth</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute_writeonly</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">cc</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">ICanvasRenderingContext2D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ccstd</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#A6ACCD;"> fillStyle</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setFillStyle</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute_writeonly</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">cc</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">ICanvasRenderingContext2D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ccstd</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#A6ACCD;"> font</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setFont</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>它的作用类似于 JS 中如下代码：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">MyNewClass</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">width</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">configurable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">enumerable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">set</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">v</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">_width</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">// No get() for property</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="关于引用类型" tabindex="-1">关于引用类型 <a class="header-anchor" href="#关于引用类型" aria-label="Permalink to &quot;关于引用类型&quot;">​</a></h4><p>如果 C++ 的 <code>get</code> 函数返回的是一个引用数据类型或者 <code>set</code> 函数接受一个引用数据类型，别忘记在 %attribute 或 %attribute_writeonly 指令的编写中添加 <code>&amp;</code> 后缀。以下 <code>ccstd::string&amp;</code> 是一个例子：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute_writeonly</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">cc</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">ICanvasRenderingContext2D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ccstd</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#A6ACCD;"> fillStyle</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setFillStyle</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>如果 <code>&amp;</code> 没有被添加，当绑定函数被调用的时候，一个临时的 <code>ccstd::string</code> 实例将被创建。这种临时对象的创建与销毁是不划算的且是可以完全避免的。</p><h4 id="arg-指令" tabindex="-1">%arg() 指令 <a class="header-anchor" href="#arg-指令" aria-label="Permalink to &quot;%arg() 指令&quot;">​</a></h4><p>有时候 C++ 变量的类型是用模版的方式来修饰的，例如：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyNewClass</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getConfig</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> _config</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">setConfig</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">config</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> _config </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> config</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> _config</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><p>我们可能会在 <code>.i</code> 中写一个这样的 <code>%attribute</code> 指令：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MyNewClass</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&gt;&amp;,</span><span style="color:#A6ACCD;"> config</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> getConfig</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setConfig</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>但当你执行 <code>node genbindings.js</code>的时候，你将得到如下错误：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Error: Macro &#39;%attribute_custom&#39; expects 7 arguments</span></span></code></pre></div><p>这是因为 <code>swig</code> 看到 <code>std::map&lt;std::string, std::string&gt;&amp;</code> 的时候并不知道如何处理逗号 (<code>,</code>) ，它将其分割为两部分，即：</p><ol><li>std::map&lt;std::string</li><li>std::string&gt;&amp;</li></ol><p>因此， %attribute 指令这行将被解析为 6 个参数，而不是正确的 5 个参数。</p><p>为了避免这种情况出现，我们需要使用 <code>%arg</code> 指令来告诉 <code>swig</code> <code>std::map&lt;std::string, std::string&gt;&amp;</code> 是一个整体。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MyNewClass</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">arg</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&gt;&amp;),</span><span style="color:#A6ACCD;"> config</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> getConfig</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setConfig</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>重新执行 <code>node genbindings.js</code>，之前的错误即消失了。</p><h4 id="不要添加-const" tabindex="-1">不要添加 <code>const</code> <a class="header-anchor" href="#不要添加-const" aria-label="Permalink to &quot;不要添加 \`const\`&quot;">​</a></h4><p>在上一示例中，我们在 %attribute 指令中使用 <code>%arg(std::map&lt;std::string, std::string&gt;&amp;)</code>。你可能会考虑在 <code>std::map</code> 前面添加一个 <code>const</code> 前缀，比如：<code>%arg(const std::map&lt;std::string, std::string&gt;&amp;)</code>。如果你这样做了，你将添加一个 <strong>只读的</strong>、只绑定 <code>MyNewClass::getConfig</code> 的 <code>config</code> 属性。这明显不是我们所期望的。如果我们需要属性是只读的，只需要不配置 <code>setter</code> 函数即可。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 不配置 setConfig 意味着属性是只读的</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MyNewClass</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">arg</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&gt;&amp;),</span><span style="color:#A6ACCD;"> config</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> getConfig</span><span style="color:#89DDFF;">);</span></span></code></pre></div><p>因此，为了让事情简单化，我们只要记得，<strong>永远不要在定义 %attribute 的时候为 C++ 变量类型使用 const 前缀</strong>。</p><h3 id="配置-c-模块宏-用于-c-模块裁剪" tabindex="-1">配置 C++ 模块宏（用于 C++ 模块裁剪） <a class="header-anchor" href="#配置-c-模块宏-用于-c-模块裁剪" aria-label="Permalink to &quot;配置 C++ 模块宏（用于 C++ 模块裁剪）&quot;">​</a></h3><p>有时候是否需要让一个类参与编译依赖于某个宏是否启用。比如，我们在 <code>MyObject.h</code> 文件中添加一个 <code>MyFeatureObject</code> 类：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyObject.h</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocos/cocos.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#ifndef</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span><span style="color:#A6ACCD;"> 1 // Enable USE_MY_FEATURE</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#if</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyFeatureObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CC_LOG_DEBUG</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==&gt; MyFeatureObject::foo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#else</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyFeatureObject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// MyObject 继承于 MyRef</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyRef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//......</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">MyFeatureObject</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getFeatureObject</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#if</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span><span style="color:#676E95;font-style:italic;"> // getFeatureObject 只在宏 USE_MY_FEATURE 启用的情况下返回有效值</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">_featureObject </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            _featureObject </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">MyFeatureObject</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> _featureObject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> _a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> _b</span><span style="color:#89DDFF;">{true};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> _type</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">333</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    MyFeatureObject</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> _featureObject</span><span style="color:#89DDFF;">{nullptr};</span><span style="color:#676E95;font-style:italic;"> // 添加此行</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // namespace my_ns {</span></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.i</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">rename</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MyCoolObject</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MyObject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">attribute</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MyObject</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> type</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> getType</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> setType</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">module_macro</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">USE_MY_FEATURE</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MyFeatureObject</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 添加此行，用于让 Swig 知道生成出来的 MyFeatureObject 类的绑定代码需要被包在 USE_MY_FEATURE 下</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">module_macro</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">USE_MY_FEATURE</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">MyObject</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">getFeatureObject</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 添加此行，用于让 Swig 知道生成出来的 MyObject::getFeatureObject 方法的绑定代码需要被包在 USE_MY_FEATURE 下</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span><span style="color:#A6ACCD;"> 1 // 这里定义为 1 是骗过 Swig，让它帮我们生成绑定代码。注意，这行必须在 %module_macro 之后</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">include </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject.h</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.d.ts</span></span>
<span class="line"><span style="color:#A6ACCD;">declare </span><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyFeatureObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> void;</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">class MyCoolObject </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">constructor</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">a: number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> b: number</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">publicFloatProperty</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> : </span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">coolProperty</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">coolMethod</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> : </span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">getFeatureObject</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> : MyFeatureObject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyComponent.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_decorator</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Component</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> ccclass </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _decorator</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ccclass</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">MyComponent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">myObj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">my_ns</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MyCoolObject</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">print</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; myObj.publicFloatProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">publicFloatProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; old: myObj.coolProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">666</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; new: myObj.coolProperty: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">coolProperty</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">coolMethod</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; old: myObj.type: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">888</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; new: myObj.type: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">featureObj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getFeatureObject</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">==&gt; featureObj: </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">featureObj</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">featureObj</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">featureObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">foo</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>重新生成绑定代码，自动绑定代码如下：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#if</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span><span style="color:#676E95;font-style:italic;"> // 注意，现在所有 MyFeatureObject 相关的绑定代码都被包在 USE_MY_FEATURE 宏下面了。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">Class</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> __jsb_my_ns_MyFeatureObject_class </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> __jsb_my_ns_MyFeatureObject_proto </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"><span style="color:#82AAFF;">SE_DECLARE_FINALIZE_FUNC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_delete_my_ns_MyFeatureObject</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">js_my_ns_MyFeatureObject_foo</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">State</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">js_register_my_ns_MyFeatureObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> cls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">create</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyFeatureObject</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_SE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_new_my_ns_MyFeatureObject</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span><span style="color:#676E95;font-style:italic;"> // USE_MY_FEATURE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">js_my_ns_MyCoolObject_getFeatureObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">State</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#if</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span><span style="color:#676E95;font-style:italic;"> // getFeatureObject 函数的绑定代码也被包在 USE_MY_FEATURE 宏下面了。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#A6ACCD;">    ok </span><span style="color:#89DDFF;">&amp;=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">nativevalue_to_se</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rval</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">thisObject</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;"> /*ctx*/</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">SE_PRECONDITION2</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ok</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyCoolObject_getFeatureObject, Error processing arguments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">SE_HOLD_RETURN_VALUE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">thisObject</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">rval</span><span style="color:#89DDFF;">());</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span><span style="color:#676E95;font-style:italic;"> // USE_MY_FEATURE</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">SE_BIND_FUNC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">js_my_ns_MyCoolObject_getFeatureObject</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">register_all_my_module</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Get the ns</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">Value nsVal</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">getProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my_ns</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">nsVal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true))</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">HandleObject </span><span style="color:#82AAFF;">jsobj</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">createPlainObject</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">nsVal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setObject</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">jsobj</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">setProperty</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my_ns</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> nsVal</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> ns </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> nsVal</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toObject</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* Register classes */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#if</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">js_register_my_ns_MyFeatureObject</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ns</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // js_register_my_ns_MyFeatureObject 也被包在 USE_MY_FEATURE 宏下面了。</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span><span style="color:#676E95;font-style:italic;"> // USE_MY_FEATURE</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">js_register_my_ns_MyObject</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ns</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在 Xcode 或者 Visual Studio 中运行项目，会得到如下输出：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">18:32:20 [DEBUG]: D/ JS: ==&gt; featureObj: [object Object] // 在 USE_MY_FEATURE 启用的情况下，featureObj 是个有效值</span></span>
<span class="line"><span style="color:#A6ACCD;">18:32:20 [DEBUG]: ==&gt; MyFeatureObject::foo // 调用 C++ foo 方法</span></span></code></pre></div><p>当我们不需要 <code>MyFeatureObject</code> 类的时候，把宏设置为 0 即可，代码示例如下：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyObject.h</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cocos/cocos.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyRef.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#ifndef</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">USE_MY_FEATURE</span><span style="color:#A6ACCD;"> 0 // Disable USE_MY_FEATURE</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span></span></code></pre></div><p>在 Xcode 或者 Visual Studio 中运行项目：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">18:54:00 [DEBUG]: D/ JS: ==&gt; featureObj: undefined // getFeatureObject returns undefined if USE_MY_FEATURE is disabled.</span></span></code></pre></div><h3 id="多个-swig-模块的配置" tabindex="-1">多个 Swig 模块的配置 <a class="header-anchor" href="#多个-swig-模块的配置" aria-label="Permalink to &quot;多个 Swig 模块的配置&quot;">​</a></h3><p>我们创建另外一个头文件，名为 <code>MyAnotherObject.h</code>。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyAnotherObject.h</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_another_ns</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyAnotherObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">135.246</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">999</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#676E95;font-style:italic;"> // namespace my_another_ns {</span></span></code></pre></div><p>更新 MyObject.h</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyObject.h</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//......</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyRef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">helloWithAnotherObject</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">my_another_ns</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">MyAnotherObject</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">CC_LOG_DEBUG</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">==&gt; helloWithAnotherObject, a: %f, b: %d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span><span style="color:#676E95;font-style:italic;"> // namespace my_ns {</span></span></code></pre></div><p>创建 <code>/Users/james/NewProject/tools/swig-config/another-module.i</code></p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// another-module.i</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#F78C6C;">module</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">target_namespace</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">another_ns</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> another_module</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// %insert(header_file) %{ ... }%} 代码块中的内容最终会被原封不动地插入到生成的头文件(.h)开头的地方</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">header_file</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/jswrapper/SeApi.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/manual/jsb_conversions.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyAnotherObject.h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 添加此行</span></span>
<span class="line"><span style="color:#89DDFF;">%}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// %{ ... %} 代码块中的内容最终会被原封不动地插入到生成的源文件(.cpp)开头的地方</span></span>
<span class="line"><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/auto/jsb_another_module_auto.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">%}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;">include </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyAnotherObject.h</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>修改 <code>/Users/james/NewProject/tools/swig-config/swig-config.js</code></p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> path </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> configList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my-module.i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jsb_my_module_auto.cpp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    [ &#39;another-module.i&#39;, &#39;jsb_another_module_auto.cpp&#39; ], // 添加此行</span></span>
<span class="line"><span style="color:#A6ACCD;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> projectRoot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">__dirname</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">..</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">..</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> interfacesDir </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">projectRoot</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tools</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">swig-config</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> bindingsOutDir </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">projectRoot</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">native</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">engine</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">common</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bindings</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">auto</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> includeDirs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">projectRoot</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">native</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">engine</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">common</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Classes</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#89DDFF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">module</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">exports </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">    interfacesDir</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    bindingsOutDir</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    includeDirs</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    configList</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>修改 <code>/Users/james/NewProject/native/engine/common/CMakeLists.txt</code></p><div class="language-cmake"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># /Users/james/NewProject/native/engine/common/CMakeLists.txt</span></span>
<span class="line"><span style="color:#89DDFF;">list</span><span style="color:#A6ACCD;">(APPEND CC_COMMON_SOURCES</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/Classes/Game.h</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/Classes/Game.cpp</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/Classes/MyObject.h</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/Classes/MyAnotherObject.h </span><span style="color:#676E95;font-style:italic;"># Add this line</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/bindings/auto/jsb_my_module_auto.h</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/bindings/auto/jsb_my_module_auto.cpp</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/bindings/auto/jsb_another_module_auto.h </span><span style="color:#676E95;font-style:italic;"># Add this line</span></span>
<span class="line"><span style="color:#A6ACCD;">    \${CMAKE_CURRENT_LIST_DIR}/bindings/auto/jsb_another_module_auto.cpp </span><span style="color:#676E95;font-style:italic;"># Add this line</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>重新生成绑定。</p><p>更新 Game.cpp：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Game.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/auto/jsb_my_module_auto.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/auto/jsb_another_module_auto.h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Add this line</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//......</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Game</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//......</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ScriptEngine</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getInstance</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">addRegisterCallback</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">register_all_my_module</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">se</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">ScriptEngine</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getInstance</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">addRegisterCallback</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">register_all_another_module</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // Add this line</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">BaseGame</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在 Xcode 或者 Visual Studio 中编译，但是得到如下错误：</p><p><img src="`+o+`" alt=""></p><p>因为 MyObject 类依赖了 MyAnotherObject 类，而 MyAnotherObject 类是被定义在另外一个模块中的。我们需要修改 <code>my-module.i</code> 并添加 <code>#include &quot;bindings/auto/jsb_another_module_auto.h&quot;</code>。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.i</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#F78C6C;">module</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">target_namespace</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my_ns</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> my_module</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// %insert(header_file) %{ ... }%} 代码块中的内容最终会被原封不动地插入到生成的头文件(.h)开头的地方</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">header_file</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#pragma</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">once</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/jswrapper/SeApi.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/manual/jsb_conversions.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyObject.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">%}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// %{ ... %} 代码块中的内容最终会被原封不动地插入到生成的源文件(.cpp)开头的地方</span></span>
<span class="line"><span style="color:#89DDFF;">%{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/auto/jsb_my_module_auto.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bindings/auto/jsb_another_module_auto.h</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// Add this line</span></span>
<span class="line"><span style="color:#89DDFF;">%}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ......</span></span></code></pre></div><p>在 Xcode 或者 Visual Studio 中编译项目，现在应该可以正常编译了。</p><p>下一步，我们需要更新 .d.ts 文件：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// my-module.d.ts</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">my_ns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyFeatureObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    foo</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyCoolObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    publicFloatProperty </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    print</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    coolProperty</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    coolMethod</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    getFeatureObject</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyFeatureObject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    helloWithAnotherObject</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">another_ns</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">MyAnotherObject</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 添加这行</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 添加以下行</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">another_ns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">MyAnotherObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>添加更多的用于读取 <code>MyAnotherObject</code> 类属性的测试代码：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// MyComponent.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_decorator</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Component</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> ccclass </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _decorator</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">ccclass</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">MyComponent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">myObj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">my_ns</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MyCoolObject</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// ......</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">anotherObj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">another_ns</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MyAnotherObject</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 添加此行</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">myObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">helloWithAnotherObject</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">anotherObj</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 添加此行</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在 Xcode 或者 Visual Studio 中编译项目，得到如下输出：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">15:05:36 [DEBUG]: ==&gt; helloWithAnotherObject, a: 135.246002, b: 999</span></span></code></pre></div>`,163),c=[t];function r(y,F,D,i,C,A){return n(),a("div",null,c)}const b=s(e,[["render",r]]);export{u as __pageData,b as default};
