import{_ as s,o as a,c as o,W as e}from"./chunks/framework.5a937eaf.js";const D=JSON.parse('{"title":"Guide","description":"","frontmatter":{},"headers":[],"relativePath":"guide.md","filePath":"guide.md"}'),n={name:"guide.md"},l=e(`<h1 id="guide" tabindex="-1">Guide <a class="header-anchor" href="#guide" aria-label="Permalink to &quot;Guide&quot;">​</a></h1><h2 id="monorepo" tabindex="-1">Monorepo <a class="header-anchor" href="#monorepo" aria-label="Permalink to &quot;Monorepo&quot;">​</a></h2><p>It&#39;s recommended to add husky in root <code>package.json</code>. You can use tools like <a href="https://github.com/lerna/lerna" target="_blank" rel="noreferrer">lerna</a> and filters to only run scripts in packages that have been changed.</p><h2 id="custom-directory" tabindex="-1">Custom directory <a class="header-anchor" href="#custom-directory" aria-label="Permalink to &quot;Custom directory&quot;">​</a></h2><p>If you want to install husky in another directory, for example <code>.config</code>, you can pass it to <code>install</code> command. For example:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2Prk7" id="tab-xJny19S" checked="checked"><label for="tab-xJny19S">package.json</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">prepare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">husky install .config/husky</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div></div><p>Another case you may be in is if your <code>package.json</code> file and <code>.git</code> directory are not at the same level. For example, <code>project/.git</code> and <code>project/front/package.json</code>.</p><p>By design, <code>husky install</code> must be run in the same directory as <code>.git</code>, but you can change directory during <code>prepare</code> script and pass a subdirectory:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-s-rmp" id="tab-sgPjjv5" checked="checked"><label for="tab-sgPjjv5">package.json</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">prepare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cd .. &amp;&amp; husky install front/.husky</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div></div><p>In your hooks, you&#39;ll also need to change directory:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-xzHpD" id="tab-bpAnm9X" checked="checked"><label for="tab-bpAnm9X">.husky/pre-commit</label></div><div class="blocks"><div class="language-shell active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># ...</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">front</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span></span></code></pre></div></div></div><h2 id="bypass-hooks" tabindex="-1">Bypass hooks <a class="header-anchor" href="#bypass-hooks" aria-label="Permalink to &quot;Bypass hooks&quot;">​</a></h2><p>You can bypass <code>pre-commit</code> and <code>commit-msg</code> hooks using Git <code>-n/--no-verify</code> option:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yolo!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--no-verify</span></span></code></pre></div><p>For Git commands that don&#39;t have a <code>--no-verify</code> option, you can use <code>HUSKY</code> environment variable:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">HUSKY</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># yolo!</span></span></code></pre></div><h2 id="disable-husky-in-ci-docker-prod" tabindex="-1">Disable husky in CI/Docker/Prod <a class="header-anchor" href="#disable-husky-in-ci-docker-prod" aria-label="Permalink to &quot;Disable husky in CI/Docker/Prod&quot;">​</a></h2><p>There&#39;s no right or wrong way to disable husky in CI/Docker/Prod context and is highly <strong>dependent on your use-case</strong>.</p><h3 id="with-npm" tabindex="-1">With npm <a class="header-anchor" href="#with-npm" aria-label="Permalink to &quot;With npm&quot;">​</a></h3><p>If you want to prevent husky from installing completely</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ci</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--omit=dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--ignore-scripts</span></span></code></pre></div><p>Alternatively, you can specifically disable <code>prepare</code> script with</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pkg</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">delete</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">scripts.prepare</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ci</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--omit=dev</span></span></code></pre></div><h3 id="with-a-custom-script" tabindex="-1">With a custom script <a class="header-anchor" href="#with-a-custom-script" aria-label="Permalink to &quot;With a custom script&quot;">​</a></h3><p>You can create a custom JS script and conditionally require husky and install hooks.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-AUDYe" id="tab-QNbbFGu" checked="checked"><label for="tab-QNbbFGu">package.json</label><input type="radio" name="group-AUDYe" id="tab-MqHGrg5"><label for="tab-MqHGrg5">prepare.js</label></div><div class="blocks"><div class="language-json active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prepare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node ./prepare.js</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> isCi </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CI </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">isCi) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">husky</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">install</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div></div><p>Or make <code>prepare</code> script fail silently if husky is not installed:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prepare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node -e </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">try { require(&#39;husky&#39;).install() } catch (e) {if (e.code !== &#39;MODULE_NOT_FOUND&#39;) throw e}</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h3 id="with-env-variables" tabindex="-1">With env variables <a class="header-anchor" href="#with-env-variables" aria-label="Permalink to &quot;With env variables&quot;">​</a></h3><p>You can set <code>HUSKY</code> environment variable to <code>0</code> in your CI config file, to disable hooks installation.</p><p>Alternatively, most Continuous Integration Servers set a <code>CI</code> environment variable. You can use it in your hooks to detect if it&#39;s running in a CI.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-c-Ips" id="tab-PwxIHo1" checked="checked"><label for="tab-PwxIHo1">.husky/pre-commit</label></div><div class="blocks"><div class="language-shell active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># ...</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-n</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$CI</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">exit</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span></code></pre></div></div></div><h3 id="with-is-ci" tabindex="-1">With is-ci <a class="header-anchor" href="#with-is-ci" aria-label="Permalink to &quot;With is-ci&quot;">​</a></h3><p>You can also use <a href="https://github.com/watson/is-ci" target="_blank" rel="noreferrer">is-ci</a> in your <code>prepare</code> script to conditionally install husky</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is-ci</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-X8XWC" id="tab-etG1lJh" checked="checked"><label for="tab-etG1lJh">package.json</label></div><div class="blocks"><div class="language-js active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">prepare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">is-ci || husky install</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div></div><h2 id="test-hooks" tabindex="-1">Test hooks <a class="header-anchor" href="#test-hooks" aria-label="Permalink to &quot;Test hooks&quot;">​</a></h2><p>If you want to test a hook, you can add <code>exit 1</code> at the end of the script to abort git command.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-8PjGD" id="tab-uw9ig7p" checked="checked"><label for="tab-uw9ig7p">.husky/pre-commit</label></div><div class="blocks"><div class="language-shell active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># ...</span></span>
<span class="line"><span style="color:#82AAFF;">exit</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Commit will be aborted</span></span></code></pre></div></div></div><h2 id="git-flow" tabindex="-1">Git-flow <a class="header-anchor" href="#git-flow" aria-label="Permalink to &quot;Git-flow&quot;">​</a></h2><p>If using <a href="https://github.com/petervanderdoes/gitflow-avh/" target="_blank" rel="noreferrer">git-flow</a> you need to ensure your git-flow hooks directory is set to use Husky&#39;s (<code>.husky</code> by default).</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gitflow.path.hooks</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.husky</span></span></code></pre></div><p><strong>Note:</strong></p><ul><li>If you are configuring git-flow <em>after</em> you have installed husky, the git-flow setup process will correctly suggest the .husky directory.</li><li>If you have set a <a href="#custom-directory">custom directory</a> for husky you need to specify that (ex. <code>git config gitflow.path.hooks .config/husky</code>)</li></ul><p>To <strong>revert</strong> the git-flow hooks directory back to its default you need to reset the config to point to the default Git hooks directory.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gitflow.path.hooks</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.git/hooks</span></span></code></pre></div>`,46),t=[l];function p(c,r,i,d,y,h){return a(),o("div",null,t)}const C=s(n,[["render",p]]);export{D as __pageData,C as default};
